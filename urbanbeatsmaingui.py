# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'urbanbeatsmaingui.ui'
#
# Created by: PyQt5 UI code generator 5.6
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1366, 700)
        self.Central_Widget = QtWidgets.QWidget(MainWindow)
        self.Central_Widget.setObjectName("Central_Widget")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.Central_Widget)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.Progress_Widget = QtWidgets.QWidget(self.Central_Widget)
        self.Progress_Widget.setMinimumSize(QtCore.QSize(400, 0))
        self.Progress_Widget.setObjectName("Progress_Widget")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.Progress_Widget)
        self.verticalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.ScenarioView_lbl = QtWidgets.QLabel(self.Progress_Widget)
        self.ScenarioView_lbl.setObjectName("ScenarioView_lbl")
        self.verticalLayout_7.addWidget(self.ScenarioView_lbl)
        self.ScenarioView_Widget = QtWidgets.QTabWidget(self.Progress_Widget)
        self.ScenarioView_Widget.setMinimumSize(QtCore.QSize(0, 400))
        self.ScenarioView_Widget.setObjectName("ScenarioView_Widget")
        self.Narrative_tab = QtWidgets.QWidget()
        self.Narrative_tab.setObjectName("Narrative_tab")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.Narrative_tab)
        self.verticalLayout_8.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.Narrative = QtWidgets.QPlainTextEdit(self.Narrative_tab)
        self.Narrative.setObjectName("Narrative")
        self.verticalLayout_8.addWidget(self.Narrative)
        self.ScenarioView_Widget.addTab(self.Narrative_tab, "")
        self.Simulation_tab = QtWidgets.QWidget()
        self.Simulation_tab.setObjectName("Simulation_tab")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.Simulation_tab)
        self.verticalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.Simulation = QtWidgets.QPlainTextEdit(self.Simulation_tab)
        self.Simulation.setObjectName("Simulation")
        self.verticalLayout_6.addWidget(self.Simulation)
        self.ScenarioView_Widget.addTab(self.Simulation_tab, "")
        self.DataSummary_tab = QtWidgets.QWidget()
        self.DataSummary_tab.setObjectName("DataSummary_tab")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.DataSummary_tab)
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.DataSummary = QtWidgets.QTableWidget(self.DataSummary_tab)
        self.DataSummary.setObjectName("DataSummary")
        self.DataSummary.setColumnCount(3)
        self.DataSummary.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.DataSummary.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.DataSummary.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.DataSummary.setHorizontalHeaderItem(2, item)
        self.verticalLayout_4.addWidget(self.DataSummary)
        self.DataSummary_check = QtWidgets.QCheckBox(self.DataSummary_tab)
        self.DataSummary_check.setObjectName("DataSummary_check")
        self.verticalLayout_4.addWidget(self.DataSummary_check)
        self.ScenarioView_Widget.addTab(self.DataSummary_tab, "")
        self.Log_tab = QtWidgets.QWidget()
        self.Log_tab.setObjectName("Log_tab")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.Log_tab)
        self.verticalLayout_9.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.Log = QtWidgets.QPlainTextEdit(self.Log_tab)
        self.Log.setObjectName("Log")
        self.verticalLayout_9.addWidget(self.Log)
        self.ScenarioView_Widget.addTab(self.Log_tab, "")
        self.verticalLayout_7.addWidget(self.ScenarioView_Widget)
        self.OutputConsole_lbl = QtWidgets.QLabel(self.Progress_Widget)
        self.OutputConsole_lbl.setObjectName("OutputConsole_lbl")
        self.verticalLayout_7.addWidget(self.OutputConsole_lbl)
        self.OutputConsole = QtWidgets.QTextEdit(self.Progress_Widget)
        self.OutputConsole.setObjectName("OutputConsole")
        self.verticalLayout_7.addWidget(self.OutputConsole)
        self.ProgressBar = QtWidgets.QProgressBar(self.Progress_Widget)
        self.ProgressBar.setProperty("value", 0)
        self.ProgressBar.setInvertedAppearance(False)
        self.ProgressBar.setObjectName("ProgressBar")
        self.verticalLayout_7.addWidget(self.ProgressBar)
        self.horizontalLayout_3.addWidget(self.Progress_Widget)
        self.DataView_Widget = QtWidgets.QWidget(self.Central_Widget)
        self.DataView_Widget.setObjectName("DataView_Widget")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.DataView_Widget)
        self.verticalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.DataView_lbl = QtWidgets.QLabel(self.DataView_Widget)
        self.DataView_lbl.setMinimumSize(QtCore.QSize(0, 13))
        self.DataView_lbl.setMaximumSize(QtCore.QSize(16777215, 20))
        self.DataView_lbl.setObjectName("DataView_lbl")
        self.verticalLayout_5.addWidget(self.DataView_lbl)
        self.DataView_Controls = QtWidgets.QWidget(self.DataView_Widget)
        self.DataView_Controls.setMinimumSize(QtCore.QSize(0, 50))
        self.DataView_Controls.setMaximumSize(QtCore.QSize(16777215, 50))
        self.DataView_Controls.setObjectName("DataView_Controls")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.DataView_Controls)
        self.horizontalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.DataView_extent = QtWidgets.QPushButton(self.DataView_Controls)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icons/2216358 - globe locati.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.DataView_extent.setIcon(icon)
        self.DataView_extent.setObjectName("DataView_extent")
        self.horizontalLayout_4.addWidget(self.DataView_extent)
        self.DataView_meta = QtWidgets.QPushButton(self.DataView_Controls)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icons/Info-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.DataView_meta.setIcon(icon1)
        self.DataView_meta.setObjectName("DataView_meta")
        self.horizontalLayout_4.addWidget(self.DataView_meta)
        self.DataView_options = QtWidgets.QPushButton(self.DataView_Controls)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/icons/Settings-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.DataView_options.setIcon(icon2)
        self.DataView_options.setObjectName("DataView_options")
        self.horizontalLayout_4.addWidget(self.DataView_options)
        self.verticalLayout_5.addWidget(self.DataView_Controls)
        self.DataView_web = QtWebKitWidgets.QWebView(self.DataView_Widget)
        self.DataView_web.setUrl(QtCore.QUrl("about:blank"))
        self.DataView_web.setObjectName("DataView_web")
        self.verticalLayout_5.addWidget(self.DataView_web)
        self.horizontalLayout_3.addWidget(self.DataView_Widget)
        MainWindow.setCentralWidget(self.Central_Widget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1366, 21))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuProject = QtWidgets.QMenu(self.menubar)
        self.menuProject.setObjectName("menuProject")
        self.menuScenario = QtWidgets.QMenu(self.menuProject)
        self.menuScenario.setObjectName("menuScenario")
        self.menuSimulation = QtWidgets.QMenu(self.menubar)
        self.menuSimulation.setObjectName("menuSimulation")
        self.menuUrban_Modelling = QtWidgets.QMenu(self.menuSimulation)
        self.menuUrban_Modelling.setObjectName("menuUrban_Modelling")
        self.menuUrban_Planning = QtWidgets.QMenu(self.menuSimulation)
        self.menuUrban_Planning.setObjectName("menuUrban_Planning")
        self.menuSpatial_Mapping = QtWidgets.QMenu(self.menuSimulation)
        self.menuSpatial_Mapping.setObjectName("menuSpatial_Mapping")
        self.menuInfrastructure = QtWidgets.QMenu(self.menuSimulation)
        self.menuInfrastructure.setObjectName("menuInfrastructure")
        self.menuSocio_Economic = QtWidgets.QMenu(self.menuSimulation)
        self.menuSocio_Economic.setObjectName("menuSocio_Economic")
        self.menuSpatial_Setup = QtWidgets.QMenu(self.menuSimulation)
        self.menuSpatial_Setup.setObjectName("menuSpatial_Setup")
        self.menuClimate_Setup = QtWidgets.QMenu(self.menuSimulation)
        self.menuClimate_Setup.setObjectName("menuClimate_Setup")
        self.menuAdvanced = QtWidgets.QMenu(self.menubar)
        self.menuAdvanced.setObjectName("menuAdvanced")
        self.menuUrban_Modules = QtWidgets.QMenu(self.menuAdvanced)
        self.menuUrban_Modules.setObjectName("menuUrban_Modules")
        self.menuWindow = QtWidgets.QMenu(self.menubar)
        self.menuWindow.setObjectName("menuWindow")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        self.menuData = QtWidgets.QMenu(self.menubar)
        self.menuData.setObjectName("menuData")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.General_toolbar = QtWidgets.QToolBar(MainWindow)
        self.General_toolbar.setObjectName("General_toolbar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.General_toolbar)
        self.DataDock = QtWidgets.QDockWidget(MainWindow)
        self.DataDock.setMinimumSize(QtCore.QSize(297, 167))
        self.DataDock.setFloating(False)
        self.DataDock.setFeatures(QtWidgets.QDockWidget.AllDockWidgetFeatures)
        self.DataDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea|QtCore.Qt.RightDockWidgetArea)
        self.DataDock.setObjectName("DataDock")
        self.DataDock_Contents = QtWidgets.QWidget()
        self.DataDock_Contents.setObjectName("DataDock_Contents")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.DataDock_Contents)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.DataDock_View = QtWidgets.QTreeWidget(self.DataDock_Contents)
        self.DataDock_View.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.DataDock_View.setObjectName("DataDock_View")
        font = QtGui.QFont()
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.DataDock_View.headerItem().setFont(0, font)
        item_0 = QtWidgets.QTreeWidgetItem(self.DataDock_View)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_2 = QtWidgets.QTreeWidgetItem(item_1)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_2 = QtWidgets.QTreeWidgetItem(item_1)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_2 = QtWidgets.QTreeWidgetItem(item_1)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_2 = QtWidgets.QTreeWidgetItem(item_1)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_2 = QtWidgets.QTreeWidgetItem(item_1)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_2 = QtWidgets.QTreeWidgetItem(item_1)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_2 = QtWidgets.QTreeWidgetItem(item_1)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_2 = QtWidgets.QTreeWidgetItem(item_1)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_2 = QtWidgets.QTreeWidgetItem(item_1)
        item_0 = QtWidgets.QTreeWidgetItem(self.DataDock_View)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_2 = QtWidgets.QTreeWidgetItem(item_1)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_2 = QtWidgets.QTreeWidgetItem(item_1)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_2 = QtWidgets.QTreeWidgetItem(item_1)
        item_0 = QtWidgets.QTreeWidgetItem(self.DataDock_View)
        self.verticalLayout_2.addWidget(self.DataDock_View)
        self.DataDock_Controls = QtWidgets.QWidget(self.DataDock_Contents)
        self.DataDock_Controls.setMinimumSize(QtCore.QSize(0, 50))
        self.DataDock_Controls.setObjectName("DataDock_Controls")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.DataDock_Controls)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.addData = QtWidgets.QPushButton(self.DataDock_Controls)
        self.addData.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/icons/add-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.addData.setIcon(icon3)
        self.addData.setIconSize(QtCore.QSize(20, 20))
        self.addData.setObjectName("addData")
        self.horizontalLayout.addWidget(self.addData)
        self.removeData = QtWidgets.QPushButton(self.DataDock_Controls)
        self.removeData.setText("")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/icons/delete-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.removeData.setIcon(icon4)
        self.removeData.setIconSize(QtCore.QSize(20, 20))
        self.removeData.setObjectName("removeData")
        self.horizontalLayout.addWidget(self.removeData)
        self.infoData = QtWidgets.QPushButton(self.DataDock_Controls)
        self.infoData.setText("")
        self.infoData.setIcon(icon1)
        self.infoData.setIconSize(QtCore.QSize(20, 20))
        self.infoData.setObjectName("infoData")
        self.horizontalLayout.addWidget(self.infoData)
        self.previewData = QtWidgets.QPushButton(self.DataDock_Controls)
        self.previewData.setText("")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/icons/eye-2387853_960_720.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.previewData.setIcon(icon5)
        self.previewData.setIconSize(QtCore.QSize(20, 20))
        self.previewData.setObjectName("previewData")
        self.horizontalLayout.addWidget(self.previewData)
        self.expcolData = QtWidgets.QPushButton(self.DataDock_Controls)
        self.expcolData.setText("")
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/icons/arrowright.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.expcolData.setIcon(icon6)
        self.expcolData.setIconSize(QtCore.QSize(20, 20))
        self.expcolData.setObjectName("expcolData")
        self.horizontalLayout.addWidget(self.expcolData)
        self.verticalLayout_2.addWidget(self.DataDock_Controls)
        self.DataDock.setWidget(self.DataDock_Contents)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.DataDock)
        self.ScenarioDock = QtWidgets.QDockWidget(MainWindow)
        self.ScenarioDock.setMinimumSize(QtCore.QSize(280, 189))
        self.ScenarioDock.setFloating(False)
        self.ScenarioDock.setFeatures(QtWidgets.QDockWidget.AllDockWidgetFeatures)
        self.ScenarioDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea|QtCore.Qt.RightDockWidgetArea)
        self.ScenarioDock.setObjectName("ScenarioDock")
        self.ScenarioDock_Contents = QtWidgets.QWidget()
        self.ScenarioDock_Contents.setObjectName("ScenarioDock_Contents")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.ScenarioDock_Contents)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.ScenarioDock_Combo = QtWidgets.QComboBox(self.ScenarioDock_Contents)
        self.ScenarioDock_Combo.setObjectName("ScenarioDock_Combo")
        self.ScenarioDock_Combo.addItem("")
        self.verticalLayout_3.addWidget(self.ScenarioDock_Combo)
        self.ScenarioDock_View = QtWidgets.QTreeWidget(self.ScenarioDock_Contents)
        self.ScenarioDock_View.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.ScenarioDock_View.setAlternatingRowColors(False)
        self.ScenarioDock_View.setWordWrap(True)
        self.ScenarioDock_View.setObjectName("ScenarioDock_View")
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.ScenarioDock_View.headerItem().setFont(0, font)
        item_0 = QtWidgets.QTreeWidgetItem(self.ScenarioDock_View)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/icons/pages-brown-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_0.setIcon(0, icon7)
        item_0 = QtWidgets.QTreeWidgetItem(self.ScenarioDock_View)
        item_0.setIcon(0, icon2)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_0 = QtWidgets.QTreeWidgetItem(self.ScenarioDock_View)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/icons/Misc-Database-3-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_0.setIcon(0, icon8)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_0 = QtWidgets.QTreeWidgetItem(self.ScenarioDock_View)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/icons/palette-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_0.setIcon(0, icon9)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setCheckState(0, QtCore.Qt.Checked)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/icons/Data-Grid-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_1.setIcon(0, icon10)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setCheckState(0, QtCore.Qt.Checked)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/icons/cloudy-with-rain-2667018_960_720.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_1.setIcon(0, icon11)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setCheckState(0, QtCore.Qt.Checked)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(":/icons/map-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_1.setIcon(0, icon12)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setCheckState(0, QtCore.Qt.Checked)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap(":/icons/Very-Basic-Design-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_1.setIcon(0, icon13)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setCheckState(0, QtCore.Qt.Checked)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap(":/icons/community-users-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_1.setIcon(0, icon14)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setCheckState(0, QtCore.Qt.Checked)
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap(":/icons/GISLayers.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_1.setIcon(0, icon15)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setCheckState(0, QtCore.Qt.Checked)
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap(":/icons/Actions-view-pim-tasks-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_1.setIcon(0, icon16)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setCheckState(0, QtCore.Qt.Checked)
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap(":/icons/Bench-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_1.setIcon(0, icon17)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setCheckState(0, QtCore.Qt.Checked)
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap(":/icons/Bar-chart-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_1.setIcon(0, icon18)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setCheckState(0, QtCore.Qt.Checked)
        icon19 = QtGui.QIcon()
        icon19.addPixmap(QtGui.QPixmap(":/icons/Market-Analysis-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_1.setIcon(0, icon19)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setCheckState(0, QtCore.Qt.Checked)
        icon20 = QtGui.QIcon()
        icon20.addPixmap(QtGui.QPixmap(":/icons/Data-Flow-Chart-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_1.setIcon(0, icon20)
        item_0 = QtWidgets.QTreeWidgetItem(self.ScenarioDock_View)
        icon21 = QtGui.QIcon()
        icon21.addPixmap(QtGui.QPixmap(":/icons/export-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_0.setIcon(0, icon21)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        self.verticalLayout_3.addWidget(self.ScenarioDock_View)
        self.ScenarioDock_Controls = QtWidgets.QWidget(self.ScenarioDock_Contents)
        self.ScenarioDock_Controls.setObjectName("ScenarioDock_Controls")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.ScenarioDock_Controls)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.newScenario = QtWidgets.QPushButton(self.ScenarioDock_Controls)
        self.newScenario.setIcon(icon3)
        self.newScenario.setIconSize(QtCore.QSize(20, 20))
        self.newScenario.setObjectName("newScenario")
        self.horizontalLayout_2.addWidget(self.newScenario)
        self.editScenario = QtWidgets.QPushButton(self.ScenarioDock_Controls)
        icon22 = QtGui.QIcon()
        icon22.addPixmap(QtGui.QPixmap(":/icons/Editing-edit-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.editScenario.setIcon(icon22)
        self.editScenario.setObjectName("editScenario")
        self.horizontalLayout_2.addWidget(self.editScenario)
        self.deleteScenario = QtWidgets.QPushButton(self.ScenarioDock_Controls)
        self.deleteScenario.setIcon(icon4)
        self.deleteScenario.setObjectName("deleteScenario")
        self.horizontalLayout_2.addWidget(self.deleteScenario)
        self.verticalLayout_3.addWidget(self.ScenarioDock_Controls)
        self.ScenarioDock.setWidget(self.ScenarioDock_Contents)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.ScenarioDock)
        self.ModuleDock = QtWidgets.QDockWidget(MainWindow)
        self.ModuleDock.setFloating(False)
        self.ModuleDock.setFeatures(QtWidgets.QDockWidget.AllDockWidgetFeatures)
        self.ModuleDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea|QtCore.Qt.RightDockWidgetArea)
        self.ModuleDock.setObjectName("ModuleDock")
        self.ModuleDock_Contents = QtWidgets.QWidget()
        self.ModuleDock_Contents.setObjectName("ModuleDock_Contents")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.ModuleDock_Contents)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.lbl_dataproc = QtWidgets.QLabel(self.ModuleDock_Contents)
        self.lbl_dataproc.setObjectName("lbl_dataproc")
        self.verticalLayout.addWidget(self.lbl_dataproc)
        self.ModuleDock_spatialsetup = QtWidgets.QPushButton(self.ModuleDock_Contents)
        self.ModuleDock_spatialsetup.setMinimumSize(QtCore.QSize(138, 25))
        self.ModuleDock_spatialsetup.setMaximumSize(QtCore.QSize(16777215, 25))
        self.ModuleDock_spatialsetup.setIcon(icon10)
        self.ModuleDock_spatialsetup.setIconSize(QtCore.QSize(20, 20))
        self.ModuleDock_spatialsetup.setCheckable(False)
        self.ModuleDock_spatialsetup.setFlat(False)
        self.ModuleDock_spatialsetup.setObjectName("ModuleDock_spatialsetup")
        self.verticalLayout.addWidget(self.ModuleDock_spatialsetup)
        self.ModuleDock_climatesetup = QtWidgets.QPushButton(self.ModuleDock_Contents)
        self.ModuleDock_climatesetup.setMinimumSize(QtCore.QSize(138, 25))
        self.ModuleDock_climatesetup.setMaximumSize(QtCore.QSize(16777215, 25))
        self.ModuleDock_climatesetup.setIcon(icon11)
        self.ModuleDock_climatesetup.setIconSize(QtCore.QSize(20, 20))
        self.ModuleDock_climatesetup.setFlat(False)
        self.ModuleDock_climatesetup.setObjectName("ModuleDock_climatesetup")
        self.verticalLayout.addWidget(self.ModuleDock_climatesetup)
        self.sep_dataproc = QtWidgets.QFrame(self.ModuleDock_Contents)
        self.sep_dataproc.setFrameShape(QtWidgets.QFrame.HLine)
        self.sep_dataproc.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.sep_dataproc.setObjectName("sep_dataproc")
        self.verticalLayout.addWidget(self.sep_dataproc)
        self.lbl_planning = QtWidgets.QLabel(self.ModuleDock_Contents)
        self.lbl_planning.setObjectName("lbl_planning")
        self.verticalLayout.addWidget(self.lbl_planning)
        self.ModuleDock_urbandev = QtWidgets.QPushButton(self.ModuleDock_Contents)
        self.ModuleDock_urbandev.setMinimumSize(QtCore.QSize(138, 25))
        self.ModuleDock_urbandev.setMaximumSize(QtCore.QSize(16777215, 25))
        self.ModuleDock_urbandev.setIcon(icon12)
        self.ModuleDock_urbandev.setIconSize(QtCore.QSize(20, 20))
        self.ModuleDock_urbandev.setFlat(False)
        self.ModuleDock_urbandev.setObjectName("ModuleDock_urbandev")
        self.verticalLayout.addWidget(self.ModuleDock_urbandev)
        self.ModuleDock_urbanplan = QtWidgets.QPushButton(self.ModuleDock_Contents)
        self.ModuleDock_urbanplan.setMinimumSize(QtCore.QSize(138, 25))
        self.ModuleDock_urbanplan.setMaximumSize(QtCore.QSize(16777215, 25))
        self.ModuleDock_urbanplan.setIcon(icon13)
        self.ModuleDock_urbanplan.setIconSize(QtCore.QSize(20, 20))
        self.ModuleDock_urbanplan.setFlat(False)
        self.ModuleDock_urbanplan.setObjectName("ModuleDock_urbanplan")
        self.verticalLayout.addWidget(self.ModuleDock_urbanplan)
        self.ModuleDock_socioeconomic = QtWidgets.QPushButton(self.ModuleDock_Contents)
        self.ModuleDock_socioeconomic.setMinimumSize(QtCore.QSize(138, 25))
        self.ModuleDock_socioeconomic.setMaximumSize(QtCore.QSize(16777215, 25))
        self.ModuleDock_socioeconomic.setIcon(icon14)
        self.ModuleDock_socioeconomic.setIconSize(QtCore.QSize(20, 20))
        self.ModuleDock_socioeconomic.setFlat(False)
        self.ModuleDock_socioeconomic.setObjectName("ModuleDock_socioeconomic")
        self.verticalLayout.addWidget(self.ModuleDock_socioeconomic)
        self.sep_planning = QtWidgets.QFrame(self.ModuleDock_Contents)
        self.sep_planning.setFrameShape(QtWidgets.QFrame.HLine)
        self.sep_planning.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.sep_planning.setObjectName("sep_planning")
        self.verticalLayout.addWidget(self.sep_planning)
        self.lbl_environment = QtWidgets.QLabel(self.ModuleDock_Contents)
        self.lbl_environment.setObjectName("lbl_environment")
        self.verticalLayout.addWidget(self.lbl_environment)
        self.ModuleDock_spatialmap = QtWidgets.QPushButton(self.ModuleDock_Contents)
        self.ModuleDock_spatialmap.setMinimumSize(QtCore.QSize(138, 25))
        self.ModuleDock_spatialmap.setMaximumSize(QtCore.QSize(16777215, 25))
        self.ModuleDock_spatialmap.setIcon(icon15)
        self.ModuleDock_spatialmap.setIconSize(QtCore.QSize(22, 22))
        self.ModuleDock_spatialmap.setFlat(False)
        self.ModuleDock_spatialmap.setObjectName("ModuleDock_spatialmap")
        self.verticalLayout.addWidget(self.ModuleDock_spatialmap)
        self.ModuleDock_regulation = QtWidgets.QPushButton(self.ModuleDock_Contents)
        self.ModuleDock_regulation.setMinimumSize(QtCore.QSize(138, 25))
        self.ModuleDock_regulation.setMaximumSize(QtCore.QSize(16777215, 25))
        self.ModuleDock_regulation.setIcon(icon16)
        self.ModuleDock_regulation.setIconSize(QtCore.QSize(20, 20))
        self.ModuleDock_regulation.setFlat(False)
        self.ModuleDock_regulation.setObjectName("ModuleDock_regulation")
        self.verticalLayout.addWidget(self.ModuleDock_regulation)
        self.ModuleDock_infrastructure = QtWidgets.QPushButton(self.ModuleDock_Contents)
        self.ModuleDock_infrastructure.setMinimumSize(QtCore.QSize(138, 25))
        self.ModuleDock_infrastructure.setMaximumSize(QtCore.QSize(16777215, 25))
        self.ModuleDock_infrastructure.setIcon(icon17)
        self.ModuleDock_infrastructure.setIconSize(QtCore.QSize(22, 22))
        self.ModuleDock_infrastructure.setFlat(False)
        self.ModuleDock_infrastructure.setObjectName("ModuleDock_infrastructure")
        self.verticalLayout.addWidget(self.ModuleDock_infrastructure)
        self.sep_environment = QtWidgets.QFrame(self.ModuleDock_Contents)
        self.sep_environment.setFrameShape(QtWidgets.QFrame.HLine)
        self.sep_environment.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.sep_environment.setObjectName("sep_environment")
        self.verticalLayout.addWidget(self.sep_environment)
        self.lbl_evaluation = QtWidgets.QLabel(self.ModuleDock_Contents)
        self.lbl_evaluation.setObjectName("lbl_evaluation")
        self.verticalLayout.addWidget(self.lbl_evaluation)
        self.ModuleDock_performance = QtWidgets.QPushButton(self.ModuleDock_Contents)
        self.ModuleDock_performance.setMinimumSize(QtCore.QSize(138, 25))
        self.ModuleDock_performance.setMaximumSize(QtCore.QSize(16777215, 40))
        self.ModuleDock_performance.setIcon(icon18)
        self.ModuleDock_performance.setIconSize(QtCore.QSize(20, 20))
        self.ModuleDock_performance.setFlat(False)
        self.ModuleDock_performance.setObjectName("ModuleDock_performance")
        self.verticalLayout.addWidget(self.ModuleDock_performance)
        self.ModuleDock_impact = QtWidgets.QPushButton(self.ModuleDock_Contents)
        self.ModuleDock_impact.setMinimumSize(QtCore.QSize(138, 25))
        self.ModuleDock_impact.setMaximumSize(QtCore.QSize(16777215, 40))
        self.ModuleDock_impact.setIcon(icon19)
        self.ModuleDock_impact.setIconSize(QtCore.QSize(20, 20))
        self.ModuleDock_impact.setFlat(False)
        self.ModuleDock_impact.setObjectName("ModuleDock_impact")
        self.verticalLayout.addWidget(self.ModuleDock_impact)
        self.ModuleDock_decisionanalysis = QtWidgets.QPushButton(self.ModuleDock_Contents)
        self.ModuleDock_decisionanalysis.setMinimumSize(QtCore.QSize(138, 25))
        self.ModuleDock_decisionanalysis.setMaximumSize(QtCore.QSize(16777215, 40))
        self.ModuleDock_decisionanalysis.setIcon(icon20)
        self.ModuleDock_decisionanalysis.setIconSize(QtCore.QSize(20, 20))
        self.ModuleDock_decisionanalysis.setFlat(False)
        self.ModuleDock_decisionanalysis.setObjectName("ModuleDock_decisionanalysis")
        self.verticalLayout.addWidget(self.ModuleDock_decisionanalysis)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout.addItem(spacerItem)
        self.ModuleDock.setWidget(self.ModuleDock_Contents)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(2), self.ModuleDock)
        self.SimDock = QtWidgets.QDockWidget(MainWindow)
        self.SimDock.setObjectName("SimDock")
        self.SimDock_Contents = QtWidgets.QWidget()
        self.SimDock_Contents.setObjectName("SimDock_Contents")
        self.gridLayout = QtWidgets.QGridLayout(self.SimDock_Contents)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.SimDock_mapoptions = QtWidgets.QPushButton(self.SimDock_Contents)
        self.SimDock_mapoptions.setMaximumSize(QtCore.QSize(40, 40))
        self.SimDock_mapoptions.setText("")
        icon23 = QtGui.QIcon()
        icon23.addPixmap(QtGui.QPixmap(":/icons/maps-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.SimDock_mapoptions.setIcon(icon23)
        self.SimDock_mapoptions.setIconSize(QtCore.QSize(35, 35))
        self.SimDock_mapoptions.setFlat(False)
        self.SimDock_mapoptions.setObjectName("SimDock_mapoptions")
        self.gridLayout.addWidget(self.SimDock_mapoptions, 0, 1, 1, 1)
        self.SimDock_projectfolder = QtWidgets.QPushButton(self.SimDock_Contents)
        self.SimDock_projectfolder.setMaximumSize(QtCore.QSize(40, 40))
        self.SimDock_projectfolder.setText("")
        icon24 = QtGui.QIcon()
        icon24.addPixmap(QtGui.QPixmap(":/icons/folder-open-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.SimDock_projectfolder.setIcon(icon24)
        self.SimDock_projectfolder.setIconSize(QtCore.QSize(40, 35))
        self.SimDock_projectfolder.setFlat(False)
        self.SimDock_projectfolder.setObjectName("SimDock_projectfolder")
        self.gridLayout.addWidget(self.SimDock_projectfolder, 0, 2, 1, 1)
        self.SimDock_run = QtWidgets.QPushButton(self.SimDock_Contents)
        self.SimDock_run.setMaximumSize(QtCore.QSize(40, 40))
        self.SimDock_run.setText("")
        icon25 = QtGui.QIcon()
        icon25.addPixmap(QtGui.QPixmap(":/icons/Play-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.SimDock_run.setIcon(icon25)
        self.SimDock_run.setIconSize(QtCore.QSize(30, 30))
        self.SimDock_run.setFlat(False)
        self.SimDock_run.setObjectName("SimDock_run")
        self.gridLayout.addWidget(self.SimDock_run, 0, 0, 1, 1)
        self.SimDock_report = QtWidgets.QPushButton(self.SimDock_Contents)
        self.SimDock_report.setMaximumSize(QtCore.QSize(40, 40))
        self.SimDock_report.setText("")
        icon26 = QtGui.QIcon()
        icon26.addPixmap(QtGui.QPixmap(":/icons/Reports-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.SimDock_report.setIcon(icon26)
        self.SimDock_report.setIconSize(QtCore.QSize(35, 35))
        self.SimDock_report.setFlat(False)
        self.SimDock_report.setObjectName("SimDock_report")
        self.gridLayout.addWidget(self.SimDock_report, 1, 2, 1, 1)
        self.SimDock_resultsview = QtWidgets.QPushButton(self.SimDock_Contents)
        self.SimDock_resultsview.setMaximumSize(QtCore.QSize(40, 40))
        self.SimDock_resultsview.setText("")
        icon27 = QtGui.QIcon()
        icon27.addPixmap(QtGui.QPixmap(":/icons/chart-search-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.SimDock_resultsview.setIcon(icon27)
        self.SimDock_resultsview.setIconSize(QtCore.QSize(40, 35))
        self.SimDock_resultsview.setFlat(False)
        self.SimDock_resultsview.setObjectName("SimDock_resultsview")
        self.gridLayout.addWidget(self.SimDock_resultsview, 1, 1, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout.addItem(spacerItem1, 2, 1, 1, 1)
        self.SimDock.setWidget(self.SimDock_Contents)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(2), self.SimDock)
        self.Settings_Toolbar = QtWidgets.QToolBar(MainWindow)
        self.Settings_Toolbar.setObjectName("Settings_Toolbar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.Settings_Toolbar)
        self.actionNew_Project = QtWidgets.QAction(MainWindow)
        icon28 = QtGui.QIcon()
        icon28.addPixmap(QtGui.QPixmap(":/icons/new-file-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNew_Project.setIcon(icon28)
        self.actionNew_Project.setObjectName("actionNew_Project")
        self.actionOpen_Project = QtWidgets.QAction(MainWindow)
        icon29 = QtGui.QIcon()
        icon29.addPixmap(QtGui.QPixmap(":/icons/open-file-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOpen_Project.setIcon(icon29)
        self.actionOpen_Project.setObjectName("actionOpen_Project")
        self.actionSave = QtWidgets.QAction(MainWindow)
        icon30 = QtGui.QIcon()
        icon30.addPixmap(QtGui.QPixmap(":/icons/Actions-document-save-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSave.setIcon(icon30)
        self.actionSave.setObjectName("actionSave")
        self.actionSave_As = QtWidgets.QAction(MainWindow)
        self.actionSave_As.setObjectName("actionSave_As")
        self.actionImport_Project = QtWidgets.QAction(MainWindow)
        icon31 = QtGui.QIcon()
        icon31.addPixmap(QtGui.QPixmap(":/icons/import-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionImport_Project.setIcon(icon31)
        self.actionImport_Project.setObjectName("actionImport_Project")
        self.actionExport_Project = QtWidgets.QAction(MainWindow)
        self.actionExport_Project.setIcon(icon21)
        self.actionExport_Project.setObjectName("actionExport_Project")
        self.actionQuit = QtWidgets.QAction(MainWindow)
        icon32 = QtGui.QIcon()
        icon32.addPixmap(QtGui.QPixmap(":/icons/Sign-Shutdown-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionQuit.setIcon(icon32)
        self.actionQuit.setObjectName("actionQuit")
        self.actionPreferences = QtWidgets.QAction(MainWindow)
        icon33 = QtGui.QIcon()
        icon33.addPixmap(QtGui.QPixmap(":/icons/Settings-icon (1).png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPreferences.setIcon(icon33)
        self.actionPreferences.setObjectName("actionPreferences")
        self.actionEdit_Project_Details = QtWidgets.QAction(MainWindow)
        icon34 = QtGui.QIcon()
        icon34.addPixmap(QtGui.QPixmap(":/icons/edit-file-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionEdit_Project_Details.setIcon(icon34)
        self.actionEdit_Project_Details.setObjectName("actionEdit_Project_Details")
        self.actionView_Documentation = QtWidgets.QAction(MainWindow)
        icon35 = QtGui.QIcon()
        icon35.addPixmap(QtGui.QPixmap(":/icons/Help-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionView_Documentation.setIcon(icon35)
        self.actionView_Documentation.setObjectName("actionView_Documentation")
        self.actionOnline_Help = QtWidgets.QAction(MainWindow)
        icon36 = QtGui.QIcon()
        icon36.addPixmap(QtGui.QPixmap(":/icons/Categories-applications-internet-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOnline_Help.setIcon(icon36)
        self.actionOnline_Help.setObjectName("actionOnline_Help")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        self.actionAbout.setIcon(icon1)
        self.actionAbout.setObjectName("actionAbout")
        self.actionLike_on_Facebook = QtWidgets.QAction(MainWindow)
        icon37 = QtGui.QIcon()
        icon37.addPixmap(QtGui.QPixmap(":/icons/social-facebook-box-blue-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionLike_on_Facebook.setIcon(icon37)
        self.actionLike_on_Facebook.setObjectName("actionLike_on_Facebook")
        self.actionShare_on_Twiter = QtWidgets.QAction(MainWindow)
        icon38 = QtGui.QIcon()
        icon38.addPixmap(QtGui.QPixmap(":/icons/twitter-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionShare_on_Twiter.setIcon(icon38)
        self.actionShare_on_Twiter.setObjectName("actionShare_on_Twiter")
        self.actionOpen_Project_Folder = QtWidgets.QAction(MainWindow)
        self.actionOpen_Project_Folder.setIcon(icon24)
        self.actionOpen_Project_Folder.setObjectName("actionOpen_Project_Folder")
        self.actionMinimize = QtWidgets.QAction(MainWindow)
        self.actionMinimize.setObjectName("actionMinimize")
        self.actionResults_Viewer = QtWidgets.QAction(MainWindow)
        self.actionResults_Viewer.setIcon(icon27)
        self.actionResults_Viewer.setObjectName("actionResults_Viewer")
        self.actionModel_Calibration_Viewer = QtWidgets.QAction(MainWindow)
        icon39 = QtGui.QIcon()
        icon39.addPixmap(QtGui.QPixmap(":/icons/Actions-office-chart-area-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionModel_Calibration_Viewer.setIcon(icon39)
        self.actionModel_Calibration_Viewer.setObjectName("actionModel_Calibration_Viewer")
        self.actionWater_Modules = QtWidgets.QAction(MainWindow)
        self.actionWater_Modules.setObjectName("actionWater_Modules")
        self.actionUrban_Planning_Settings = QtWidgets.QAction(MainWindow)
        self.actionUrban_Planning_Settings.setObjectName("actionUrban_Planning_Settings")
        self.actionUrban_Modelling_Settings = QtWidgets.QAction(MainWindow)
        self.actionUrban_Modelling_Settings.setObjectName("actionUrban_Modelling_Settings")
        self.actionFacilities_Data = QtWidgets.QAction(MainWindow)
        self.actionFacilities_Data.setObjectName("actionFacilities_Data")
        self.actionView_Project_Description = QtWidgets.QAction(MainWindow)
        icon40 = QtGui.QIcon()
        icon40.addPixmap(QtGui.QPixmap(":/icons/Distributor-report-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionView_Project_Description.setIcon(icon40)
        self.actionView_Project_Description.setObjectName("actionView_Project_Description")
        self.actionManage_Data_Sets = QtWidgets.QAction(MainWindow)
        self.actionManage_Data_Sets.setObjectName("actionManage_Data_Sets")
        self.actionAdd_Data = QtWidgets.QAction(MainWindow)
        self.actionAdd_Data.setIcon(icon3)
        self.actionAdd_Data.setObjectName("actionAdd_Data")
        self.actionImport_Archive_File = QtWidgets.QAction(MainWindow)
        self.actionImport_Archive_File.setObjectName("actionImport_Archive_File")
        self.actionImport_Archive_from_Project = QtWidgets.QAction(MainWindow)
        self.actionImport_Archive_from_Project.setObjectName("actionImport_Archive_from_Project")
        self.actionExport_Data_Archive = QtWidgets.QAction(MainWindow)
        self.actionExport_Data_Archive.setObjectName("actionExport_Data_Archive")
        self.actionReset_Data_Library = QtWidgets.QAction(MainWindow)
        self.actionReset_Data_Library.setObjectName("actionReset_Data_Library")
        self.actionView_Active_Simulation_Data = QtWidgets.QAction(MainWindow)
        self.actionView_Active_Simulation_Data.setObjectName("actionView_Active_Simulation_Data")
        self.actionDelete_Scenario = QtWidgets.QAction(MainWindow)
        self.actionDelete_Scenario.setObjectName("actionDelete_Scenario")
        self.actionDefine_New_Scenario = QtWidgets.QAction(MainWindow)
        self.actionDefine_New_Scenario.setObjectName("actionDefine_New_Scenario")
        self.actionView_Full_Project_Log = QtWidgets.QAction(MainWindow)
        icon41 = QtGui.QIcon()
        icon41.addPixmap(QtGui.QPixmap(":/icons/Clipboard-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionView_Full_Project_Log.setIcon(icon41)
        self.actionView_Full_Project_Log.setObjectName("actionView_Full_Project_Log")
        self.actionPerformance = QtWidgets.QAction(MainWindow)
        self.actionPerformance.setIcon(icon18)
        self.actionPerformance.setObjectName("actionPerformance")
        self.actionSubmit_a_Bug_Report = QtWidgets.QAction(MainWindow)
        icon42 = QtGui.QIcon()
        icon42.addPixmap(QtGui.QPixmap(":/icons/debug-png-image-88477.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSubmit_a_Bug_Report.setIcon(icon42)
        self.actionSubmit_a_Bug_Report.setObjectName("actionSubmit_a_Bug_Report")
        self.actionRun = QtWidgets.QAction(MainWindow)
        self.actionRun.setIcon(icon25)
        self.actionRun.setObjectName("actionRun")
        self.actionGrowth_Model = QtWidgets.QAction(MainWindow)
        self.actionGrowth_Model.setObjectName("actionGrowth_Model")
        self.actionSpatial_Attraction = QtWidgets.QAction(MainWindow)
        self.actionSpatial_Attraction.setObjectName("actionSpatial_Attraction")
        self.actionSpatial_Allocation = QtWidgets.QAction(MainWindow)
        self.actionSpatial_Allocation.setObjectName("actionSpatial_Allocation")
        self.actionResidential = QtWidgets.QAction(MainWindow)
        icon43 = QtGui.QIcon()
        icon43.addPixmap(QtGui.QPixmap(":/icons/House-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionResidential.setIcon(icon43)
        self.actionResidential.setObjectName("actionResidential")
        self.actionNon_Residentail = QtWidgets.QAction(MainWindow)
        icon44 = QtGui.QIcon()
        icon44.addPixmap(QtGui.QPixmap(":/icons/Building-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNon_Residentail.setIcon(icon44)
        self.actionNon_Residentail.setObjectName("actionNon_Residentail")
        self.actionCity_wide_Planning = QtWidgets.QAction(MainWindow)
        self.actionCity_wide_Planning.setObjectName("actionCity_wide_Planning")
        self.actionTransport = QtWidgets.QAction(MainWindow)
        icon45 = QtGui.QIcon()
        icon45.addPixmap(QtGui.QPixmap(":/icons/Car-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionTransport.setIcon(icon45)
        self.actionTransport.setObjectName("actionTransport")
        self.actionOpen_Spaces = QtWidgets.QAction(MainWindow)
        icon46 = QtGui.QIcon()
        icon46.addPixmap(QtGui.QPixmap(":/icons/Tree-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOpen_Spaces.setIcon(icon46)
        self.actionOpen_Spaces.setObjectName("actionOpen_Spaces")
        self.actionMiscellaneous = QtWidgets.QAction(MainWindow)
        icon47 = QtGui.QIcon()
        icon47.addPixmap(QtGui.QPixmap(":/icons/gps-2845363_960_720.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionMiscellaneous.setIcon(icon47)
        self.actionMiscellaneous.setObjectName("actionMiscellaneous")
        self.actionCivic_Infrastructure = QtWidgets.QAction(MainWindow)
        self.actionCivic_Infrastructure.setObjectName("actionCivic_Infrastructure")
        self.actionPollution_Mapping = QtWidgets.QAction(MainWindow)
        self.actionPollution_Mapping.setObjectName("actionPollution_Mapping")
        self.actionFlood_Risk_Mapping = QtWidgets.QAction(MainWindow)
        self.actionFlood_Risk_Mapping.setObjectName("actionFlood_Risk_Mapping")
        self.actionWater_Demands = QtWidgets.QAction(MainWindow)
        self.actionWater_Demands.setObjectName("actionWater_Demands")
        self.actionLand_Cover = QtWidgets.QAction(MainWindow)
        self.actionLand_Cover.setObjectName("actionLand_Cover")
        self.actionPlanning_Overlays = QtWidgets.QAction(MainWindow)
        self.actionPlanning_Overlays.setObjectName("actionPlanning_Overlays")
        self.actionSocio_Economic = QtWidgets.QAction(MainWindow)
        self.actionSocio_Economic.setIcon(icon16)
        self.actionSocio_Economic.setObjectName("actionSocio_Economic")
        self.actionWater_Management_Objectives = QtWidgets.QAction(MainWindow)
        self.actionWater_Management_Objectives.setObjectName("actionWater_Management_Objectives")
        self.actionGreen_Infrastructure = QtWidgets.QAction(MainWindow)
        self.actionGreen_Infrastructure.setObjectName("actionGreen_Infrastructure")
        self.actionWater_Recycling_and_Reuse = QtWidgets.QAction(MainWindow)
        self.actionWater_Recycling_and_Reuse.setObjectName("actionWater_Recycling_and_Reuse")
        self.actionHousehold_Appliances = QtWidgets.QAction(MainWindow)
        self.actionHousehold_Appliances.setObjectName("actionHousehold_Appliances")
        self.actionStakeholder_Groups = QtWidgets.QAction(MainWindow)
        self.actionStakeholder_Groups.setObjectName("actionStakeholder_Groups")
        self.actionCost_Information = QtWidgets.QAction(MainWindow)
        self.actionCost_Information.setObjectName("actionCost_Information")
        self.actionBenefits_Assessment = QtWidgets.QAction(MainWindow)
        self.actionBenefits_Assessment.setObjectName("actionBenefits_Assessment")
        self.actionImpact = QtWidgets.QAction(MainWindow)
        self.actionImpact.setIcon(icon19)
        self.actionImpact.setObjectName("actionImpact")
        self.actionDecision_Analysis = QtWidgets.QAction(MainWindow)
        self.actionDecision_Analysis.setIcon(icon20)
        self.actionDecision_Analysis.setObjectName("actionDecision_Analysis")
        self.actionRepresentation = QtWidgets.QAction(MainWindow)
        self.actionRepresentation.setObjectName("actionRepresentation")
        self.actionConnectivity = QtWidgets.QAction(MainWindow)
        self.actionConnectivity.setObjectName("actionConnectivity")
        self.actionData_Selection = QtWidgets.QAction(MainWindow)
        self.actionData_Selection.setObjectName("actionData_Selection")
        self.actionScenario_Definition = QtWidgets.QAction(MainWindow)
        self.actionScenario_Definition.setObjectName("actionScenario_Definition")
        self.menuFile.addAction(self.actionNew_Project)
        self.menuFile.addAction(self.actionOpen_Project)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addAction(self.actionSave_As)
        self.menuFile.addAction(self.actionImport_Project)
        self.menuFile.addAction(self.actionExport_Project)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionQuit)
        self.menuEdit.addAction(self.actionEdit_Project_Details)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionPreferences)
        self.menuScenario.addAction(self.actionDefine_New_Scenario)
        self.menuScenario.addAction(self.actionDelete_Scenario)
        self.menuProject.addAction(self.actionView_Project_Description)
        self.menuProject.addAction(self.actionView_Full_Project_Log)
        self.menuProject.addAction(self.menuScenario.menuAction())
        self.menuUrban_Modelling.addAction(self.actionGrowth_Model)
        self.menuUrban_Modelling.addAction(self.actionSpatial_Attraction)
        self.menuUrban_Modelling.addAction(self.actionSpatial_Allocation)
        self.menuUrban_Planning.addAction(self.actionCity_wide_Planning)
        self.menuUrban_Planning.addAction(self.actionResidential)
        self.menuUrban_Planning.addAction(self.actionNon_Residentail)
        self.menuUrban_Planning.addAction(self.actionTransport)
        self.menuUrban_Planning.addAction(self.actionOpen_Spaces)
        self.menuUrban_Planning.addAction(self.actionMiscellaneous)
        self.menuUrban_Planning.addSeparator()
        self.menuUrban_Planning.addAction(self.actionCivic_Infrastructure)
        self.menuSpatial_Mapping.addAction(self.actionPlanning_Overlays)
        self.menuSpatial_Mapping.addAction(self.actionLand_Cover)
        self.menuSpatial_Mapping.addAction(self.actionWater_Demands)
        self.menuSpatial_Mapping.addAction(self.actionPollution_Mapping)
        self.menuSpatial_Mapping.addAction(self.actionFlood_Risk_Mapping)
        self.menuInfrastructure.addAction(self.actionHousehold_Appliances)
        self.menuInfrastructure.addAction(self.actionGreen_Infrastructure)
        self.menuInfrastructure.addAction(self.actionWater_Recycling_and_Reuse)
        self.menuSocio_Economic.addAction(self.actionStakeholder_Groups)
        self.menuSocio_Economic.addAction(self.actionCost_Information)
        self.menuSocio_Economic.addAction(self.actionBenefits_Assessment)
        self.menuSpatial_Setup.addAction(self.actionRepresentation)
        self.menuSpatial_Setup.addAction(self.actionConnectivity)
        self.menuClimate_Setup.addAction(self.actionData_Selection)
        self.menuClimate_Setup.addAction(self.actionScenario_Definition)
        self.menuSimulation.addAction(self.menuSpatial_Setup.menuAction())
        self.menuSimulation.addAction(self.menuClimate_Setup.menuAction())
        self.menuSimulation.addSeparator()
        self.menuSimulation.addAction(self.menuUrban_Modelling.menuAction())
        self.menuSimulation.addAction(self.menuUrban_Planning.menuAction())
        self.menuSimulation.addAction(self.menuSocio_Economic.menuAction())
        self.menuSimulation.addSeparator()
        self.menuSimulation.addAction(self.menuSpatial_Mapping.menuAction())
        self.menuSimulation.addAction(self.actionSocio_Economic)
        self.menuSimulation.addAction(self.menuInfrastructure.menuAction())
        self.menuSimulation.addSeparator()
        self.menuSimulation.addAction(self.actionPerformance)
        self.menuSimulation.addAction(self.actionImpact)
        self.menuSimulation.addAction(self.actionDecision_Analysis)
        self.menuUrban_Modules.addAction(self.actionUrban_Modelling_Settings)
        self.menuUrban_Modules.addAction(self.actionUrban_Planning_Settings)
        self.menuUrban_Modules.addAction(self.actionFacilities_Data)
        self.menuAdvanced.addAction(self.menuUrban_Modules.menuAction())
        self.menuAdvanced.addAction(self.actionWater_Modules)
        self.menuAdvanced.addAction(self.actionModel_Calibration_Viewer)
        self.menuWindow.addAction(self.actionMinimize)
        self.menuWindow.addSeparator()
        self.menuWindow.addAction(self.actionOpen_Project_Folder)
        self.menuWindow.addAction(self.actionResults_Viewer)
        self.menuHelp.addAction(self.actionAbout)
        self.menuHelp.addAction(self.actionView_Documentation)
        self.menuHelp.addAction(self.actionOnline_Help)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionSubmit_a_Bug_Report)
        self.menuHelp.addAction(self.actionLike_on_Facebook)
        self.menuHelp.addAction(self.actionShare_on_Twiter)
        self.menuData.addAction(self.actionAdd_Data)
        self.menuData.addAction(self.actionImport_Archive_File)
        self.menuData.addAction(self.actionImport_Archive_from_Project)
        self.menuData.addAction(self.actionExport_Data_Archive)
        self.menuData.addSeparator()
        self.menuData.addAction(self.actionReset_Data_Library)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuProject.menuAction())
        self.menubar.addAction(self.menuData.menuAction())
        self.menubar.addAction(self.menuSimulation.menuAction())
        self.menubar.addAction(self.menuAdvanced.menuAction())
        self.menubar.addAction(self.menuWindow.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.General_toolbar.addAction(self.actionNew_Project)
        self.General_toolbar.addAction(self.actionOpen_Project)
        self.General_toolbar.addAction(self.actionSave)
        self.General_toolbar.addAction(self.actionExport_Project)
        self.General_toolbar.addSeparator()
        self.General_toolbar.addAction(self.actionView_Project_Description)
        self.General_toolbar.addAction(self.actionView_Full_Project_Log)
        self.General_toolbar.addAction(self.actionResults_Viewer)
        self.General_toolbar.addSeparator()
        self.General_toolbar.addAction(self.actionRun)
        self.Settings_Toolbar.addAction(self.actionPreferences)
        self.Settings_Toolbar.addAction(self.actionAbout)
        self.Settings_Toolbar.addAction(self.actionView_Documentation)
        self.Settings_Toolbar.addSeparator()
        self.Settings_Toolbar.addAction(self.actionSubmit_a_Bug_Report)
        self.Settings_Toolbar.addAction(self.actionOnline_Help)
        self.Settings_Toolbar.addAction(self.actionLike_on_Facebook)
        self.Settings_Toolbar.addAction(self.actionShare_on_Twiter)

        self.retranslateUi(MainWindow)
        self.ScenarioView_Widget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.ScenarioView_lbl.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-weight:600;\">Scenario Narrative - &lt;scenario_name&gt;</span></p></body></html>"))
        self.ScenarioView_Widget.setTabText(self.ScenarioView_Widget.indexOf(self.Narrative_tab), _translate("MainWindow", "Narrative"))
        self.ScenarioView_Widget.setTabText(self.ScenarioView_Widget.indexOf(self.Simulation_tab), _translate("MainWindow", "Simulation"))
        item = self.DataSummary.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Filename"))
        item = self.DataSummary.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Type"))
        item = self.DataSummary.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Iteration"))
        self.DataSummary_check.setText(_translate("MainWindow", "Synchronize with Data View"))
        self.ScenarioView_Widget.setTabText(self.ScenarioView_Widget.indexOf(self.DataSummary_tab), _translate("MainWindow", "Data Summary"))
        self.ScenarioView_Widget.setTabText(self.ScenarioView_Widget.indexOf(self.Log_tab), _translate("MainWindow", "Log"))
        self.OutputConsole_lbl.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-weight:600;\">Output Console</span></p></body></html>"))
        self.DataView_lbl.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-weight:600;\">Data View - &lt;Data Set Name&gt;</span></p></body></html>"))
        self.DataView_extent.setText(_translate("MainWindow", "Extent"))
        self.DataView_meta.setText(_translate("MainWindow", "Metadata"))
        self.DataView_options.setText(_translate("MainWindow", "Options"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.menuProject.setTitle(_translate("MainWindow", "Project"))
        self.menuScenario.setTitle(_translate("MainWindow", "Scenario"))
        self.menuSimulation.setTitle(_translate("MainWindow", "Simulation"))
        self.menuUrban_Modelling.setTitle(_translate("MainWindow", "Urban Modelling"))
        self.menuUrban_Planning.setTitle(_translate("MainWindow", "Urban Planning"))
        self.menuSpatial_Mapping.setTitle(_translate("MainWindow", "Spatial Mapping"))
        self.menuInfrastructure.setTitle(_translate("MainWindow", "Infrastructure"))
        self.menuSocio_Economic.setTitle(_translate("MainWindow", "Socio-Economic"))
        self.menuSpatial_Setup.setTitle(_translate("MainWindow", "Spatial Setup"))
        self.menuClimate_Setup.setTitle(_translate("MainWindow", "Climate Setup"))
        self.menuAdvanced.setTitle(_translate("MainWindow", "Advanced"))
        self.menuUrban_Modules.setTitle(_translate("MainWindow", "Urban Modules"))
        self.menuWindow.setTitle(_translate("MainWindow", "Window"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.menuData.setTitle(_translate("MainWindow", "Data"))
        self.General_toolbar.setWindowTitle(_translate("MainWindow", "General"))
        self.DataDock.setWindowTitle(_translate("MainWindow", "Data"))
        self.DataDock_View.headerItem().setText(0, _translate("MainWindow", "Project Data Library"))
        __sortingEnabled = self.DataDock_View.isSortingEnabled()
        self.DataDock_View.setSortingEnabled(False)
        self.DataDock_View.topLevelItem(0).setText(0, _translate("MainWindow", "Spatial Data"))
        self.DataDock_View.topLevelItem(0).child(0).setText(0, _translate("MainWindow", "Land Use"))
        self.DataDock_View.topLevelItem(0).child(0).child(0).setText(0, _translate("MainWindow", "<no data>"))
        self.DataDock_View.topLevelItem(0).child(1).setText(0, _translate("MainWindow", "Population"))
        self.DataDock_View.topLevelItem(0).child(1).child(0).setText(0, _translate("MainWindow", "<no data>"))
        self.DataDock_View.topLevelItem(0).child(2).setText(0, _translate("MainWindow", "Elevation"))
        self.DataDock_View.topLevelItem(0).child(2).child(0).setText(0, _translate("MainWindow", "<no data>"))
        self.DataDock_View.topLevelItem(0).child(3).setText(0, _translate("MainWindow", "Soil"))
        self.DataDock_View.topLevelItem(0).child(3).child(0).setText(0, _translate("MainWindow", "<no data>"))
        self.DataDock_View.topLevelItem(0).child(4).setText(0, _translate("MainWindow", "Water Bodies"))
        self.DataDock_View.topLevelItem(0).child(4).child(0).setText(0, _translate("MainWindow", "<none>"))
        self.DataDock_View.topLevelItem(0).child(5).setText(0, _translate("MainWindow", "Built Infrastructure"))
        self.DataDock_View.topLevelItem(0).child(5).child(0).setText(0, _translate("MainWindow", "<no data>"))
        self.DataDock_View.topLevelItem(0).child(6).setText(0, _translate("MainWindow", "Overlays"))
        self.DataDock_View.topLevelItem(0).child(6).child(0).setText(0, _translate("MainWindow", "<no data>"))
        self.DataDock_View.topLevelItem(0).child(7).setText(0, _translate("MainWindow", "Locality Maps"))
        self.DataDock_View.topLevelItem(0).child(7).child(0).setText(0, _translate("MainWindow", "<no data>"))
        self.DataDock_View.topLevelItem(0).child(8).setText(0, _translate("MainWindow", "Employment"))
        self.DataDock_View.topLevelItem(0).child(8).child(0).setText(0, _translate("MainWindow", "<none>"))
        self.DataDock_View.topLevelItem(1).setText(0, _translate("MainWindow", "Time Series Data"))
        self.DataDock_View.topLevelItem(1).child(0).setText(0, _translate("MainWindow", "Rainfall"))
        self.DataDock_View.topLevelItem(1).child(0).child(0).setText(0, _translate("MainWindow", "<no data>"))
        self.DataDock_View.topLevelItem(1).child(1).setText(0, _translate("MainWindow", "Evapotranspiration"))
        self.DataDock_View.topLevelItem(1).child(1).child(0).setText(0, _translate("MainWindow", "<no data>"))
        self.DataDock_View.topLevelItem(1).child(2).setText(0, _translate("MainWindow", "Solar Radiation"))
        self.DataDock_View.topLevelItem(1).child(2).child(0).setText(0, _translate("MainWindow", "<no data>"))
        self.DataDock_View.topLevelItem(2).setText(0, _translate("MainWindow", "Qualitative Data"))
        self.DataDock_View.setSortingEnabled(__sortingEnabled)
        self.ScenarioDock.setWindowTitle(_translate("MainWindow", "Scenarios"))
        self.ScenarioDock_Combo.setItemText(0, _translate("MainWindow", "<Select Scenario>"))
        self.ScenarioDock_View.headerItem().setText(0, _translate("MainWindow", "Scenario Description"))
        __sortingEnabled = self.ScenarioDock_View.isSortingEnabled()
        self.ScenarioDock_View.setSortingEnabled(False)
        self.ScenarioDock_View.topLevelItem(0).setText(0, _translate("MainWindow", "Narrative"))
        self.ScenarioDock_View.topLevelItem(1).setText(0, _translate("MainWindow", "Simulation Details"))
        self.ScenarioDock_View.topLevelItem(1).child(0).setText(0, _translate("MainWindow", "Type: <static>"))
        self.ScenarioDock_View.topLevelItem(1).child(1).setText(0, _translate("MainWindow", "Status: <none>"))
        self.ScenarioDock_View.topLevelItem(1).child(2).setText(0, _translate("MainWindow", "Simulation Year(s): <year>"))
        self.ScenarioDock_View.topLevelItem(2).setText(0, _translate("MainWindow", "Using Spatial Data Sets"))
        self.ScenarioDock_View.topLevelItem(2).child(0).setText(0, _translate("MainWindow", "<no files>"))
        self.ScenarioDock_View.topLevelItem(3).setText(0, _translate("MainWindow", "Modules"))
        self.ScenarioDock_View.topLevelItem(3).child(0).setText(0, _translate("MainWindow", "Spatial Setup"))
        self.ScenarioDock_View.topLevelItem(3).child(1).setText(0, _translate("MainWindow", "Climate Setup"))
        self.ScenarioDock_View.topLevelItem(3).child(2).setText(0, _translate("MainWindow", "Urban Development"))
        self.ScenarioDock_View.topLevelItem(3).child(3).setText(0, _translate("MainWindow", "Urban Planning"))
        self.ScenarioDock_View.topLevelItem(3).child(4).setText(0, _translate("MainWindow", "Socio-Economic"))
        self.ScenarioDock_View.topLevelItem(3).child(5).setText(0, _translate("MainWindow", "Spatial Mapping"))
        self.ScenarioDock_View.topLevelItem(3).child(6).setText(0, _translate("MainWindow", "Regulation"))
        self.ScenarioDock_View.topLevelItem(3).child(7).setText(0, _translate("MainWindow", "Infrastructure"))
        self.ScenarioDock_View.topLevelItem(3).child(8).setText(0, _translate("MainWindow", "System Performance"))
        self.ScenarioDock_View.topLevelItem(3).child(9).setText(0, _translate("MainWindow", "Impact"))
        self.ScenarioDock_View.topLevelItem(3).child(10).setText(0, _translate("MainWindow", "Decision Analysis"))
        self.ScenarioDock_View.topLevelItem(4).setText(0, _translate("MainWindow", "Export Details"))
        self.ScenarioDock_View.topLevelItem(4).child(0).setText(0, _translate("MainWindow", "File Naming: <name>"))
        self.ScenarioDock_View.topLevelItem(4).child(1).setText(0, _translate("MainWindow", "Path: <path>"))
        self.ScenarioDock_View.setSortingEnabled(__sortingEnabled)
        self.newScenario.setText(_translate("MainWindow", "New..."))
        self.editScenario.setText(_translate("MainWindow", "Edit..."))
        self.deleteScenario.setText(_translate("MainWindow", "Delete..."))
        self.ModuleDock.setWindowTitle(_translate("MainWindow", "Modules"))
        self.lbl_dataproc.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-weight:600;\">Data Processing</span></p></body></html>"))
        self.ModuleDock_spatialsetup.setToolTip(_translate("MainWindow", "Spatial Delineation"))
        self.ModuleDock_spatialsetup.setText(_translate("MainWindow", "Spatial Setup"))
        self.ModuleDock_spatialsetup.setShortcut(_translate("MainWindow", "Up"))
        self.ModuleDock_climatesetup.setToolTip(_translate("MainWindow", "Spatial Connectivity"))
        self.ModuleDock_climatesetup.setText(_translate("MainWindow", "Climate Setup"))
        self.lbl_planning.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-weight:600;\">Planning</span></p></body></html>"))
        self.ModuleDock_urbandev.setToolTip(_translate("MainWindow", "Urban Development Modelling"))
        self.ModuleDock_urbandev.setText(_translate("MainWindow", "Urban Development"))
        self.ModuleDock_urbanplan.setToolTip(_translate("MainWindow", "Urban Planning"))
        self.ModuleDock_urbanplan.setText(_translate("MainWindow", "Urban Planning"))
        self.ModuleDock_socioeconomic.setText(_translate("MainWindow", "Socio-Economic"))
        self.lbl_environment.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-weight:600;\">Environment</span></p></body></html>"))
        self.ModuleDock_spatialmap.setText(_translate("MainWindow", "Spatial Mapping"))
        self.ModuleDock_regulation.setText(_translate("MainWindow", "Regulation"))
        self.ModuleDock_infrastructure.setText(_translate("MainWindow", "Infrastructure"))
        self.lbl_evaluation.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-weight:600;\">Evaluation</span></p></body></html>"))
        self.ModuleDock_performance.setText(_translate("MainWindow", "Performance"))
        self.ModuleDock_impact.setText(_translate("MainWindow", "Impact"))
        self.ModuleDock_decisionanalysis.setText(_translate("MainWindow", "Decision Analysis"))
        self.SimDock.setWindowTitle(_translate("MainWindow", "Control Panel"))
        self.SimDock_mapoptions.setToolTip(_translate("MainWindow", "Customize Map Outputs"))
        self.SimDock_projectfolder.setToolTip(_translate("MainWindow", "Open Project Folder"))
        self.SimDock_run.setToolTip(_translate("MainWindow", "Run Simulation"))
        self.SimDock_report.setToolTip(_translate("MainWindow", "Export Results"))
        self.SimDock_resultsview.setToolTip(_translate("MainWindow", "Results Viewer"))
        self.Settings_Toolbar.setWindowTitle(_translate("MainWindow", "Settings"))
        self.actionNew_Project.setText(_translate("MainWindow", "New Project"))
        self.actionOpen_Project.setText(_translate("MainWindow", "Open Project"))
        self.actionSave.setText(_translate("MainWindow", "Save"))
        self.actionSave_As.setText(_translate("MainWindow", "Save As..."))
        self.actionImport_Project.setText(_translate("MainWindow", "Import Project"))
        self.actionExport_Project.setText(_translate("MainWindow", "Export Project"))
        self.actionQuit.setText(_translate("MainWindow", "Quit"))
        self.actionPreferences.setText(_translate("MainWindow", "Preferences"))
        self.actionEdit_Project_Details.setText(_translate("MainWindow", "Edit Project Details..."))
        self.actionView_Documentation.setText(_translate("MainWindow", "View Documentation"))
        self.actionOnline_Help.setText(_translate("MainWindow", "Online Help"))
        self.actionAbout.setText(_translate("MainWindow", "About"))
        self.actionLike_on_Facebook.setText(_translate("MainWindow", "Like on Facebook"))
        self.actionShare_on_Twiter.setText(_translate("MainWindow", "Share on Twiter"))
        self.actionOpen_Project_Folder.setText(_translate("MainWindow", "Open Project Folder..."))
        self.actionMinimize.setText(_translate("MainWindow", "Minimize"))
        self.actionResults_Viewer.setText(_translate("MainWindow", "Results Explorer"))
        self.actionModel_Calibration_Viewer.setText(_translate("MainWindow", "Model Calibration Viewer"))
        self.actionWater_Modules.setText(_translate("MainWindow", "Water Modules"))
        self.actionUrban_Planning_Settings.setText(_translate("MainWindow", "Urban Planning Settings"))
        self.actionUrban_Modelling_Settings.setText(_translate("MainWindow", "Urban Modelling Settings"))
        self.actionFacilities_Data.setText(_translate("MainWindow", "Facilities Data"))
        self.actionView_Project_Description.setText(_translate("MainWindow", "View Project Description"))
        self.actionManage_Data_Sets.setText(_translate("MainWindow", "Manage Data Sets"))
        self.actionAdd_Data.setText(_translate("MainWindow", "Add Data"))
        self.actionImport_Archive_File.setText(_translate("MainWindow", "Import Archive File"))
        self.actionImport_Archive_from_Project.setText(_translate("MainWindow", "Import Archive from Project"))
        self.actionExport_Data_Archive.setText(_translate("MainWindow", "Export Data Archive"))
        self.actionReset_Data_Library.setText(_translate("MainWindow", "Reset Project Data Library"))
        self.actionView_Active_Simulation_Data.setText(_translate("MainWindow", "View Active Simulation Data"))
        self.actionDelete_Scenario.setText(_translate("MainWindow", "Delete Scenario"))
        self.actionDefine_New_Scenario.setText(_translate("MainWindow", "Define New Scenario"))
        self.actionView_Full_Project_Log.setText(_translate("MainWindow", "View Full Project Log"))
        self.actionPerformance.setText(_translate("MainWindow", "Performance"))
        self.actionSubmit_a_Bug_Report.setText(_translate("MainWindow", "Submit a Bug Report"))
        self.actionRun.setText(_translate("MainWindow", "Run"))
        self.actionRun.setToolTip(_translate("MainWindow", "Run a Simulation"))
        self.actionGrowth_Model.setText(_translate("MainWindow", "Growth Model"))
        self.actionSpatial_Attraction.setText(_translate("MainWindow", "Attraction Model"))
        self.actionSpatial_Allocation.setText(_translate("MainWindow", "Spatial Allocation"))
        self.actionResidential.setText(_translate("MainWindow", "Residential"))
        self.actionNon_Residentail.setText(_translate("MainWindow", "Non-Residentail"))
        self.actionCity_wide_Planning.setText(_translate("MainWindow", "City-wide Planning"))
        self.actionTransport.setText(_translate("MainWindow", "Transport"))
        self.actionOpen_Spaces.setText(_translate("MainWindow", "Open Spaces"))
        self.actionMiscellaneous.setText(_translate("MainWindow", "Other Land Uses"))
        self.actionCivic_Infrastructure.setText(_translate("MainWindow", "Civic Infrastructure"))
        self.actionPollution_Mapping.setText(_translate("MainWindow", "Pollution Mapping"))
        self.actionFlood_Risk_Mapping.setText(_translate("MainWindow", "Flood Risk Mapping"))
        self.actionWater_Demands.setText(_translate("MainWindow", "Water Demands"))
        self.actionLand_Cover.setText(_translate("MainWindow", "Land Cover"))
        self.actionPlanning_Overlays.setText(_translate("MainWindow", "Planning Overlays"))
        self.actionSocio_Economic.setText(_translate("MainWindow", "Regulation"))
        self.actionWater_Management_Objectives.setText(_translate("MainWindow", "Water Management Objectives"))
        self.actionGreen_Infrastructure.setText(_translate("MainWindow", "Green Infrastructure"))
        self.actionWater_Recycling_and_Reuse.setText(_translate("MainWindow", "Water Recycling and Reuse"))
        self.actionHousehold_Appliances.setText(_translate("MainWindow", "Building-integrated Fittings"))
        self.actionStakeholder_Groups.setText(_translate("MainWindow", "Stakeholder Groups"))
        self.actionCost_Information.setText(_translate("MainWindow", "Costing Information"))
        self.actionBenefits_Assessment.setText(_translate("MainWindow", "Benefits Assessment"))
        self.actionImpact.setText(_translate("MainWindow", "Impact"))
        self.actionDecision_Analysis.setText(_translate("MainWindow", "Decision Analysis"))
        self.actionRepresentation.setText(_translate("MainWindow", "Representation"))
        self.actionConnectivity.setText(_translate("MainWindow", "Connectivity"))
        self.actionData_Selection.setText(_translate("MainWindow", "Data Selection"))
        self.actionScenario_Definition.setText(_translate("MainWindow", "Scenario Definition"))

from PyQt5 import QtWebKitWidgets
import ubeats_rc
