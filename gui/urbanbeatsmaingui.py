# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\urbanbeatsmaingui.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1368, 720)
        self.Central_Widget = QtWidgets.QWidget(MainWindow)
        self.Central_Widget.setObjectName("Central_Widget")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.Central_Widget)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.Progress_Widget = QtWidgets.QWidget(self.Central_Widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Progress_Widget.sizePolicy().hasHeightForWidth())
        self.Progress_Widget.setSizePolicy(sizePolicy)
        self.Progress_Widget.setMinimumSize(QtCore.QSize(450, 0))
        self.Progress_Widget.setObjectName("Progress_Widget")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.Progress_Widget)
        self.verticalLayout_7.setContentsMargins(9, 9, 9, 9)
        self.verticalLayout_7.setSpacing(3)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.ScenarioView_Widget = QtWidgets.QTabWidget(self.Progress_Widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ScenarioView_Widget.sizePolicy().hasHeightForWidth())
        self.ScenarioView_Widget.setSizePolicy(sizePolicy)
        self.ScenarioView_Widget.setMinimumSize(QtCore.QSize(0, 400))
        self.ScenarioView_Widget.setObjectName("ScenarioView_Widget")
        self.Project_tab = QtWidgets.QWidget()
        self.Project_tab.setObjectName("Project_tab")
        self.verticalLayout_10 = QtWidgets.QVBoxLayout(self.Project_tab)
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.widget_2 = QtWidgets.QWidget(self.Project_tab)
        self.widget_2.setObjectName("widget_2")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.widget_2)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setSpacing(0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label = QtWidgets.QLabel(self.widget_2)
        self.label.setObjectName("label")
        self.horizontalLayout.addWidget(self.label)
        self.Project_projectfolder = QtWidgets.QPushButton(self.widget_2)
        self.Project_projectfolder.setMaximumSize(QtCore.QSize(30, 30))
        self.Project_projectfolder.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icons/folder-open-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.Project_projectfolder.setIcon(icon)
        self.Project_projectfolder.setIconSize(QtCore.QSize(30, 25))
        self.Project_projectfolder.setFlat(False)
        self.Project_projectfolder.setObjectName("Project_projectfolder")
        self.horizontalLayout.addWidget(self.Project_projectfolder)
        self.Project_resultsview = QtWidgets.QPushButton(self.widget_2)
        self.Project_resultsview.setMaximumSize(QtCore.QSize(30, 30))
        self.Project_resultsview.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icons/chart-search-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.Project_resultsview.setIcon(icon1)
        self.Project_resultsview.setIconSize(QtCore.QSize(30, 25))
        self.Project_resultsview.setFlat(False)
        self.Project_resultsview.setObjectName("Project_resultsview")
        self.horizontalLayout.addWidget(self.Project_resultsview)
        self.Project_report = QtWidgets.QPushButton(self.widget_2)
        self.Project_report.setMaximumSize(QtCore.QSize(30, 30))
        self.Project_report.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/icons/Reports-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.Project_report.setIcon(icon2)
        self.Project_report.setIconSize(QtCore.QSize(30, 25))
        self.Project_report.setFlat(False)
        self.Project_report.setObjectName("Project_report")
        self.horizontalLayout.addWidget(self.Project_report)
        self.verticalLayout_10.addWidget(self.widget_2)
        self.Project = QtWidgets.QTextEdit(self.Project_tab)
        self.Project.setReadOnly(True)
        self.Project.setObjectName("Project")
        self.verticalLayout_10.addWidget(self.Project)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/icons/Distributor-report-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.ScenarioView_Widget.addTab(self.Project_tab, icon3, "")
        self.Simulation_tab = QtWidgets.QWidget()
        self.Simulation_tab.setObjectName("Simulation_tab")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.Simulation_tab)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.Locations_Boundaries_title = QtWidgets.QLabel(self.Simulation_tab)
        self.Locations_Boundaries_title.setObjectName("Locations_Boundaries_title")
        self.verticalLayout_6.addWidget(self.Locations_Boundaries_title)
        self.geography_combo = QtWidgets.QComboBox(self.Simulation_tab)
        self.geography_combo.setMinimumSize(QtCore.QSize(0, 25))
        self.geography_combo.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.geography_combo.setObjectName("geography_combo")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/icons/location.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.geography_combo.addItem(icon4, "")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/icons/boundaries_view.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.geography_combo.addItem(icon5, "")
        self.verticalLayout_6.addWidget(self.geography_combo)
        self.geography_stack = QtWidgets.QStackedWidget(self.Simulation_tab)
        self.geography_stack.setObjectName("geography_stack")
        self.page_7 = QtWidgets.QWidget()
        self.page_7.setObjectName("page_7")
        self.verticalLayout_20 = QtWidgets.QVBoxLayout(self.page_7)
        self.verticalLayout_20.setObjectName("verticalLayout_20")
        self.LocationSummary = QtWidgets.QTableWidget(self.page_7)
        self.LocationSummary.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.LocationSummary.setObjectName("LocationSummary")
        self.LocationSummary.setColumnCount(2)
        self.LocationSummary.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.LocationSummary.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.LocationSummary.setHorizontalHeaderItem(1, item)
        self.verticalLayout_20.addWidget(self.LocationSummary)
        self.BoundarySummary_widget_2 = QtWidgets.QWidget(self.page_7)
        self.BoundarySummary_widget_2.setObjectName("BoundarySummary_widget_2")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.BoundarySummary_widget_2)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.location_add_button = QtWidgets.QPushButton(self.BoundarySummary_widget_2)
        self.location_add_button.setMinimumSize(QtCore.QSize(0, 25))
        self.location_add_button.setMaximumSize(QtCore.QSize(16777215, 25))
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/icons/location_add.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.location_add_button.setIcon(icon6)
        self.location_add_button.setIconSize(QtCore.QSize(20, 20))
        self.location_add_button.setCheckable(False)
        self.location_add_button.setFlat(False)
        self.location_add_button.setObjectName("location_add_button")
        self.gridLayout_3.addWidget(self.location_add_button, 0, 6, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_3.addItem(spacerItem, 0, 0, 1, 1)
        self.location_delete_button = QtWidgets.QPushButton(self.BoundarySummary_widget_2)
        self.location_delete_button.setMinimumSize(QtCore.QSize(0, 25))
        self.location_delete_button.setMaximumSize(QtCore.QSize(16777215, 25))
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/icons/location_remove.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.location_delete_button.setIcon(icon7)
        self.location_delete_button.setIconSize(QtCore.QSize(20, 20))
        self.location_delete_button.setCheckable(False)
        self.location_delete_button.setFlat(False)
        self.location_delete_button.setObjectName("location_delete_button")
        self.gridLayout_3.addWidget(self.location_delete_button, 0, 7, 1, 1)
        self.geography_focus_button_loc = QtWidgets.QPushButton(self.BoundarySummary_widget_2)
        self.geography_focus_button_loc.setEnabled(False)
        self.geography_focus_button_loc.setMinimumSize(QtCore.QSize(0, 25))
        self.geography_focus_button_loc.setMaximumSize(QtCore.QSize(16777215, 25))
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/icons/eye-2387853_960_720.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.geography_focus_button_loc.setIcon(icon8)
        self.geography_focus_button_loc.setIconSize(QtCore.QSize(20, 20))
        self.geography_focus_button_loc.setCheckable(False)
        self.geography_focus_button_loc.setFlat(False)
        self.geography_focus_button_loc.setObjectName("geography_focus_button_loc")
        self.gridLayout_3.addWidget(self.geography_focus_button_loc, 0, 4, 1, 1)
        self.verticalLayout_20.addWidget(self.BoundarySummary_widget_2)
        self.geography_stack.addWidget(self.page_7)
        self.page_5 = QtWidgets.QWidget()
        self.page_5.setObjectName("page_5")
        self.verticalLayout_19 = QtWidgets.QVBoxLayout(self.page_5)
        self.verticalLayout_19.setObjectName("verticalLayout_19")
        self.BoundarySummary = QtWidgets.QTableWidget(self.page_5)
        self.BoundarySummary.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.BoundarySummary.setObjectName("BoundarySummary")
        self.BoundarySummary.setColumnCount(4)
        self.BoundarySummary.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.BoundarySummary.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.BoundarySummary.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.BoundarySummary.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.BoundarySummary.setHorizontalHeaderItem(3, item)
        self.verticalLayout_19.addWidget(self.BoundarySummary)
        self.BoundarySummary_widget = QtWidgets.QWidget(self.page_5)
        self.BoundarySummary_widget.setObjectName("BoundarySummary_widget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.BoundarySummary_widget)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.boundary_add_button = QtWidgets.QPushButton(self.BoundarySummary_widget)
        self.boundary_add_button.setMinimumSize(QtCore.QSize(0, 25))
        self.boundary_add_button.setMaximumSize(QtCore.QSize(16777215, 25))
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/icons/boundaries_add.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.boundary_add_button.setIcon(icon9)
        self.boundary_add_button.setIconSize(QtCore.QSize(20, 20))
        self.boundary_add_button.setCheckable(False)
        self.boundary_add_button.setFlat(False)
        self.boundary_add_button.setObjectName("boundary_add_button")
        self.gridLayout_2.addWidget(self.boundary_add_button, 0, 6, 1, 1)
        self.geography_update_button = QtWidgets.QPushButton(self.BoundarySummary_widget)
        self.geography_update_button.setEnabled(True)
        self.geography_update_button.setMinimumSize(QtCore.QSize(0, 25))
        self.geography_update_button.setMaximumSize(QtCore.QSize(16777215, 25))
        self.geography_update_button.setIcon(icon8)
        self.geography_update_button.setIconSize(QtCore.QSize(20, 20))
        self.geography_update_button.setCheckable(False)
        self.geography_update_button.setFlat(False)
        self.geography_update_button.setObjectName("geography_update_button")
        self.gridLayout_2.addWidget(self.geography_update_button, 0, 1, 1, 1)
        self.boundary_delete_button = QtWidgets.QPushButton(self.BoundarySummary_widget)
        self.boundary_delete_button.setMinimumSize(QtCore.QSize(0, 25))
        self.boundary_delete_button.setMaximumSize(QtCore.QSize(16777215, 25))
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/icons/boundaries_delete.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.boundary_delete_button.setIcon(icon10)
        self.boundary_delete_button.setIconSize(QtCore.QSize(20, 20))
        self.boundary_delete_button.setCheckable(False)
        self.boundary_delete_button.setFlat(False)
        self.boundary_delete_button.setObjectName("boundary_delete_button")
        self.gridLayout_2.addWidget(self.boundary_delete_button, 0, 7, 1, 1)
        self.boundary_shape_add_button = QtWidgets.QPushButton(self.BoundarySummary_widget)
        self.boundary_shape_add_button.setMinimumSize(QtCore.QSize(0, 25))
        self.boundary_shape_add_button.setMaximumSize(QtCore.QSize(16777215, 25))
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/icons/custom_shape.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.boundary_shape_add_button.setIcon(icon11)
        self.boundary_shape_add_button.setIconSize(QtCore.QSize(20, 20))
        self.boundary_shape_add_button.setCheckable(False)
        self.boundary_shape_add_button.setFlat(False)
        self.boundary_shape_add_button.setObjectName("boundary_shape_add_button")
        self.gridLayout_2.addWidget(self.boundary_shape_add_button, 0, 4, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem1, 0, 0, 1, 1)
        self.verticalLayout_19.addWidget(self.BoundarySummary_widget)
        self.geography_stack.addWidget(self.page_5)
        self.verticalLayout_6.addWidget(self.geography_stack)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(":/icons/earth-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.ScenarioView_Widget.addTab(self.Simulation_tab, icon12, "")
        self.assets = QtWidgets.QWidget()
        self.assets.setObjectName("assets")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.assets)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.global_assets_title = QtWidgets.QLabel(self.assets)
        self.global_assets_title.setObjectName("global_assets_title")
        self.verticalLayout_2.addWidget(self.global_assets_title)
        self.global_assets_widget = QtWidgets.QWidget(self.assets)
        self.global_assets_widget.setObjectName("global_assets_widget")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout(self.global_assets_widget)
        self.horizontalLayout_8.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_8.addItem(spacerItem2)
        self.assetcol_new_button = QtWidgets.QPushButton(self.global_assets_widget)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap(":/icons/add-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.assetcol_new_button.setIcon(icon13)
        self.assetcol_new_button.setObjectName("assetcol_new_button")
        self.horizontalLayout_8.addWidget(self.assetcol_new_button)
        self.assetcol_delete_button = QtWidgets.QPushButton(self.global_assets_widget)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap(":/icons/delete-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.assetcol_delete_button.setIcon(icon14)
        self.assetcol_delete_button.setObjectName("assetcol_delete_button")
        self.horizontalLayout_8.addWidget(self.assetcol_delete_button)
        self.assetcol_export = QtWidgets.QPushButton(self.global_assets_widget)
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap(":/icons/export-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.assetcol_export.setIcon(icon15)
        self.assetcol_export.setObjectName("assetcol_export")
        self.horizontalLayout_8.addWidget(self.assetcol_export)
        self.asset_display = QtWidgets.QPushButton(self.global_assets_widget)
        self.asset_display.setEnabled(True)
        self.asset_display.setIcon(icon8)
        self.asset_display.setObjectName("asset_display")
        self.horizontalLayout_8.addWidget(self.asset_display)
        self.verticalLayout_2.addWidget(self.global_assets_widget)
        self.global_assets_table = QtWidgets.QTreeWidget(self.assets)
        self.global_assets_table.setObjectName("global_assets_table")
        item_0 = QtWidgets.QTreeWidgetItem(self.global_assets_table)
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap(":/icons/Very-Basic-Design-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_0.setIcon(0, icon16)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_0 = QtWidgets.QTreeWidgetItem(self.global_assets_table)
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap(":/icons/book-open.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_0.setIcon(0, icon17)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        self.verticalLayout_2.addWidget(self.global_assets_table)
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap(":/icons/GISLayers.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.ScenarioView_Widget.addTab(self.assets, icon18, "")
        self.Narrative_tab = QtWidgets.QWidget()
        self.Narrative_tab.setObjectName("Narrative_tab")
        self.verticalLayout_16 = QtWidgets.QVBoxLayout(self.Narrative_tab)
        self.verticalLayout_16.setObjectName("verticalLayout_16")
        self.ScenarioView_lbl = QtWidgets.QLabel(self.Narrative_tab)
        self.ScenarioView_lbl.setObjectName("ScenarioView_lbl")
        self.verticalLayout_16.addWidget(self.ScenarioView_lbl)
        self.scenarioMgmt_tabview = QtWidgets.QTabWidget(self.Narrative_tab)
        self.scenarioMgmt_tabview.setTabPosition(QtWidgets.QTabWidget.North)
        self.scenarioMgmt_tabview.setObjectName("scenarioMgmt_tabview")
        self.general = QtWidgets.QWidget()
        self.general.setObjectName("general")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.general)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.scenario_summarybox = QtWidgets.QTextEdit(self.general)
        self.scenario_summarybox.setReadOnly(True)
        self.scenario_summarybox.setObjectName("scenario_summarybox")
        self.verticalLayout_8.addWidget(self.scenario_summarybox)
        icon19 = QtGui.QIcon()
        icon19.addPixmap(QtGui.QPixmap(":/icons/Info-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.scenarioMgmt_tabview.addTab(self.general, icon19, "")
        self.datasets = QtWidgets.QWidget()
        self.datasets.setObjectName("datasets")
        self.verticalLayout_15 = QtWidgets.QVBoxLayout(self.datasets)
        self.verticalLayout_15.setObjectName("verticalLayout_15")
        self.DataSummary = QtWidgets.QTableWidget(self.datasets)
        self.DataSummary.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.DataSummary.setObjectName("DataSummary")
        self.DataSummary.setColumnCount(3)
        self.DataSummary.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.DataSummary.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.DataSummary.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.DataSummary.setHorizontalHeaderItem(2, item)
        self.verticalLayout_15.addWidget(self.DataSummary)
        icon20 = QtGui.QIcon()
        icon20.addPixmap(QtGui.QPixmap(":/icons/Misc-Database-3-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.scenarioMgmt_tabview.addTab(self.datasets, icon20, "")
        self.modules = QtWidgets.QWidget()
        self.modules.setObjectName("modules")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.modules)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.module_controller = QtWidgets.QWidget(self.modules)
        self.module_controller.setObjectName("module_controller")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.module_controller)
        self.verticalLayout.setObjectName("verticalLayout")
        self.module_add = QtWidgets.QPushButton(self.module_controller)
        self.module_add.setIcon(icon13)
        self.module_add.setObjectName("module_add")
        self.verticalLayout.addWidget(self.module_add)
        self.module_remove = QtWidgets.QPushButton(self.module_controller)
        self.module_remove.setIcon(icon14)
        self.module_remove.setObjectName("module_remove")
        self.verticalLayout.addWidget(self.module_remove)
        self.module_properties = QtWidgets.QPushButton(self.module_controller)
        self.module_properties.setIcon(icon19)
        self.module_properties.setObjectName("module_properties")
        self.verticalLayout.addWidget(self.module_properties)
        self.scenarioRun_button = QtWidgets.QPushButton(self.module_controller)
        icon21 = QtGui.QIcon()
        icon21.addPixmap(QtGui.QPixmap(":/icons/Play-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.scenarioRun_button.setIcon(icon21)
        self.scenarioRun_button.setObjectName("scenarioRun_button")
        self.verticalLayout.addWidget(self.scenarioRun_button)
        spacerItem3 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout.addItem(spacerItem3)
        self.gridLayout_6.addWidget(self.module_controller, 0, 1, 1, 1)
        self.module_browser = QtWidgets.QTreeWidget(self.modules)
        self.module_browser.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.module_browser.setDragDropMode(QtWidgets.QAbstractItemView.NoDragDrop)
        self.module_browser.setDefaultDropAction(QtCore.Qt.IgnoreAction)
        self.module_browser.setAnimated(True)
        self.module_browser.setAllColumnsShowFocus(False)
        self.module_browser.setObjectName("module_browser")
        item_0 = QtWidgets.QTreeWidgetItem(self.module_browser)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        icon22 = QtGui.QIcon()
        icon22.addPixmap(QtGui.QPixmap(":/icons/Data-Grid-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_1.setIcon(0, icon22)
        self.module_browser.header().setCascadingSectionResizes(False)
        self.gridLayout_6.addWidget(self.module_browser, 0, 0, 1, 1)
        self.scenario_ProgressBar = QtWidgets.QProgressBar(self.modules)
        self.scenario_ProgressBar.setMinimumSize(QtCore.QSize(0, 16))
        self.scenario_ProgressBar.setMaximumSize(QtCore.QSize(16777215, 16))
        self.scenario_ProgressBar.setProperty("value", 0)
        self.scenario_ProgressBar.setObjectName("scenario_ProgressBar")
        self.gridLayout_6.addWidget(self.scenario_ProgressBar, 1, 0, 1, 2)
        icon23 = QtGui.QIcon()
        icon23.addPixmap(QtGui.QPixmap(":/icons/Data-Flow-Chart-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.scenarioMgmt_tabview.addTab(self.modules, icon23, "")
        self.outputs = QtWidgets.QWidget()
        self.outputs.setObjectName("outputs")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.outputs)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.output_data_summary = QtWidgets.QTableWidget(self.outputs)
        self.output_data_summary.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.output_data_summary.setObjectName("output_data_summary")
        self.output_data_summary.setColumnCount(3)
        self.output_data_summary.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.output_data_summary.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.output_data_summary.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.output_data_summary.setHorizontalHeaderItem(2, item)
        self.verticalLayout_5.addWidget(self.output_data_summary)
        self.output_data_widget = QtWidgets.QWidget(self.outputs)
        self.output_data_widget.setObjectName("output_data_widget")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.output_data_widget)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.output_update_button = QtWidgets.QPushButton(self.output_data_widget)
        icon24 = QtGui.QIcon()
        icon24.addPixmap(QtGui.QPixmap(":/icons/Refresh-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.output_update_button.setIcon(icon24)
        self.output_update_button.setObjectName("output_update_button")
        self.horizontalLayout_7.addWidget(self.output_update_button)
        self.output_metadata_button = QtWidgets.QPushButton(self.output_data_widget)
        self.output_metadata_button.setMinimumSize(QtCore.QSize(120, 0))
        icon25 = QtGui.QIcon()
        icon25.addPixmap(QtGui.QPixmap(":/icons/map-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.output_metadata_button.setIcon(icon25)
        self.output_metadata_button.setObjectName("output_metadata_button")
        self.horizontalLayout_7.addWidget(self.output_metadata_button)
        self.output_export_button = QtWidgets.QPushButton(self.output_data_widget)
        self.output_export_button.setIcon(icon15)
        self.output_export_button.setObjectName("output_export_button")
        self.horizontalLayout_7.addWidget(self.output_export_button)
        self.verticalLayout_5.addWidget(self.output_data_widget)
        self.scenarioMgmt_tabview.addTab(self.outputs, icon18, "")
        self.verticalLayout_16.addWidget(self.scenarioMgmt_tabview)
        icon26 = QtGui.QIcon()
        icon26.addPixmap(QtGui.QPixmap(":/icons/Map-icon (1).png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.ScenarioView_Widget.addTab(self.Narrative_tab, icon26, "")
        self.Log_tab = QtWidgets.QWidget()
        self.Log_tab.setObjectName("Log_tab")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.Log_tab)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.log_title = QtWidgets.QLabel(self.Log_tab)
        self.log_title.setObjectName("log_title")
        self.verticalLayout_9.addWidget(self.log_title)
        self.Log = QtWidgets.QPlainTextEdit(self.Log_tab)
        self.Log.setReadOnly(True)
        self.Log.setObjectName("Log")
        self.verticalLayout_9.addWidget(self.Log)
        icon27 = QtGui.QIcon()
        icon27.addPixmap(QtGui.QPixmap(":/icons/Clipboard-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.ScenarioView_Widget.addTab(self.Log_tab, icon27, "")
        self.verticalLayout_7.addWidget(self.ScenarioView_Widget)
        self.horizontalLayout_3.addWidget(self.Progress_Widget)
        self.widget_3 = QtWidgets.QWidget(self.Central_Widget)
        self.widget_3.setObjectName("widget_3")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.widget_3)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setSpacing(3)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.DataView_options = QtWidgets.QPushButton(self.widget_3)
        self.DataView_options.setMinimumSize(QtCore.QSize(120, 0))
        icon28 = QtGui.QIcon()
        icon28.addPixmap(QtGui.QPixmap(":/icons/Settings-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.DataView_options.setIcon(icon28)
        self.DataView_options.setObjectName("DataView_options")
        self.horizontalLayout_5.addWidget(self.DataView_options)
        self.DataView_meta = QtWidgets.QPushButton(self.widget_3)
        self.DataView_meta.setMinimumSize(QtCore.QSize(120, 0))
        self.DataView_meta.setIcon(icon25)
        self.DataView_meta.setObjectName("DataView_meta")
        self.horizontalLayout_5.addWidget(self.DataView_meta)
        self.DataView_extent = QtWidgets.QPushButton(self.widget_3)
        self.DataView_extent.setMinimumSize(QtCore.QSize(120, 0))
        icon29 = QtGui.QIcon()
        icon29.addPixmap(QtGui.QPixmap(":/icons/2216358 - globe locati.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.DataView_extent.setIcon(icon29)
        self.DataView_extent.setObjectName("DataView_extent")
        self.horizontalLayout_5.addWidget(self.DataView_extent)
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem4)
        self.verticalLayout_4.addLayout(self.horizontalLayout_5)
        self.DataView_web = QtWebEngineWidgets.QWebEngineView(self.widget_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.DataView_web.sizePolicy().hasHeightForWidth())
        self.DataView_web.setSizePolicy(sizePolicy)
        self.DataView_web.setObjectName("DataView_web")
        self.verticalLayout_4.addWidget(self.DataView_web)
        self.horizontalLayout_3.addWidget(self.widget_3)
        MainWindow.setCentralWidget(self.Central_Widget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1368, 21))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuProject = QtWidgets.QMenu(self.menubar)
        self.menuProject.setObjectName("menuProject")
        self.menuScenario = QtWidgets.QMenu(self.menuProject)
        self.menuScenario.setIcon(icon26)
        self.menuScenario.setObjectName("menuScenario")
        self.menuGeography = QtWidgets.QMenu(self.menuProject)
        self.menuGeography.setIcon(icon12)
        self.menuGeography.setObjectName("menuGeography")
        self.menuSimulation = QtWidgets.QMenu(self.menubar)
        self.menuSimulation.setObjectName("menuSimulation")
        self.menuUrban_Modelling = QtWidgets.QMenu(self.menuSimulation)
        icon30 = QtGui.QIcon()
        icon30.addPixmap(QtGui.QPixmap(":/icons/Transport-Road-Worker-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menuUrban_Modelling.setIcon(icon30)
        self.menuUrban_Modelling.setObjectName("menuUrban_Modelling")
        self.menuUrban_Planning = QtWidgets.QMenu(self.menuSimulation)
        self.menuUrban_Planning.setIcon(icon16)
        self.menuUrban_Planning.setObjectName("menuUrban_Planning")
        self.menuSpatial_Mapping = QtWidgets.QMenu(self.menuSimulation)
        self.menuSpatial_Mapping.setIcon(icon18)
        self.menuSpatial_Mapping.setObjectName("menuSpatial_Mapping")
        self.menuInfrastructure = QtWidgets.QMenu(self.menuSimulation)
        icon31 = QtGui.QIcon()
        icon31.addPixmap(QtGui.QPixmap(":/icons/Bench-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menuInfrastructure.setIcon(icon31)
        self.menuInfrastructure.setObjectName("menuInfrastructure")
        self.menuSocio_Economic = QtWidgets.QMenu(self.menuSimulation)
        icon32 = QtGui.QIcon()
        icon32.addPixmap(QtGui.QPixmap(":/icons/community-users-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menuSocio_Economic.setIcon(icon32)
        self.menuSocio_Economic.setObjectName("menuSocio_Economic")
        self.menuSpatial_Setup = QtWidgets.QMenu(self.menuSimulation)
        self.menuSpatial_Setup.setIcon(icon22)
        self.menuSpatial_Setup.setObjectName("menuSpatial_Setup")
        self.menuClimate_Setup = QtWidgets.QMenu(self.menuSimulation)
        icon33 = QtGui.QIcon()
        icon33.addPixmap(QtGui.QPixmap(":/icons/cloudy-with-rain-2667018_960_720.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menuClimate_Setup.setIcon(icon33)
        self.menuClimate_Setup.setObjectName("menuClimate_Setup")
        self.menuAdvanced = QtWidgets.QMenu(self.menubar)
        self.menuAdvanced.setObjectName("menuAdvanced")
        self.menuUrban_Modules = QtWidgets.QMenu(self.menuAdvanced)
        self.menuUrban_Modules.setObjectName("menuUrban_Modules")
        self.menuPlugins = QtWidgets.QMenu(self.menuAdvanced)
        self.menuPlugins.setObjectName("menuPlugins")
        self.menuWindow = QtWidgets.QMenu(self.menubar)
        self.menuWindow.setObjectName("menuWindow")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        self.menuData = QtWidgets.QMenu(self.menubar)
        self.menuData.setObjectName("menuData")
        MainWindow.setMenuBar(self.menubar)
        self.General_toolbar = QtWidgets.QToolBar(MainWindow)
        self.General_toolbar.setObjectName("General_toolbar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.General_toolbar)
        self.DataDock = QtWidgets.QDockWidget(MainWindow)
        self.DataDock.setMinimumSize(QtCore.QSize(297, 185))
        self.DataDock.setFloating(False)
        self.DataDock.setFeatures(QtWidgets.QDockWidget.AllDockWidgetFeatures)
        self.DataDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea|QtCore.Qt.RightDockWidgetArea)
        self.DataDock.setObjectName("DataDock")
        self.DataDock_Contents = QtWidgets.QWidget()
        self.DataDock_Contents.setObjectName("DataDock_Contents")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.DataDock_Contents)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.addData = QtWidgets.QPushButton(self.DataDock_Contents)
        self.addData.setText("")
        self.addData.setIcon(icon13)
        self.addData.setIconSize(QtCore.QSize(20, 20))
        self.addData.setObjectName("addData")
        self.gridLayout_5.addWidget(self.addData, 1, 0, 1, 1)
        self.infoData = QtWidgets.QPushButton(self.DataDock_Contents)
        self.infoData.setText("")
        self.infoData.setIcon(icon25)
        self.infoData.setIconSize(QtCore.QSize(20, 20))
        self.infoData.setObjectName("infoData")
        self.gridLayout_5.addWidget(self.infoData, 1, 2, 1, 1)
        self.removeData = QtWidgets.QPushButton(self.DataDock_Contents)
        self.removeData.setText("")
        self.removeData.setIcon(icon14)
        self.removeData.setIconSize(QtCore.QSize(20, 20))
        self.removeData.setObjectName("removeData")
        self.gridLayout_5.addWidget(self.removeData, 1, 1, 1, 1)
        self.previewData = QtWidgets.QPushButton(self.DataDock_Contents)
        self.previewData.setText("")
        self.previewData.setIcon(icon8)
        self.previewData.setIconSize(QtCore.QSize(20, 20))
        self.previewData.setObjectName("previewData")
        self.gridLayout_5.addWidget(self.previewData, 1, 3, 1, 1)
        self.expcolData = QtWidgets.QPushButton(self.DataDock_Contents)
        self.expcolData.setText("")
        icon34 = QtGui.QIcon()
        icon34.addPixmap(QtGui.QPixmap(":/icons/arrowright.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.expcolData.setIcon(icon34)
        self.expcolData.setIconSize(QtCore.QSize(20, 20))
        self.expcolData.setObjectName("expcolData")
        self.gridLayout_5.addWidget(self.expcolData, 1, 4, 1, 1)
        self.DataDock_View = QtWidgets.QTreeWidget(self.DataDock_Contents)
        self.DataDock_View.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.DataDock_View.setObjectName("DataDock_View")
        font = QtGui.QFont()
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.DataDock_View.headerItem().setFont(0, font)
        item_0 = QtWidgets.QTreeWidgetItem(self.DataDock_View)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_2 = QtWidgets.QTreeWidgetItem(item_1)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_2 = QtWidgets.QTreeWidgetItem(item_1)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_2 = QtWidgets.QTreeWidgetItem(item_1)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_2 = QtWidgets.QTreeWidgetItem(item_1)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_2 = QtWidgets.QTreeWidgetItem(item_1)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_2 = QtWidgets.QTreeWidgetItem(item_1)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_2 = QtWidgets.QTreeWidgetItem(item_1)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_2 = QtWidgets.QTreeWidgetItem(item_1)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_2 = QtWidgets.QTreeWidgetItem(item_1)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_2 = QtWidgets.QTreeWidgetItem(item_1)
        item_0 = QtWidgets.QTreeWidgetItem(self.DataDock_View)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_2 = QtWidgets.QTreeWidgetItem(item_1)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_2 = QtWidgets.QTreeWidgetItem(item_1)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_2 = QtWidgets.QTreeWidgetItem(item_1)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_2 = QtWidgets.QTreeWidgetItem(item_1)
        item_0 = QtWidgets.QTreeWidgetItem(self.DataDock_View)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_0 = QtWidgets.QTreeWidgetItem(self.DataDock_View)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        self.gridLayout_5.addWidget(self.DataDock_View, 0, 0, 1, 5)
        self.DataDock.setWidget(self.DataDock_Contents)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.DataDock)
        self.ScenarioDock = QtWidgets.QDockWidget(MainWindow)
        self.ScenarioDock.setMinimumSize(QtCore.QSize(291, 217))
        self.ScenarioDock.setFloating(False)
        self.ScenarioDock.setFeatures(QtWidgets.QDockWidget.AllDockWidgetFeatures)
        self.ScenarioDock.setObjectName("ScenarioDock")
        self.ScenarioDock_Contents = QtWidgets.QWidget()
        self.ScenarioDock_Contents.setObjectName("ScenarioDock_Contents")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.ScenarioDock_Contents)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.ScenarioDock_View = QtWidgets.QTreeWidget(self.ScenarioDock_Contents)
        self.ScenarioDock_View.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.ScenarioDock_View.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.ScenarioDock_View.setAlternatingRowColors(True)
        self.ScenarioDock_View.setWordWrap(True)
        self.ScenarioDock_View.setExpandsOnDoubleClick(False)
        self.ScenarioDock_View.setObjectName("ScenarioDock_View")
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.ScenarioDock_View.headerItem().setFont(0, font)
        item_0 = QtWidgets.QTreeWidgetItem(self.ScenarioDock_View)
        item_0.setIcon(0, icon17)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setFlags(QtCore.Qt.NoItemFlags)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setFlags(QtCore.Qt.NoItemFlags)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setFlags(QtCore.Qt.NoItemFlags)
        self.verticalLayout_3.addWidget(self.ScenarioDock_View)
        self.ScenarioDock_Controls = QtWidgets.QWidget(self.ScenarioDock_Contents)
        self.ScenarioDock_Controls.setObjectName("ScenarioDock_Controls")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.ScenarioDock_Controls)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem5)
        self.newScenario = QtWidgets.QPushButton(self.ScenarioDock_Controls)
        self.newScenario.setText("")
        self.newScenario.setIcon(icon13)
        self.newScenario.setIconSize(QtCore.QSize(20, 20))
        self.newScenario.setObjectName("newScenario")
        self.horizontalLayout_2.addWidget(self.newScenario)
        self.activateScenario = QtWidgets.QPushButton(self.ScenarioDock_Controls)
        self.activateScenario.setText("")
        icon35 = QtGui.QIcon()
        icon35.addPixmap(QtGui.QPixmap(":/icons/activate.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.activateScenario.setIcon(icon35)
        self.activateScenario.setIconSize(QtCore.QSize(20, 20))
        self.activateScenario.setObjectName("activateScenario")
        self.horizontalLayout_2.addWidget(self.activateScenario)
        self.editScenario = QtWidgets.QPushButton(self.ScenarioDock_Controls)
        self.editScenario.setText("")
        icon36 = QtGui.QIcon()
        icon36.addPixmap(QtGui.QPixmap(":/icons/Editing-edit-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.editScenario.setIcon(icon36)
        self.editScenario.setIconSize(QtCore.QSize(20, 20))
        self.editScenario.setObjectName("editScenario")
        self.horizontalLayout_2.addWidget(self.editScenario)
        self.deleteScenario = QtWidgets.QPushButton(self.ScenarioDock_Controls)
        self.deleteScenario.setText("")
        self.deleteScenario.setIcon(icon14)
        self.deleteScenario.setIconSize(QtCore.QSize(20, 20))
        self.deleteScenario.setObjectName("deleteScenario")
        self.horizontalLayout_2.addWidget(self.deleteScenario)
        self.verticalLayout_3.addWidget(self.ScenarioDock_Controls)
        self.ScenarioDock.setWidget(self.ScenarioDock_Contents)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.ScenarioDock)
        self.ToolboxDock = QtWidgets.QDockWidget(MainWindow)
        self.ToolboxDock.setMinimumSize(QtCore.QSize(200, 483))
        self.ToolboxDock.setFloating(False)
        self.ToolboxDock.setFeatures(QtWidgets.QDockWidget.AllDockWidgetFeatures)
        self.ToolboxDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea|QtCore.Qt.RightDockWidgetArea)
        self.ToolboxDock.setObjectName("ToolboxDock")
        self.ModuleDock_Contents = QtWidgets.QWidget()
        self.ModuleDock_Contents.setObjectName("ModuleDock_Contents")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.ModuleDock_Contents)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.widget = QtWidgets.QWidget(self.ModuleDock_Contents)
        self.widget.setObjectName("widget")
        self.verticalLayout_11 = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout_11.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_11.setSpacing(3)
        self.verticalLayout_11.setObjectName("verticalLayout_11")
        self.toolboxTree = QtWidgets.QTreeWidget(self.widget)
        self.toolboxTree.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.toolboxTree.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.toolboxTree.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.toolboxTree.setDragDropMode(QtWidgets.QAbstractItemView.NoDragDrop)
        self.toolboxTree.setAlternatingRowColors(False)
        self.toolboxTree.setIndentation(15)
        self.toolboxTree.setUniformRowHeights(False)
        self.toolboxTree.setAnimated(True)
        self.toolboxTree.setAllColumnsShowFocus(False)
        self.toolboxTree.setHeaderHidden(True)
        self.toolboxTree.setExpandsOnDoubleClick(True)
        self.toolboxTree.setObjectName("toolboxTree")
        font = QtGui.QFont()
        font.setPointSize(8)
        self.toolboxTree.headerItem().setFont(0, font)
        item_0 = QtWidgets.QTreeWidgetItem(self.toolboxTree)
        font = QtGui.QFont()
        font.setPointSize(8)
        item_0.setFont(0, font)
        item_0.setFlags(QtCore.Qt.ItemIsEnabled)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        font = QtGui.QFont()
        font.setPointSize(8)
        item_1.setFont(0, font)
        item_1.setIcon(0, icon22)
        item_1.setFlags(QtCore.Qt.ItemIsSelectable|QtCore.Qt.ItemIsDragEnabled|QtCore.Qt.ItemIsDropEnabled|QtCore.Qt.ItemIsEnabled)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        font = QtGui.QFont()
        font.setPointSize(7)
        item_1.setFont(0, font)
        icon37 = QtGui.QIcon()
        icon37.addPixmap(QtGui.QPixmap(":/icons/admin_border.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_1.setIcon(0, icon37)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        font = QtGui.QFont()
        font.setPointSize(7)
        item_1.setFont(0, font)
        icon38 = QtGui.QIcon()
        icon38.addPixmap(QtGui.QPixmap(":/icons/topography.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_1.setIcon(0, icon38)
        item_0 = QtWidgets.QTreeWidgetItem(self.toolboxTree)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        font = QtGui.QFont()
        font.setPointSize(7)
        item_1.setFont(0, font)
        item_1.setIcon(0, icon33)
        item_0 = QtWidgets.QTreeWidgetItem(self.toolboxTree)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        font = QtGui.QFont()
        font.setPointSize(7)
        item_1.setFont(0, font)
        icon39 = QtGui.QIcon()
        icon39.addPixmap(QtGui.QPixmap(":/icons/House-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_1.setIcon(0, icon39)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        font = QtGui.QFont()
        font.setPointSize(7)
        item_1.setFont(0, font)
        icon40 = QtGui.QIcon()
        icon40.addPixmap(QtGui.QPixmap(":/icons/City_icon_(Noun_Project).svg.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_1.setIcon(0, icon40)
        item_0 = QtWidgets.QTreeWidgetItem(self.toolboxTree)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        font = QtGui.QFont()
        font.setPointSize(7)
        item_1.setFont(0, font)
        item_1.setIcon(0, icon31)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        font = QtGui.QFont()
        font.setPointSize(7)
        item_1.setFont(0, font)
        self.verticalLayout_11.addWidget(self.toolboxTree)
        self.gridLayout_4.addWidget(self.widget, 1, 1, 1, 1)
        self.ToolboxDock.setWidget(self.ModuleDock_Contents)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(2), self.ToolboxDock)
        self.Project_Toolbar = QtWidgets.QToolBar(MainWindow)
        self.Project_Toolbar.setObjectName("Project_Toolbar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.Project_Toolbar)
        self.Geography_Toolbar = QtWidgets.QToolBar(MainWindow)
        self.Geography_Toolbar.setObjectName("Geography_Toolbar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.Geography_Toolbar)
        self.Settings_Toolbar = QtWidgets.QToolBar(MainWindow)
        self.Settings_Toolbar.setObjectName("Settings_Toolbar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.Settings_Toolbar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.dockWidget = QtWidgets.QDockWidget(MainWindow)
        self.dockWidget.setFloating(False)
        self.dockWidget.setObjectName("dockWidget")
        self.dockWidgetContents = QtWidgets.QWidget()
        self.dockWidgetContents.setObjectName("dockWidgetContents")
        self.verticalLayout_12 = QtWidgets.QVBoxLayout(self.dockWidgetContents)
        self.verticalLayout_12.setObjectName("verticalLayout_12")
        self.OutputConsole = QtWidgets.QTextEdit(self.dockWidgetContents)
        self.OutputConsole.setMinimumSize(QtCore.QSize(0, 133))
        self.OutputConsole.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.OutputConsole.setLineWrapMode(QtWidgets.QTextEdit.NoWrap)
        self.OutputConsole.setReadOnly(True)
        self.OutputConsole.setTextInteractionFlags(QtCore.Qt.TextSelectableByKeyboard|QtCore.Qt.TextSelectableByMouse)
        self.OutputConsole.setObjectName("OutputConsole")
        self.verticalLayout_12.addWidget(self.OutputConsole)
        self.dockWidget.setWidget(self.dockWidgetContents)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(8), self.dockWidget)
        self.actionNew_Project = QtWidgets.QAction(MainWindow)
        icon41 = QtGui.QIcon()
        icon41.addPixmap(QtGui.QPixmap(":/icons/new-file-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNew_Project.setIcon(icon41)
        self.actionNew_Project.setObjectName("actionNew_Project")
        self.actionOpen_Project = QtWidgets.QAction(MainWindow)
        icon42 = QtGui.QIcon()
        icon42.addPixmap(QtGui.QPixmap(":/icons/open-file-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOpen_Project.setIcon(icon42)
        self.actionOpen_Project.setObjectName("actionOpen_Project")
        self.actionSave = QtWidgets.QAction(MainWindow)
        icon43 = QtGui.QIcon()
        icon43.addPixmap(QtGui.QPixmap(":/icons/Actions-document-save-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSave.setIcon(icon43)
        self.actionSave.setObjectName("actionSave")
        self.actionSave_As = QtWidgets.QAction(MainWindow)
        self.actionSave_As.setObjectName("actionSave_As")
        self.actionImport_Project = QtWidgets.QAction(MainWindow)
        icon44 = QtGui.QIcon()
        icon44.addPixmap(QtGui.QPixmap(":/icons/import-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionImport_Project.setIcon(icon44)
        self.actionImport_Project.setObjectName("actionImport_Project")
        self.actionExport_Project = QtWidgets.QAction(MainWindow)
        self.actionExport_Project.setIcon(icon15)
        self.actionExport_Project.setObjectName("actionExport_Project")
        self.actionQuit = QtWidgets.QAction(MainWindow)
        icon45 = QtGui.QIcon()
        icon45.addPixmap(QtGui.QPixmap(":/icons/Sign-Shutdown-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionQuit.setIcon(icon45)
        self.actionQuit.setObjectName("actionQuit")
        self.actionPreferences = QtWidgets.QAction(MainWindow)
        icon46 = QtGui.QIcon()
        icon46.addPixmap(QtGui.QPixmap(":/icons/Settings-icon (1).png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPreferences.setIcon(icon46)
        self.actionPreferences.setObjectName("actionPreferences")
        self.actionEdit_Project_Details = QtWidgets.QAction(MainWindow)
        icon47 = QtGui.QIcon()
        icon47.addPixmap(QtGui.QPixmap(":/icons/edit-file-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionEdit_Project_Details.setIcon(icon47)
        self.actionEdit_Project_Details.setObjectName("actionEdit_Project_Details")
        self.actionView_Documentation = QtWidgets.QAction(MainWindow)
        icon48 = QtGui.QIcon()
        icon48.addPixmap(QtGui.QPixmap(":/icons/Help-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionView_Documentation.setIcon(icon48)
        self.actionView_Documentation.setObjectName("actionView_Documentation")
        self.actionOnline_Help = QtWidgets.QAction(MainWindow)
        icon49 = QtGui.QIcon()
        icon49.addPixmap(QtGui.QPixmap(":/icons/Categories-applications-internet-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOnline_Help.setIcon(icon49)
        self.actionOnline_Help.setObjectName("actionOnline_Help")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        self.actionAbout.setIcon(icon19)
        self.actionAbout.setObjectName("actionAbout")
        self.actionLike_on_Facebook = QtWidgets.QAction(MainWindow)
        icon50 = QtGui.QIcon()
        icon50.addPixmap(QtGui.QPixmap(":/icons/social-facebook-box-blue-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionLike_on_Facebook.setIcon(icon50)
        self.actionLike_on_Facebook.setObjectName("actionLike_on_Facebook")
        self.actionShare_on_Twiter = QtWidgets.QAction(MainWindow)
        icon51 = QtGui.QIcon()
        icon51.addPixmap(QtGui.QPixmap(":/icons/twitter-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionShare_on_Twiter.setIcon(icon51)
        self.actionShare_on_Twiter.setObjectName("actionShare_on_Twiter")
        self.actionOpen_Project_Folder = QtWidgets.QAction(MainWindow)
        self.actionOpen_Project_Folder.setIcon(icon)
        self.actionOpen_Project_Folder.setObjectName("actionOpen_Project_Folder")
        self.actionMinimize = QtWidgets.QAction(MainWindow)
        self.actionMinimize.setObjectName("actionMinimize")
        self.actionResults_Viewer = QtWidgets.QAction(MainWindow)
        self.actionResults_Viewer.setIcon(icon1)
        self.actionResults_Viewer.setObjectName("actionResults_Viewer")
        self.actionModel_Calibration_Viewer = QtWidgets.QAction(MainWindow)
        icon52 = QtGui.QIcon()
        icon52.addPixmap(QtGui.QPixmap(":/icons/Actions-office-chart-area-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionModel_Calibration_Viewer.setIcon(icon52)
        self.actionModel_Calibration_Viewer.setObjectName("actionModel_Calibration_Viewer")
        self.actionWater_Modules = QtWidgets.QAction(MainWindow)
        self.actionWater_Modules.setObjectName("actionWater_Modules")
        self.actionUrban_Planning_Settings = QtWidgets.QAction(MainWindow)
        self.actionUrban_Planning_Settings.setObjectName("actionUrban_Planning_Settings")
        self.actionUrban_Modelling_Settings = QtWidgets.QAction(MainWindow)
        self.actionUrban_Modelling_Settings.setObjectName("actionUrban_Modelling_Settings")
        self.actionFacilities_Data = QtWidgets.QAction(MainWindow)
        self.actionFacilities_Data.setObjectName("actionFacilities_Data")
        self.actionView_Project_Description = QtWidgets.QAction(MainWindow)
        self.actionView_Project_Description.setIcon(icon3)
        self.actionView_Project_Description.setObjectName("actionView_Project_Description")
        self.actionManage_Data_Sets = QtWidgets.QAction(MainWindow)
        self.actionManage_Data_Sets.setObjectName("actionManage_Data_Sets")
        self.actionAdd_Data = QtWidgets.QAction(MainWindow)
        self.actionAdd_Data.setIcon(icon13)
        self.actionAdd_Data.setObjectName("actionAdd_Data")
        self.actionImport_Archive_File = QtWidgets.QAction(MainWindow)
        icon53 = QtGui.QIcon()
        icon53.addPixmap(QtGui.QPixmap(":/icons/Misc-Download-Database-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionImport_Archive_File.setIcon(icon53)
        self.actionImport_Archive_File.setObjectName("actionImport_Archive_File")
        self.actionImport_Archive_from_Project = QtWidgets.QAction(MainWindow)
        self.actionImport_Archive_from_Project.setObjectName("actionImport_Archive_from_Project")
        self.actionExport_Data_Archive = QtWidgets.QAction(MainWindow)
        icon54 = QtGui.QIcon()
        icon54.addPixmap(QtGui.QPixmap(":/icons/if_Upload_Database_66056.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionExport_Data_Archive.setIcon(icon54)
        self.actionExport_Data_Archive.setObjectName("actionExport_Data_Archive")
        self.actionReset_Data_Library = QtWidgets.QAction(MainWindow)
        self.actionReset_Data_Library.setIcon(icon24)
        self.actionReset_Data_Library.setObjectName("actionReset_Data_Library")
        self.actionView_Active_Simulation_Data = QtWidgets.QAction(MainWindow)
        self.actionView_Active_Simulation_Data.setObjectName("actionView_Active_Simulation_Data")
        self.actionDelete_Scenario = QtWidgets.QAction(MainWindow)
        self.actionDelete_Scenario.setIcon(icon14)
        self.actionDelete_Scenario.setObjectName("actionDelete_Scenario")
        self.actionDefine_New_Scenario = QtWidgets.QAction(MainWindow)
        self.actionDefine_New_Scenario.setIcon(icon13)
        self.actionDefine_New_Scenario.setObjectName("actionDefine_New_Scenario")
        self.actionView_Full_Project_Log = QtWidgets.QAction(MainWindow)
        self.actionView_Full_Project_Log.setIcon(icon27)
        self.actionView_Full_Project_Log.setObjectName("actionView_Full_Project_Log")
        self.actionPerformance = QtWidgets.QAction(MainWindow)
        icon55 = QtGui.QIcon()
        icon55.addPixmap(QtGui.QPixmap(":/icons/Bar-chart-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPerformance.setIcon(icon55)
        self.actionPerformance.setObjectName("actionPerformance")
        self.actionSubmit_a_Bug_Report = QtWidgets.QAction(MainWindow)
        icon56 = QtGui.QIcon()
        icon56.addPixmap(QtGui.QPixmap(":/icons/debug-png-image-88477.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSubmit_a_Bug_Report.setIcon(icon56)
        self.actionSubmit_a_Bug_Report.setObjectName("actionSubmit_a_Bug_Report")
        self.actionRun = QtWidgets.QAction(MainWindow)
        self.actionRun.setIcon(icon21)
        self.actionRun.setObjectName("actionRun")
        self.actionGrowth_Model = QtWidgets.QAction(MainWindow)
        self.actionGrowth_Model.setObjectName("actionGrowth_Model")
        self.actionSpatial_Attraction = QtWidgets.QAction(MainWindow)
        self.actionSpatial_Attraction.setObjectName("actionSpatial_Attraction")
        self.actionSpatial_Allocation = QtWidgets.QAction(MainWindow)
        self.actionSpatial_Allocation.setObjectName("actionSpatial_Allocation")
        self.actionResidential = QtWidgets.QAction(MainWindow)
        self.actionResidential.setIcon(icon39)
        self.actionResidential.setObjectName("actionResidential")
        self.actionNon_Residentail = QtWidgets.QAction(MainWindow)
        icon57 = QtGui.QIcon()
        icon57.addPixmap(QtGui.QPixmap(":/icons/Building-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNon_Residentail.setIcon(icon57)
        self.actionNon_Residentail.setObjectName("actionNon_Residentail")
        self.actionCity_wide_Planning = QtWidgets.QAction(MainWindow)
        self.actionCity_wide_Planning.setObjectName("actionCity_wide_Planning")
        self.actionTransport = QtWidgets.QAction(MainWindow)
        icon58 = QtGui.QIcon()
        icon58.addPixmap(QtGui.QPixmap(":/icons/Car-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionTransport.setIcon(icon58)
        self.actionTransport.setObjectName("actionTransport")
        self.actionOpen_Spaces = QtWidgets.QAction(MainWindow)
        icon59 = QtGui.QIcon()
        icon59.addPixmap(QtGui.QPixmap(":/icons/Tree-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOpen_Spaces.setIcon(icon59)
        self.actionOpen_Spaces.setObjectName("actionOpen_Spaces")
        self.actionMiscellaneous = QtWidgets.QAction(MainWindow)
        icon60 = QtGui.QIcon()
        icon60.addPixmap(QtGui.QPixmap(":/icons/gps-2845363_960_720.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionMiscellaneous.setIcon(icon60)
        self.actionMiscellaneous.setObjectName("actionMiscellaneous")
        self.actionCivic_Infrastructure = QtWidgets.QAction(MainWindow)
        self.actionCivic_Infrastructure.setObjectName("actionCivic_Infrastructure")
        self.actionPollution_Mapping = QtWidgets.QAction(MainWindow)
        self.actionPollution_Mapping.setObjectName("actionPollution_Mapping")
        self.actionFlood_Risk_Mapping = QtWidgets.QAction(MainWindow)
        self.actionFlood_Risk_Mapping.setObjectName("actionFlood_Risk_Mapping")
        self.actionWater_Demands = QtWidgets.QAction(MainWindow)
        self.actionWater_Demands.setObjectName("actionWater_Demands")
        self.actionLand_Cover = QtWidgets.QAction(MainWindow)
        self.actionLand_Cover.setObjectName("actionLand_Cover")
        self.actionPlanning_Overlays = QtWidgets.QAction(MainWindow)
        self.actionPlanning_Overlays.setObjectName("actionPlanning_Overlays")
        self.actionSocio_Economic = QtWidgets.QAction(MainWindow)
        icon61 = QtGui.QIcon()
        icon61.addPixmap(QtGui.QPixmap(":/icons/Actions-view-pim-tasks-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSocio_Economic.setIcon(icon61)
        self.actionSocio_Economic.setObjectName("actionSocio_Economic")
        self.actionWater_Management_Objectives = QtWidgets.QAction(MainWindow)
        self.actionWater_Management_Objectives.setObjectName("actionWater_Management_Objectives")
        self.actionGreen_Infrastructure = QtWidgets.QAction(MainWindow)
        self.actionGreen_Infrastructure.setObjectName("actionGreen_Infrastructure")
        self.actionWater_Recycling_and_Reuse = QtWidgets.QAction(MainWindow)
        self.actionWater_Recycling_and_Reuse.setObjectName("actionWater_Recycling_and_Reuse")
        self.actionHousehold_Appliances = QtWidgets.QAction(MainWindow)
        self.actionHousehold_Appliances.setObjectName("actionHousehold_Appliances")
        self.actionStakeholder_Groups = QtWidgets.QAction(MainWindow)
        self.actionStakeholder_Groups.setObjectName("actionStakeholder_Groups")
        self.actionCost_Information = QtWidgets.QAction(MainWindow)
        self.actionCost_Information.setObjectName("actionCost_Information")
        self.actionBenefits_Assessment = QtWidgets.QAction(MainWindow)
        self.actionBenefits_Assessment.setObjectName("actionBenefits_Assessment")
        self.actionImpact = QtWidgets.QAction(MainWindow)
        icon62 = QtGui.QIcon()
        icon62.addPixmap(QtGui.QPixmap(":/icons/Market-Analysis-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionImpact.setIcon(icon62)
        self.actionImpact.setObjectName("actionImpact")
        self.actionDecision_Analysis = QtWidgets.QAction(MainWindow)
        self.actionDecision_Analysis.setIcon(icon23)
        self.actionDecision_Analysis.setObjectName("actionDecision_Analysis")
        self.actionRepresentation = QtWidgets.QAction(MainWindow)
        self.actionRepresentation.setObjectName("actionRepresentation")
        self.actionConnectivity = QtWidgets.QAction(MainWindow)
        self.actionConnectivity.setObjectName("actionConnectivity")
        self.actionData_Selection = QtWidgets.QAction(MainWindow)
        self.actionData_Selection.setObjectName("actionData_Selection")
        self.actionScenario_Definition = QtWidgets.QAction(MainWindow)
        self.actionScenario_Definition.setObjectName("actionScenario_Definition")
        self.actionEdit_Scenario = QtWidgets.QAction(MainWindow)
        self.actionEdit_Scenario.setIcon(icon36)
        self.actionEdit_Scenario.setObjectName("actionEdit_Scenario")
        self.actionReporting_Options = QtWidgets.QAction(MainWindow)
        self.actionReporting_Options.setIcon(icon3)
        self.actionReporting_Options.setObjectName("actionReporting_Options")
        self.actionMap_Export_Options = QtWidgets.QAction(MainWindow)
        icon63 = QtGui.QIcon()
        icon63.addPixmap(QtGui.QPixmap(":/icons/maps-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionMap_Export_Options.setIcon(icon63)
        self.actionMap_Export_Options.setObjectName("actionMap_Export_Options")
        self.actionClose_Project = QtWidgets.QAction(MainWindow)
        self.actionClose_Project.setObjectName("actionClose_Project")
        self.actionActionReset = QtWidgets.QAction(MainWindow)
        self.actionActionReset.setIcon(icon24)
        self.actionActionReset.setObjectName("actionActionReset")
        self.actionSSANTO = QtWidgets.QAction(MainWindow)
        self.actionSSANTO.setObjectName("actionSSANTO")
        self.actionLand_Use_Reclassifier = QtWidgets.QAction(MainWindow)
        self.actionLand_Use_Reclassifier.setEnabled(False)
        self.actionLand_Use_Reclassifier.setObjectName("actionLand_Use_Reclassifier")
        self.actionDefine_Influence_Functions = QtWidgets.QAction(MainWindow)
        self.actionDefine_Influence_Functions.setObjectName("actionDefine_Influence_Functions")
        self.actionDefine_IF = QtWidgets.QAction(MainWindow)
        self.actionDefine_IF.setObjectName("actionDefine_IF")
        self.actionaction_coffeebreak = QtWidgets.QAction(MainWindow)
        icon64 = QtGui.QIcon()
        icon64.addPixmap(QtGui.QPixmap(":/icons/iconfinder_addiction_Coffee_1_3122405.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionaction_coffeebreak.setIcon(icon64)
        self.actionaction_coffeebreak.setObjectName("actionaction_coffeebreak")
        self.actionAdd_Simulation_Boundary = QtWidgets.QAction(MainWindow)
        self.actionAdd_Simulation_Boundary.setIcon(icon9)
        self.actionAdd_Simulation_Boundary.setObjectName("actionAdd_Simulation_Boundary")
        self.actionView_Simulation_Boundaries = QtWidgets.QAction(MainWindow)
        self.actionView_Simulation_Boundaries.setIcon(icon5)
        self.actionView_Simulation_Boundaries.setObjectName("actionView_Simulation_Boundaries")
        self.actionAdd_Basic_Shape_Boundary = QtWidgets.QAction(MainWindow)
        self.actionAdd_Basic_Shape_Boundary.setIcon(icon11)
        self.actionAdd_Basic_Shape_Boundary.setObjectName("actionAdd_Basic_Shape_Boundary")
        self.actionAdd_Location = QtWidgets.QAction(MainWindow)
        self.actionAdd_Location.setIcon(icon6)
        self.actionAdd_Location.setObjectName("actionAdd_Location")
        self.actionView_Locations = QtWidgets.QAction(MainWindow)
        self.actionView_Locations.setIcon(icon4)
        self.actionView_Locations.setObjectName("actionView_Locations")
        self.menuFile.addAction(self.actionNew_Project)
        self.menuFile.addAction(self.actionOpen_Project)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addAction(self.actionSave_As)
        self.menuFile.addAction(self.actionImport_Project)
        self.menuFile.addAction(self.actionExport_Project)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionClose_Project)
        self.menuFile.addAction(self.actionQuit)
        self.menuEdit.addAction(self.actionEdit_Project_Details)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionPreferences)
        self.menuScenario.addAction(self.actionDefine_New_Scenario)
        self.menuScenario.addAction(self.actionEdit_Scenario)
        self.menuScenario.addAction(self.actionDelete_Scenario)
        self.menuGeography.addAction(self.actionAdd_Location)
        self.menuGeography.addAction(self.actionView_Locations)
        self.menuGeography.addSeparator()
        self.menuGeography.addAction(self.actionAdd_Simulation_Boundary)
        self.menuGeography.addAction(self.actionAdd_Basic_Shape_Boundary)
        self.menuGeography.addAction(self.actionView_Simulation_Boundaries)
        self.menuProject.addAction(self.actionView_Project_Description)
        self.menuProject.addAction(self.actionView_Full_Project_Log)
        self.menuProject.addSeparator()
        self.menuProject.addAction(self.menuGeography.menuAction())
        self.menuProject.addAction(self.menuScenario.menuAction())
        self.menuProject.addSeparator()
        self.menuProject.addAction(self.actionReporting_Options)
        self.menuProject.addAction(self.actionMap_Export_Options)
        self.menuUrban_Modelling.addAction(self.actionGrowth_Model)
        self.menuUrban_Modelling.addAction(self.actionSpatial_Attraction)
        self.menuUrban_Modelling.addAction(self.actionSpatial_Allocation)
        self.menuUrban_Modelling.addAction(self.actionDefine_IF)
        self.menuUrban_Planning.addAction(self.actionCity_wide_Planning)
        self.menuUrban_Planning.addAction(self.actionResidential)
        self.menuUrban_Planning.addAction(self.actionNon_Residentail)
        self.menuUrban_Planning.addAction(self.actionTransport)
        self.menuUrban_Planning.addAction(self.actionOpen_Spaces)
        self.menuUrban_Planning.addAction(self.actionMiscellaneous)
        self.menuUrban_Planning.addSeparator()
        self.menuUrban_Planning.addAction(self.actionCivic_Infrastructure)
        self.menuSpatial_Mapping.addAction(self.actionPlanning_Overlays)
        self.menuSpatial_Mapping.addAction(self.actionLand_Cover)
        self.menuSpatial_Mapping.addAction(self.actionWater_Demands)
        self.menuSpatial_Mapping.addAction(self.actionPollution_Mapping)
        self.menuSpatial_Mapping.addAction(self.actionFlood_Risk_Mapping)
        self.menuInfrastructure.addAction(self.actionHousehold_Appliances)
        self.menuInfrastructure.addAction(self.actionGreen_Infrastructure)
        self.menuInfrastructure.addAction(self.actionWater_Recycling_and_Reuse)
        self.menuSocio_Economic.addAction(self.actionStakeholder_Groups)
        self.menuSocio_Economic.addAction(self.actionCost_Information)
        self.menuSocio_Economic.addAction(self.actionBenefits_Assessment)
        self.menuSpatial_Setup.addAction(self.actionRepresentation)
        self.menuSpatial_Setup.addAction(self.actionConnectivity)
        self.menuClimate_Setup.addAction(self.actionData_Selection)
        self.menuClimate_Setup.addAction(self.actionScenario_Definition)
        self.menuSimulation.addAction(self.menuSpatial_Setup.menuAction())
        self.menuSimulation.addAction(self.menuClimate_Setup.menuAction())
        self.menuSimulation.addSeparator()
        self.menuSimulation.addAction(self.menuUrban_Modelling.menuAction())
        self.menuSimulation.addAction(self.menuUrban_Planning.menuAction())
        self.menuSimulation.addAction(self.menuSocio_Economic.menuAction())
        self.menuSimulation.addSeparator()
        self.menuSimulation.addAction(self.menuSpatial_Mapping.menuAction())
        self.menuSimulation.addAction(self.actionSocio_Economic)
        self.menuSimulation.addAction(self.menuInfrastructure.menuAction())
        self.menuSimulation.addSeparator()
        self.menuSimulation.addAction(self.actionPerformance)
        self.menuSimulation.addAction(self.actionImpact)
        self.menuSimulation.addAction(self.actionDecision_Analysis)
        self.menuSimulation.addSeparator()
        self.menuSimulation.addAction(self.actionRun)
        self.menuUrban_Modules.addAction(self.actionUrban_Modelling_Settings)
        self.menuUrban_Modules.addAction(self.actionUrban_Planning_Settings)
        self.menuUrban_Modules.addAction(self.actionFacilities_Data)
        self.menuPlugins.addAction(self.actionLand_Use_Reclassifier)
        self.menuPlugins.addAction(self.actionSSANTO)
        self.menuAdvanced.addAction(self.menuUrban_Modules.menuAction())
        self.menuAdvanced.addAction(self.actionWater_Modules)
        self.menuAdvanced.addAction(self.actionModel_Calibration_Viewer)
        self.menuAdvanced.addAction(self.menuPlugins.menuAction())
        self.menuWindow.addAction(self.actionMinimize)
        self.menuWindow.addSeparator()
        self.menuWindow.addAction(self.actionOpen_Project_Folder)
        self.menuWindow.addAction(self.actionResults_Viewer)
        self.menuHelp.addAction(self.actionAbout)
        self.menuHelp.addAction(self.actionView_Documentation)
        self.menuHelp.addAction(self.actionOnline_Help)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionSubmit_a_Bug_Report)
        self.menuHelp.addAction(self.actionLike_on_Facebook)
        self.menuHelp.addAction(self.actionShare_on_Twiter)
        self.menuData.addAction(self.actionAdd_Data)
        self.menuData.addAction(self.actionImport_Archive_File)
        self.menuData.addAction(self.actionImport_Archive_from_Project)
        self.menuData.addAction(self.actionExport_Data_Archive)
        self.menuData.addSeparator()
        self.menuData.addAction(self.actionReset_Data_Library)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuProject.menuAction())
        self.menubar.addAction(self.menuData.menuAction())
        self.menubar.addAction(self.menuSimulation.menuAction())
        self.menubar.addAction(self.menuAdvanced.menuAction())
        self.menubar.addAction(self.menuWindow.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.General_toolbar.addAction(self.actionNew_Project)
        self.General_toolbar.addAction(self.actionOpen_Project)
        self.General_toolbar.addAction(self.actionSave)
        self.General_toolbar.addAction(self.actionExport_Project)
        self.Project_Toolbar.addAction(self.actionView_Project_Description)
        self.Project_Toolbar.addAction(self.actionView_Full_Project_Log)
        self.Project_Toolbar.addAction(self.actionResults_Viewer)
        self.Project_Toolbar.addAction(self.actionOpen_Project_Folder)
        self.Project_Toolbar.addSeparator()
        self.Project_Toolbar.addAction(self.actionRun)
        self.Geography_Toolbar.addAction(self.actionAdd_Location)
        self.Geography_Toolbar.addAction(self.actionView_Locations)
        self.Geography_Toolbar.addAction(self.actionAdd_Simulation_Boundary)
        self.Geography_Toolbar.addAction(self.actionAdd_Basic_Shape_Boundary)
        self.Geography_Toolbar.addAction(self.actionView_Simulation_Boundaries)
        self.Settings_Toolbar.addAction(self.actionPreferences)
        self.Settings_Toolbar.addAction(self.actionAbout)
        self.Settings_Toolbar.addAction(self.actionView_Documentation)
        self.Settings_Toolbar.addSeparator()
        self.Settings_Toolbar.addAction(self.actionSubmit_a_Bug_Report)
        self.Settings_Toolbar.addAction(self.actionOnline_Help)
        self.Settings_Toolbar.addAction(self.actionLike_on_Facebook)
        self.Settings_Toolbar.addAction(self.actionShare_on_Twiter)
        self.Settings_Toolbar.addAction(self.actionaction_coffeebreak)

        self.retranslateUi(MainWindow)
        self.ScenarioView_Widget.setCurrentIndex(0)
        self.geography_stack.setCurrentIndex(1)
        self.scenarioMgmt_tabview.setCurrentIndex(0)
        self.actionMinimize.triggered.connect(MainWindow.hide)
        self.actionQuit.triggered.connect(MainWindow.close)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        MainWindow.setTabOrder(self.newScenario, self.editScenario)
        MainWindow.setTabOrder(self.editScenario, self.deleteScenario)
        MainWindow.setTabOrder(self.deleteScenario, self.ScenarioView_Widget)
        MainWindow.setTabOrder(self.ScenarioView_Widget, self.Log)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "UrbanBEATS Planning Support Tool"))
        self.label.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:10pt; font-weight:600;\">Project Overview</span></p></body></html>"))
        self.Project_projectfolder.setToolTip(_translate("MainWindow", "Open Project Folder"))
        self.Project_resultsview.setToolTip(_translate("MainWindow", "Results Viewer"))
        self.Project_report.setToolTip(_translate("MainWindow", "Export Results"))
        self.Project.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;\"><br /></p></body></html>"))
        self.ScenarioView_Widget.setTabText(self.ScenarioView_Widget.indexOf(self.Project_tab), _translate("MainWindow", "Project"))
        self.Locations_Boundaries_title.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-weight:600;\">Overview of Project Locations and Boundaries</span></p></body></html>"))
        self.geography_combo.setItemText(0, _translate("MainWindow", "Locations"))
        self.geography_combo.setItemText(1, _translate("MainWindow", "Simulation Boundaries"))
        self.LocationSummary.setSortingEnabled(True)
        item = self.LocationSummary.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Location Name"))
        item = self.LocationSummary.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Type"))
        self.location_add_button.setToolTip(_translate("MainWindow", "Spatial Delineation"))
        self.location_add_button.setText(_translate("MainWindow", "Add"))
        self.location_add_button.setShortcut(_translate("MainWindow", "Up"))
        self.location_delete_button.setToolTip(_translate("MainWindow", "Spatial Delineation"))
        self.location_delete_button.setText(_translate("MainWindow", "Delete"))
        self.location_delete_button.setShortcut(_translate("MainWindow", "Up"))
        self.geography_focus_button_loc.setToolTip(_translate("MainWindow", "Spatial Delineation"))
        self.geography_focus_button_loc.setText(_translate("MainWindow", "Update"))
        self.geography_focus_button_loc.setShortcut(_translate("MainWindow", "Up"))
        self.BoundarySummary.setSortingEnabled(True)
        item = self.BoundarySummary.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Boundary Name"))
        item = self.BoundarySummary.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Type"))
        item = self.BoundarySummary.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Size [sqkm]"))
        item = self.BoundarySummary.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Coordinate System"))
        self.boundary_add_button.setToolTip(_translate("MainWindow", "Spatial Delineation"))
        self.boundary_add_button.setText(_translate("MainWindow", "Add"))
        self.boundary_add_button.setShortcut(_translate("MainWindow", "Up"))
        self.geography_update_button.setToolTip(_translate("MainWindow", "Spatial Delineation"))
        self.geography_update_button.setText(_translate("MainWindow", "Update "))
        self.geography_update_button.setShortcut(_translate("MainWindow", "Up"))
        self.boundary_delete_button.setToolTip(_translate("MainWindow", "Spatial Delineation"))
        self.boundary_delete_button.setText(_translate("MainWindow", "Delete"))
        self.boundary_delete_button.setShortcut(_translate("MainWindow", "Up"))
        self.boundary_shape_add_button.setToolTip(_translate("MainWindow", "Spatial Delineation"))
        self.boundary_shape_add_button.setText(_translate("MainWindow", "Add Shape"))
        self.boundary_shape_add_button.setShortcut(_translate("MainWindow", "Up"))
        self.ScenarioView_Widget.setTabText(self.ScenarioView_Widget.indexOf(self.Simulation_tab), _translate("MainWindow", "Geography"))
        self.global_assets_title.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-weight:600;\">Overview of all Project Asset Collections</span></p></body></html>"))
        self.assetcol_new_button.setText(_translate("MainWindow", "New"))
        self.assetcol_delete_button.setText(_translate("MainWindow", "Delete"))
        self.assetcol_export.setText(_translate("MainWindow", "Export..."))
        self.asset_display.setText(_translate("MainWindow", " Display"))
        self.global_assets_table.headerItem().setText(0, _translate("MainWindow", "Name"))
        self.global_assets_table.headerItem().setText(1, _translate("MainWindow", "Type"))
        self.global_assets_table.headerItem().setText(2, _translate("MainWindow", "Items"))
        __sortingEnabled = self.global_assets_table.isSortingEnabled()
        self.global_assets_table.setSortingEnabled(False)
        self.global_assets_table.topLevelItem(0).setText(0, _translate("MainWindow", "Example_Ad-hoc"))
        self.global_assets_table.topLevelItem(0).setText(1, _translate("MainWindow", "None-Scenario"))
        self.global_assets_table.topLevelItem(0).child(0).setText(0, _translate("MainWindow", "Blocks"))
        self.global_assets_table.topLevelItem(0).child(0).setText(1, _translate("MainWindow", "Polygon"))
        self.global_assets_table.topLevelItem(0).child(1).setText(0, _translate("MainWindow", "BlockCentroids"))
        self.global_assets_table.topLevelItem(0).child(1).setText(1, _translate("MainWindow", "Point"))
        self.global_assets_table.topLevelItem(0).child(2).setText(0, _translate("MainWindow", "Grid Network"))
        self.global_assets_table.topLevelItem(0).child(2).setText(1, _translate("MainWindow", "Line"))
        self.global_assets_table.topLevelItem(0).child(3).setText(0, _translate("MainWindow", "Drainage Flowpaths"))
        self.global_assets_table.topLevelItem(0).child(3).setText(1, _translate("MainWindow", "Line"))
        self.global_assets_table.topLevelItem(0).child(4).setText(0, _translate("MainWindow", "Accessibility Map"))
        self.global_assets_table.topLevelItem(0).child(4).setText(1, _translate("MainWindow", "Raster"))
        self.global_assets_table.topLevelItem(1).setText(0, _translate("MainWindow", "My UrbanBEATS Scenario"))
        self.global_assets_table.topLevelItem(1).setText(1, _translate("MainWindow", "Scenario"))
        self.global_assets_table.topLevelItem(1).child(0).setText(0, _translate("MainWindow", "Blocks"))
        self.global_assets_table.topLevelItem(1).child(0).setText(1, _translate("MainWindow", "Polygon"))
        self.global_assets_table.topLevelItem(1).child(1).setText(0, _translate("MainWindow", "BlockCentroids"))
        self.global_assets_table.topLevelItem(1).child(1).setText(1, _translate("MainWindow", "Point"))
        self.global_assets_table.topLevelItem(1).child(2).setText(0, _translate("MainWindow", "Grid Network"))
        self.global_assets_table.topLevelItem(1).child(2).setText(1, _translate("MainWindow", "Line"))
        self.global_assets_table.topLevelItem(1).child(3).setText(0, _translate("MainWindow", "Drainage Flowpaths"))
        self.global_assets_table.topLevelItem(1).child(3).setText(1, _translate("MainWindow", "Line"))
        self.global_assets_table.setSortingEnabled(__sortingEnabled)
        self.ScenarioView_Widget.setTabText(self.ScenarioView_Widget.indexOf(self.assets), _translate("MainWindow", "Assets"))
        self.ScenarioView_lbl.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-weight:600;\">Scenario Overview</span></p></body></html>"))
        self.scenario_summarybox.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;\"><br /></p></body></html>"))
        self.scenarioMgmt_tabview.setTabText(self.scenarioMgmt_tabview.indexOf(self.general), _translate("MainWindow", "General"))
        self.DataSummary.setSortingEnabled(True)
        item = self.DataSummary.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Filename"))
        item = self.DataSummary.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Type"))
        item = self.DataSummary.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Subtype"))
        self.scenarioMgmt_tabview.setTabText(self.scenarioMgmt_tabview.indexOf(self.datasets), _translate("MainWindow", "Data Sets"))
        self.module_add.setText(_translate("MainWindow", "Add..."))
        self.module_remove.setText(_translate("MainWindow", "Remove"))
        self.module_properties.setText(_translate("MainWindow", "Details"))
        self.scenarioRun_button.setText(_translate("MainWindow", "Run"))
        self.module_browser.headerItem().setText(0, _translate("MainWindow", "Scenario Modules"))
        __sortingEnabled = self.module_browser.isSortingEnabled()
        self.module_browser.setSortingEnabled(False)
        self.module_browser.topLevelItem(0).setText(0, _translate("MainWindow", "Spatial Representation"))
        self.module_browser.topLevelItem(0).child(0).setText(0, _translate("MainWindow", "Create Simulation Grid"))
        self.module_browser.setSortingEnabled(__sortingEnabled)
        self.scenarioMgmt_tabview.setTabText(self.scenarioMgmt_tabview.indexOf(self.modules), _translate("MainWindow", "Modules"))
        self.output_data_summary.setSortingEnabled(True)
        item = self.output_data_summary.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Name"))
        item = self.output_data_summary.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Type"))
        item = self.output_data_summary.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Subtype"))
        self.output_update_button.setText(_translate("MainWindow", "Update View"))
        self.output_metadata_button.setText(_translate("MainWindow", "Metadata"))
        self.output_export_button.setText(_translate("MainWindow", "Export..."))
        self.scenarioMgmt_tabview.setTabText(self.scenarioMgmt_tabview.indexOf(self.outputs), _translate("MainWindow", "Outputs"))
        self.ScenarioView_Widget.setTabText(self.ScenarioView_Widget.indexOf(self.Narrative_tab), _translate("MainWindow", "Scenario"))
        self.log_title.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-weight:600;\">Project Log</span></p></body></html>"))
        self.ScenarioView_Widget.setTabText(self.ScenarioView_Widget.indexOf(self.Log_tab), _translate("MainWindow", "Log"))
        self.DataView_options.setText(_translate("MainWindow", "Options"))
        self.DataView_meta.setText(_translate("MainWindow", "Metadata"))
        self.DataView_extent.setText(_translate("MainWindow", "Extent"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.menuProject.setTitle(_translate("MainWindow", "Project"))
        self.menuScenario.setTitle(_translate("MainWindow", "Scenario"))
        self.menuGeography.setTitle(_translate("MainWindow", "Geography"))
        self.menuSimulation.setTitle(_translate("MainWindow", "Simulation"))
        self.menuUrban_Modelling.setTitle(_translate("MainWindow", "Urban Modelling"))
        self.menuUrban_Planning.setTitle(_translate("MainWindow", "Urban Planning"))
        self.menuSpatial_Mapping.setTitle(_translate("MainWindow", "Spatial Mapping"))
        self.menuInfrastructure.setTitle(_translate("MainWindow", "Infrastructure"))
        self.menuSocio_Economic.setTitle(_translate("MainWindow", "Socio-Economic"))
        self.menuSpatial_Setup.setTitle(_translate("MainWindow", "Spatial Setup"))
        self.menuClimate_Setup.setTitle(_translate("MainWindow", "Climate Setup"))
        self.menuAdvanced.setTitle(_translate("MainWindow", "Advanced"))
        self.menuUrban_Modules.setTitle(_translate("MainWindow", "Urban Modules"))
        self.menuPlugins.setTitle(_translate("MainWindow", "Plugins"))
        self.menuWindow.setTitle(_translate("MainWindow", "Window"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.menuData.setTitle(_translate("MainWindow", "Data"))
        self.General_toolbar.setWindowTitle(_translate("MainWindow", "General"))
        self.DataDock.setWindowTitle(_translate("MainWindow", "Data"))
        self.DataDock_View.headerItem().setText(0, _translate("MainWindow", "Project Data Library"))
        __sortingEnabled = self.DataDock_View.isSortingEnabled()
        self.DataDock_View.setSortingEnabled(False)
        self.DataDock_View.topLevelItem(0).setText(0, _translate("MainWindow", "Spatial Data"))
        self.DataDock_View.topLevelItem(0).child(0).setText(0, _translate("MainWindow", "Boundaries"))
        self.DataDock_View.topLevelItem(0).child(0).child(0).setText(0, _translate("MainWindow", "<no data>"))
        self.DataDock_View.topLevelItem(0).child(1).setText(0, _translate("MainWindow", "Built Infrastructure"))
        self.DataDock_View.topLevelItem(0).child(1).child(0).setText(0, _translate("MainWindow", "<no data>"))
        self.DataDock_View.topLevelItem(0).child(2).setText(0, _translate("MainWindow", "Elevation"))
        self.DataDock_View.topLevelItem(0).child(2).child(0).setText(0, _translate("MainWindow", "<no data>"))
        self.DataDock_View.topLevelItem(0).child(3).setText(0, _translate("MainWindow", "Employment"))
        self.DataDock_View.topLevelItem(0).child(3).child(0).setText(0, _translate("MainWindow", "<none>"))
        self.DataDock_View.topLevelItem(0).child(4).setText(0, _translate("MainWindow", "Land Use"))
        self.DataDock_View.topLevelItem(0).child(4).child(0).setText(0, _translate("MainWindow", "<no data>"))
        self.DataDock_View.topLevelItem(0).child(5).setText(0, _translate("MainWindow", "Locality Maps"))
        self.DataDock_View.topLevelItem(0).child(5).child(0).setText(0, _translate("MainWindow", "<no data>"))
        self.DataDock_View.topLevelItem(0).child(6).setText(0, _translate("MainWindow", "Overlays"))
        self.DataDock_View.topLevelItem(0).child(6).child(0).setText(0, _translate("MainWindow", "<no data>"))
        self.DataDock_View.topLevelItem(0).child(7).setText(0, _translate("MainWindow", "Population"))
        self.DataDock_View.topLevelItem(0).child(7).child(0).setText(0, _translate("MainWindow", "<no data>"))
        self.DataDock_View.topLevelItem(0).child(8).setText(0, _translate("MainWindow", "Soil"))
        self.DataDock_View.topLevelItem(0).child(8).child(0).setText(0, _translate("MainWindow", "<no data>"))
        self.DataDock_View.topLevelItem(0).child(9).setText(0, _translate("MainWindow", "Water Bodies"))
        self.DataDock_View.topLevelItem(0).child(9).child(0).setText(0, _translate("MainWindow", "<none>"))
        self.DataDock_View.topLevelItem(1).setText(0, _translate("MainWindow", "Time Series Data"))
        self.DataDock_View.topLevelItem(1).child(0).setText(0, _translate("MainWindow", "Rainfall"))
        self.DataDock_View.topLevelItem(1).child(0).child(0).setText(0, _translate("MainWindow", "<no data>"))
        self.DataDock_View.topLevelItem(1).child(1).setText(0, _translate("MainWindow", "Evapotranspiration"))
        self.DataDock_View.topLevelItem(1).child(1).child(0).setText(0, _translate("MainWindow", "<no data>"))
        self.DataDock_View.topLevelItem(1).child(2).setText(0, _translate("MainWindow", "Solar Radiation"))
        self.DataDock_View.topLevelItem(1).child(2).child(0).setText(0, _translate("MainWindow", "<no data>"))
        self.DataDock_View.topLevelItem(1).child(3).setText(0, _translate("MainWindow", "Temperature"))
        self.DataDock_View.topLevelItem(1).child(3).child(0).setText(0, _translate("MainWindow", "<no data>"))
        self.DataDock_View.topLevelItem(2).setText(0, _translate("MainWindow", "Qualitative Data"))
        self.DataDock_View.topLevelItem(2).child(0).setText(0, _translate("MainWindow", "<no data>"))
        self.DataDock_View.topLevelItem(3).setText(0, _translate("MainWindow", "Functions"))
        self.DataDock_View.topLevelItem(3).child(0).setText(0, _translate("MainWindow", "<no data>"))
        self.DataDock_View.setSortingEnabled(__sortingEnabled)
        self.ScenarioDock.setWindowTitle(_translate("MainWindow", "Scenarios"))
        self.ScenarioDock_View.headerItem().setText(0, _translate("MainWindow", "Scenario Browser"))
        __sortingEnabled = self.ScenarioDock_View.isSortingEnabled()
        self.ScenarioDock_View.setSortingEnabled(False)
        self.ScenarioDock_View.topLevelItem(0).setText(0, _translate("MainWindow", "Scenario_Name"))
        self.ScenarioDock_View.topLevelItem(0).child(0).setText(0, _translate("MainWindow", "Boundary: (none)"))
        self.ScenarioDock_View.topLevelItem(0).child(1).setText(0, _translate("MainWindow", "Status: (none)"))
        self.ScenarioDock_View.topLevelItem(0).child(2).setText(0, _translate("MainWindow", "Simulation Year(s): (year)"))
        self.ScenarioDock_View.setSortingEnabled(__sortingEnabled)
        self.ToolboxDock.setWindowTitle(_translate("MainWindow", "Toolbox"))
        self.toolboxTree.headerItem().setText(0, _translate("MainWindow", "Modules"))
        __sortingEnabled = self.toolboxTree.isSortingEnabled()
        self.toolboxTree.setSortingEnabled(False)
        self.toolboxTree.topLevelItem(0).setText(0, _translate("MainWindow", "Spatial Representation"))
        self.toolboxTree.topLevelItem(0).child(0).setText(0, _translate("MainWindow", "Create Simulation Grid"))
        self.toolboxTree.topLevelItem(0).child(1).setText(0, _translate("MainWindow", "Map Regions"))
        self.toolboxTree.topLevelItem(0).child(2).setText(0, _translate("MainWindow", "Map Topography"))
        self.toolboxTree.topLevelItem(1).setText(0, _translate("MainWindow", "Catchment Hydrology"))
        self.toolboxTree.topLevelItem(1).child(0).setText(0, _translate("MainWindow", "Catchment Delineation"))
        self.toolboxTree.topLevelItem(2).setText(0, _translate("MainWindow", "Define Urban Form"))
        self.toolboxTree.topLevelItem(2).child(0).setText(0, _translate("MainWindow", "Import Urban Form Data"))
        self.toolboxTree.topLevelItem(2).child(1).setText(0, _translate("MainWindow", "Generate Urban Form"))
        self.toolboxTree.topLevelItem(3).setText(0, _translate("MainWindow", "Spatial Interaction"))
        self.toolboxTree.topLevelItem(3).child(0).setText(0, _translate("MainWindow", "Green Space Mapping"))
        self.toolboxTree.topLevelItem(3).child(1).setText(0, _translate("MainWindow", "Accessibility Mapping"))
        self.toolboxTree.setSortingEnabled(__sortingEnabled)
        self.Project_Toolbar.setWindowTitle(_translate("MainWindow", "Project Management"))
        self.Geography_Toolbar.setWindowTitle(_translate("MainWindow", "Simulation Boundaries"))
        self.Settings_Toolbar.setWindowTitle(_translate("MainWindow", "Settings"))
        self.dockWidget.setWindowTitle(_translate("MainWindow", "Output Console"))
        self.actionNew_Project.setText(_translate("MainWindow", "New Project"))
        self.actionNew_Project.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.actionOpen_Project.setText(_translate("MainWindow", "Open Project"))
        self.actionOpen_Project.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionSave.setText(_translate("MainWindow", "Save"))
        self.actionSave.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionSave_As.setText(_translate("MainWindow", "Save As..."))
        self.actionImport_Project.setText(_translate("MainWindow", "Import Project"))
        self.actionExport_Project.setText(_translate("MainWindow", "Export Project"))
        self.actionQuit.setText(_translate("MainWindow", "Quit"))
        self.actionQuit.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        self.actionPreferences.setText(_translate("MainWindow", "Preferences"))
        self.actionEdit_Project_Details.setText(_translate("MainWindow", "Edit Project Details..."))
        self.actionView_Documentation.setText(_translate("MainWindow", "View Documentation"))
        self.actionOnline_Help.setText(_translate("MainWindow", "Online Help"))
        self.actionAbout.setText(_translate("MainWindow", "About"))
        self.actionLike_on_Facebook.setText(_translate("MainWindow", "Like on Facebook"))
        self.actionShare_on_Twiter.setText(_translate("MainWindow", "Share on Twiter"))
        self.actionOpen_Project_Folder.setText(_translate("MainWindow", "Open Project Folder..."))
        self.actionMinimize.setText(_translate("MainWindow", "Minimize"))
        self.actionResults_Viewer.setText(_translate("MainWindow", "Results Explorer"))
        self.actionModel_Calibration_Viewer.setText(_translate("MainWindow", "Model Calibration Viewer"))
        self.actionWater_Modules.setText(_translate("MainWindow", "Water Modules"))
        self.actionUrban_Planning_Settings.setText(_translate("MainWindow", "Urban Planning Settings"))
        self.actionUrban_Modelling_Settings.setText(_translate("MainWindow", "Urban Modelling Settings"))
        self.actionFacilities_Data.setText(_translate("MainWindow", "Facilities Data"))
        self.actionView_Project_Description.setText(_translate("MainWindow", "View Project Description"))
        self.actionManage_Data_Sets.setText(_translate("MainWindow", "Manage Data Sets"))
        self.actionAdd_Data.setText(_translate("MainWindow", "Add Data"))
        self.actionAdd_Data.setShortcut(_translate("MainWindow", "Ctrl+D"))
        self.actionImport_Archive_File.setText(_translate("MainWindow", "Import Archive File"))
        self.actionImport_Archive_from_Project.setText(_translate("MainWindow", "Import Archive from Project"))
        self.actionExport_Data_Archive.setText(_translate("MainWindow", "Export Data Archive"))
        self.actionReset_Data_Library.setText(_translate("MainWindow", "Reset Project Data Library"))
        self.actionView_Active_Simulation_Data.setText(_translate("MainWindow", "View Active Simulation Data"))
        self.actionDelete_Scenario.setText(_translate("MainWindow", "Delete Scenario"))
        self.actionDefine_New_Scenario.setText(_translate("MainWindow", "Define New Scenario"))
        self.actionView_Full_Project_Log.setText(_translate("MainWindow", "View Full Project Log"))
        self.actionPerformance.setText(_translate("MainWindow", "Performance"))
        self.actionSubmit_a_Bug_Report.setText(_translate("MainWindow", "Submit a Bug Report"))
        self.actionRun.setText(_translate("MainWindow", "Run Current Scenario"))
        self.actionRun.setToolTip(_translate("MainWindow", "Run a Simulation"))
        self.actionGrowth_Model.setText(_translate("MainWindow", "General Model Settings"))
        self.actionSpatial_Attraction.setText(_translate("MainWindow", "Spatial Interactions"))
        self.actionSpatial_Allocation.setText(_translate("MainWindow", "Growth Model"))
        self.actionResidential.setText(_translate("MainWindow", "Residential"))
        self.actionNon_Residentail.setText(_translate("MainWindow", "Non-Residentail"))
        self.actionCity_wide_Planning.setText(_translate("MainWindow", "City-wide Planning"))
        self.actionTransport.setText(_translate("MainWindow", "Transport"))
        self.actionOpen_Spaces.setText(_translate("MainWindow", "Open Spaces"))
        self.actionMiscellaneous.setText(_translate("MainWindow", "Other Land Uses"))
        self.actionCivic_Infrastructure.setText(_translate("MainWindow", "Civic Infrastructure"))
        self.actionPollution_Mapping.setText(_translate("MainWindow", "Pollution Mapping"))
        self.actionFlood_Risk_Mapping.setText(_translate("MainWindow", "Flood Risk Mapping"))
        self.actionWater_Demands.setText(_translate("MainWindow", "Water Demands"))
        self.actionLand_Cover.setText(_translate("MainWindow", "Land Cover"))
        self.actionPlanning_Overlays.setText(_translate("MainWindow", "Planning Overlays"))
        self.actionSocio_Economic.setText(_translate("MainWindow", "Regulation"))
        self.actionWater_Management_Objectives.setText(_translate("MainWindow", "Water Management Objectives"))
        self.actionGreen_Infrastructure.setText(_translate("MainWindow", "Green Infrastructure"))
        self.actionWater_Recycling_and_Reuse.setText(_translate("MainWindow", "Water Recycling and Reuse"))
        self.actionHousehold_Appliances.setText(_translate("MainWindow", "Building-integrated Fittings"))
        self.actionStakeholder_Groups.setText(_translate("MainWindow", "Stakeholder Groups"))
        self.actionCost_Information.setText(_translate("MainWindow", "Costing Information"))
        self.actionBenefits_Assessment.setText(_translate("MainWindow", "Benefits Assessment"))
        self.actionImpact.setText(_translate("MainWindow", "Impact"))
        self.actionDecision_Analysis.setText(_translate("MainWindow", "Decision Analysis"))
        self.actionRepresentation.setText(_translate("MainWindow", "Representation"))
        self.actionConnectivity.setText(_translate("MainWindow", "Connectivity"))
        self.actionData_Selection.setText(_translate("MainWindow", "Data Selection"))
        self.actionScenario_Definition.setText(_translate("MainWindow", "Scenario Definition"))
        self.actionEdit_Scenario.setText(_translate("MainWindow", "Edit Scenario"))
        self.actionReporting_Options.setText(_translate("MainWindow", "Reporting Options"))
        self.actionMap_Export_Options.setText(_translate("MainWindow", "Map Export Options"))
        self.actionClose_Project.setText(_translate("MainWindow", "Close Project"))
        self.actionClose_Project.setShortcut(_translate("MainWindow", "Ctrl+W"))
        self.actionActionReset.setText(_translate("MainWindow", "actionReset"))
        self.actionActionReset.setToolTip(_translate("MainWindow", "Reset the scenario\'s simulation state."))
        self.actionSSANTO.setText(_translate("MainWindow", "SSANTO"))
        self.actionLand_Use_Reclassifier.setText(_translate("MainWindow", "Land Use Reclassifier"))
        self.actionDefine_Influence_Functions.setText(_translate("MainWindow", "Define Influence Functions"))
        self.actionDefine_IF.setText(_translate("MainWindow", "Define Influence Functions"))
        self.actionaction_coffeebreak.setText(_translate("MainWindow", "action_coffeebreak"))
        self.actionaction_coffeebreak.setToolTip(_translate("MainWindow", "Take a coffee break!"))
        self.actionaction_coffeebreak.setShortcut(_translate("MainWindow", "Ctrl+Alt+Shift+C"))
        self.actionAdd_Simulation_Boundary.setText(_translate("MainWindow", "Add Simulation Boundary"))
        self.actionAdd_Simulation_Boundary.setShortcut(_translate("MainWindow", "Ctrl+B"))
        self.actionView_Simulation_Boundaries.setText(_translate("MainWindow", "View Simulation Boundaries"))
        self.actionView_Simulation_Boundaries.setToolTip(_translate("MainWindow", "View a summary of project simulation boundaries"))
        self.actionAdd_Basic_Shape_Boundary.setText(_translate("MainWindow", "Define Basic Shape Boundary"))
        self.actionAdd_Basic_Shape_Boundary.setToolTip(_translate("MainWindow", "Create a basic shape boundary"))
        self.actionAdd_Location.setText(_translate("MainWindow", "Add Location"))
        self.actionAdd_Location.setToolTip(_translate("MainWindow", "Add a key location to the project"))
        self.actionView_Locations.setText(_translate("MainWindow", "View Locations"))
        self.actionView_Locations.setToolTip(_translate("MainWindow", "View all loaded locations in the current project"))
from PyQt5 import QtWebEngineWidgets
from . import ubeats_rc
