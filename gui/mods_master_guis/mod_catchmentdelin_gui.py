# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\mod_catchmentdelin_gui.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_CatchmentDelinGui(object):
    def setupUi(self, CatchmentDelinGui):
        CatchmentDelinGui.setObjectName("CatchmentDelinGui")
        CatchmentDelinGui.resize(627, 474)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icons/river_flow.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        CatchmentDelinGui.setWindowIcon(icon)
        self.gridLayout = QtWidgets.QGridLayout(CatchmentDelinGui)
        self.gridLayout.setObjectName("gridLayout")
        self.buttons_widget = QtWidgets.QWidget(CatchmentDelinGui)
        self.buttons_widget.setObjectName("buttons_widget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.buttons_widget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setSpacing(6)
        self.horizontalLayout.setObjectName("horizontalLayout")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.ok_button = QtWidgets.QPushButton(self.buttons_widget)
        self.ok_button.setMinimumSize(QtCore.QSize(90, 0))
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icons/check.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.ok_button.setIcon(icon1)
        self.ok_button.setObjectName("ok_button")
        self.horizontalLayout.addWidget(self.ok_button)
        self.close_button = QtWidgets.QPushButton(self.buttons_widget)
        self.close_button.setMinimumSize(QtCore.QSize(90, 0))
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/icons/delete-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.close_button.setIcon(icon2)
        self.close_button.setObjectName("close_button")
        self.horizontalLayout.addWidget(self.close_button)
        self.help_button = QtWidgets.QPushButton(self.buttons_widget)
        self.help_button.setMinimumSize(QtCore.QSize(90, 0))
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/icons/Help-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.help_button.setIcon(icon3)
        self.help_button.setObjectName("help_button")
        self.horizontalLayout.addWidget(self.help_button)
        self.gridLayout.addWidget(self.buttons_widget, 4, 0, 1, 2)
        self.frame = QtWidgets.QFrame(CatchmentDelinGui)
        self.frame.setMinimumSize(QtCore.QSize(200, 0))
        self.frame.setMaximumSize(QtCore.QSize(200, 16777215))
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.frame)
        self.verticalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_6.setSpacing(0)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.description = QtWidgets.QTextBrowser(self.frame)
        self.description.setMinimumSize(QtCore.QSize(200, 0))
        self.description.setMaximumSize(QtCore.QSize(200, 16777215))
        self.description.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.description.setFrameShadow(QtWidgets.QFrame.Plain)
        self.description.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.description.setObjectName("description")
        self.verticalLayout_6.addWidget(self.description)
        self.img = QtWidgets.QLabel(self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.img.sizePolicy().hasHeightForWidth())
        self.img.setSizePolicy(sizePolicy)
        self.img.setMinimumSize(QtCore.QSize(200, 120))
        self.img.setMaximumSize(QtCore.QSize(200, 120))
        self.img.setText("")
        self.img.setPixmap(QtGui.QPixmap(":/mod_imgs/module_imgs/mod_catchmentdelin.jpg"))
        self.img.setObjectName("img")
        self.verticalLayout_6.addWidget(self.img)
        self.gridLayout.addWidget(self.frame, 0, 0, 1, 1)
        self.line_2 = QtWidgets.QFrame(CatchmentDelinGui)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setObjectName("line_2")
        self.gridLayout.addWidget(self.line_2, 1, 0, 1, 2)
        self.widget = QtWidgets.QWidget(CatchmentDelinGui)
        self.widget.setMinimumSize(QtCore.QSize(0, 0))
        self.widget.setObjectName("widget")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.widget)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.progressbar = QtWidgets.QProgressBar(self.widget)
        self.progressbar.setMinimumSize(QtCore.QSize(0, 16))
        self.progressbar.setMaximumSize(QtCore.QSize(16777215, 16))
        self.progressbar.setProperty("value", 0)
        self.progressbar.setTextVisible(False)
        self.progressbar.setOrientation(QtCore.Qt.Horizontal)
        self.progressbar.setInvertedAppearance(False)
        self.progressbar.setTextDirection(QtWidgets.QProgressBar.TopToBottom)
        self.progressbar.setObjectName("progressbar")
        self.horizontalLayout_2.addWidget(self.progressbar)
        self.run_button = QtWidgets.QPushButton(self.widget)
        self.run_button.setMinimumSize(QtCore.QSize(90, 0))
        self.run_button.setMaximumSize(QtCore.QSize(90, 16777215))
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/icons/Play-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.run_button.setIcon(icon4)
        self.run_button.setObjectName("run_button")
        self.horizontalLayout_2.addWidget(self.run_button)
        self.gridLayout.addWidget(self.widget, 2, 0, 1, 2)
        self.parameters = QtWidgets.QWidget(CatchmentDelinGui)
        self.parameters.setObjectName("parameters")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.parameters)
        self.verticalLayout.setContentsMargins(3, 3, 3, 3)
        self.verticalLayout.setSpacing(6)
        self.verticalLayout.setObjectName("verticalLayout")
        self.title = QtWidgets.QLabel(self.parameters)
        self.title.setObjectName("title")
        self.verticalLayout.addWidget(self.title)
        self.asset_col_title = QtWidgets.QLabel(self.parameters)
        self.asset_col_title.setObjectName("asset_col_title")
        self.verticalLayout.addWidget(self.asset_col_title)
        self.gridname_widget = QtWidgets.QWidget(self.parameters)
        self.gridname_widget.setObjectName("gridname_widget")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.gridname_widget)
        self.gridLayout_7.setContentsMargins(6, 6, 6, 6)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.assetcol_combo = QtWidgets.QComboBox(self.gridname_widget)
        self.assetcol_combo.setObjectName("assetcol_combo")
        self.assetcol_combo.addItem("")
        self.gridLayout_7.addWidget(self.assetcol_combo, 0, 1, 1, 1)
        self.gridname_lbl = QtWidgets.QLabel(self.gridname_widget)
        self.gridname_lbl.setMinimumSize(QtCore.QSize(100, 0))
        self.gridname_lbl.setMaximumSize(QtCore.QSize(100, 16777215))
        self.gridname_lbl.setObjectName("gridname_lbl")
        self.gridLayout_7.addWidget(self.gridname_lbl, 0, 0, 1, 1)
        self.verticalLayout.addWidget(self.gridname_widget)
        self.title_2 = QtWidgets.QLabel(self.parameters)
        self.title_2.setObjectName("title_2")
        self.verticalLayout.addWidget(self.title_2)
        self.descr = QtWidgets.QLabel(self.parameters)
        self.descr.setMinimumSize(QtCore.QSize(0, 0))
        self.descr.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.descr.setWordWrap(True)
        self.descr.setObjectName("descr")
        self.verticalLayout.addWidget(self.descr)
        self.flowpath_widget = QtWidgets.QWidget(self.parameters)
        self.flowpath_widget.setObjectName("flowpath_widget")
        self.gridLayout_11 = QtWidgets.QGridLayout(self.flowpath_widget)
        self.gridLayout_11.setContentsMargins(6, 6, 6, 6)
        self.gridLayout_11.setObjectName("gridLayout_11")
        self.flowpath_lbl = QtWidgets.QLabel(self.flowpath_widget)
        self.flowpath_lbl.setObjectName("flowpath_lbl")
        self.gridLayout_11.addWidget(self.flowpath_lbl, 1, 0, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_11.addItem(spacerItem1, 1, 2, 1, 1)
        self.flowpath_combo = QtWidgets.QComboBox(self.flowpath_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.flowpath_combo.sizePolicy().hasHeightForWidth())
        self.flowpath_combo.setSizePolicy(sizePolicy)
        self.flowpath_combo.setObjectName("flowpath_combo")
        self.flowpath_combo.addItem("")
        self.flowpath_combo.addItem("")
        self.flowpath_combo.addItem("")
        self.gridLayout_11.addWidget(self.flowpath_combo, 1, 1, 1, 1)
        self.verticalLayout.addWidget(self.flowpath_widget)
        self.flowpath_guide_widget = QtWidgets.QWidget(self.parameters)
        self.flowpath_guide_widget.setObjectName("flowpath_guide_widget")
        self.gridLayout_12 = QtWidgets.QGridLayout(self.flowpath_guide_widget)
        self.gridLayout_12.setContentsMargins(6, 6, 6, 6)
        self.gridLayout_12.setObjectName("gridLayout_12")
        self.infrastructure_check = QtWidgets.QCheckBox(self.flowpath_guide_widget)
        self.infrastructure_check.setObjectName("infrastructure_check")
        self.gridLayout_12.addWidget(self.infrastructure_check, 3, 0, 1, 1)
        self.natfeature_check = QtWidgets.QCheckBox(self.flowpath_guide_widget)
        self.natfeature_check.setObjectName("natfeature_check")
        self.gridLayout_12.addWidget(self.natfeature_check, 2, 0, 1, 1)
        self.flowpath_lbl2 = QtWidgets.QLabel(self.flowpath_guide_widget)
        self.flowpath_lbl2.setObjectName("flowpath_lbl2")
        self.gridLayout_12.addWidget(self.flowpath_lbl2, 1, 0, 1, 1)
        self.storm_combo = QtWidgets.QComboBox(self.flowpath_guide_widget)
        self.storm_combo.setObjectName("storm_combo")
        self.storm_combo.addItem("")
        self.gridLayout_12.addWidget(self.storm_combo, 4, 0, 1, 1)
        self.verticalLayout.addWidget(self.flowpath_guide_widget)
        self.title_3 = QtWidgets.QLabel(self.parameters)
        self.title_3.setObjectName("title_3")
        self.verticalLayout.addWidget(self.title_3)
        self.flowpath_guide_widget_3 = QtWidgets.QWidget(self.parameters)
        self.flowpath_guide_widget_3.setObjectName("flowpath_guide_widget_3")
        self.gridLayout_15 = QtWidgets.QGridLayout(self.flowpath_guide_widget_3)
        self.gridLayout_15.setContentsMargins(6, 6, 6, 6)
        self.gridLayout_15.setObjectName("gridLayout_15")
        self.ignore_rivers_check = QtWidgets.QCheckBox(self.flowpath_guide_widget_3)
        self.ignore_rivers_check.setObjectName("ignore_rivers_check")
        self.gridLayout_15.addWidget(self.ignore_rivers_check, 0, 0, 1, 1)
        self.ignore_lakes_check = QtWidgets.QCheckBox(self.flowpath_guide_widget_3)
        self.ignore_lakes_check.setObjectName("ignore_lakes_check")
        self.gridLayout_15.addWidget(self.ignore_lakes_check, 1, 0, 1, 1)
        self.verticalLayout.addWidget(self.flowpath_guide_widget_3)
        spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout.addItem(spacerItem2)
        self.line = QtWidgets.QFrame(self.parameters)
        self.line.setFrameShadow(QtWidgets.QFrame.Raised)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setObjectName("line")
        self.verticalLayout.addWidget(self.line)
        self.gridLayout.addWidget(self.parameters, 0, 1, 1, 1)
        self.line_3 = QtWidgets.QFrame(CatchmentDelinGui)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.line_3.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_3.setObjectName("line_3")
        self.gridLayout.addWidget(self.line_3, 3, 0, 1, 2)

        self.retranslateUi(CatchmentDelinGui)
        self.flowpath_combo.setCurrentIndex(0)
        self.close_button.clicked.connect(CatchmentDelinGui.reject)
        QtCore.QMetaObject.connectSlotsByName(CatchmentDelinGui)

    def retranslateUi(self, CatchmentDelinGui):
        _translate = QtCore.QCoreApplication.translate
        CatchmentDelinGui.setWindowTitle(_translate("CatchmentDelinGui", "Delineate Water Flow and Sub-Catchments"))
        self.ok_button.setWhatsThis(_translate("CatchmentDelinGui", "<html><head/><body><p>Resets all parameters of this module in the current \'scenario time step\' to the default values.</p></body></html>"))
        self.ok_button.setText(_translate("CatchmentDelinGui", "OK"))
        self.close_button.setText(_translate("CatchmentDelinGui", "Close"))
        self.help_button.setText(_translate("CatchmentDelinGui", "Help"))
        self.description.setHtml(_translate("CatchmentDelinGui", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:9pt; font-weight:600;\">Flow path and sub-catchment delineation</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:9pt; font-weight:600;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Creates a water flow path network based on topography, natural features and other assisted data sets.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Pre-requisites: Simulation grid, topographical mapping, natural features (optional)</span></p></body></html>"))
        self.run_button.setText(_translate("CatchmentDelinGui", "Run"))
        self.title.setText(_translate("CatchmentDelinGui", "<html><head/><body><p><span style=\" font-size:9pt; font-weight:600;\">SETTINGS</span></p></body></html>"))
        self.asset_col_title.setText(_translate("CatchmentDelinGui", "<html><head/><body><p><span style=\" font-weight:600; font-style:italic;\">Target Asset Collection</span></p></body></html>"))
        self.assetcol_combo.setItemText(0, _translate("CatchmentDelinGui", "(select asset collection)"))
        self.gridname_lbl.setWhatsThis(_translate("CatchmentDelinGui", "Width of the square cell in the city grid in metres"))
        self.gridname_lbl.setText(_translate("CatchmentDelinGui", "Select collection:"))
        self.title_2.setText(_translate("CatchmentDelinGui", "<html><head/><body><p><span style=\" font-weight:600; font-style:italic;\">Drainage Flow Paths</span></p></body></html>"))
        self.descr.setWhatsThis(_translate("CatchmentDelinGui", "Width of the square cell in the city grid in metres"))
        self.descr.setText(_translate("CatchmentDelinGui", "Delineate water drainage flow paths"))
        self.flowpath_lbl.setWhatsThis(_translate("CatchmentDelinGui", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">How many blocks to consider when determining drainage fluxes (the greater the number, the greater the computational burden).</span></p></body></html>"))
        self.flowpath_lbl.setText(_translate("CatchmentDelinGui", "<html><head/><body><p><span style=\" font-weight:600;\">Flowpath Method:</span></p></body></html>"))
        self.flowpath_combo.setItemText(0, _translate("CatchmentDelinGui", "Planar - Adapted D-infinity (Tarboton, 1997)"))
        self.flowpath_combo.setItemText(1, _translate("CatchmentDelinGui", "Directional - D8 (O\'Callaghan & Mark, 1984)"))
        self.flowpath_combo.setItemText(2, _translate("CatchmentDelinGui", "Minimum Spanning Tree Method"))
        self.infrastructure_check.setToolTip(_translate("CatchmentDelinGui", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Check if you want to avoid localised ponds forming in the region. If this is of particular interest because the DEM\'s accuracy has been assured and the purpose of the simulation is to assess these problem spots, then leave this box unchecked.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;\"></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Correction proceeds as follows:</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">- If cell cannot transfer water downhill, but there is an adjacent cell with identical elevation within tolerance limit, it will transfer the water into this.</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">- If tolerance limit is not met, cell\'s water is routed directly to catchment outlet.</span></p></body></html>"))
        self.infrastructure_check.setWhatsThis(_translate("CatchmentDelinGui", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">If available, then the program will bias the flow directions towards Blocks with built stormwater draingae infrastructure e.g. channelized drains and pipe network. This will only happen if the above option to include stormwater infrastruture has been enabled and a map has been specified.</p></body></html>"))
        self.infrastructure_check.setText(_translate("CatchmentDelinGui", "Use stormwater drainage infrastructure as a guide for flow path delineation"))
        self.natfeature_check.setToolTip(_translate("CatchmentDelinGui", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Check if you want to avoid localised ponds forming in the region. If this is of particular interest because the DEM\'s accuracy has been assured and the purpose of the simulation is to assess these problem spots, then leave this box unchecked.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;\"></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Correction proceeds as follows:</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">- If cell cannot transfer water downhill, but there is an adjacent cell with identical elevation within tolerance limit, it will transfer the water into this.</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">- If tolerance limit is not met, cell\'s water is routed directly to catchment outlet.</span></p></body></html>"))
        self.natfeature_check.setWhatsThis(_translate("CatchmentDelinGui", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">If available, then the program will bias the flow directions towards Blocks with natural features e.g. a river, creek or lake. This will only happen if the above option to include a river or lake feature has been enabled and a map has been specified.</p></body></html>"))
        self.natfeature_check.setText(_translate("CatchmentDelinGui", "Use natural water features as a guide for flow path delineation"))
        self.flowpath_lbl2.setWhatsThis(_translate("CatchmentDelinGui", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">How many blocks to consider when determining drainage fluxes (the greater the number, the greater the computational burden).</span></p></body></html>"))
        self.flowpath_lbl2.setText(_translate("CatchmentDelinGui", "<html><head/><body><p><span style=\" font-weight:600; font-style:italic;\">Delineation Options</span></p></body></html>"))
        self.storm_combo.setItemText(0, _translate("CatchmentDelinGui", "(none)"))
        self.title_3.setText(_translate("CatchmentDelinGui", "<html><head/><body><p><span style=\" font-weight:600; font-style:italic;\">Sub-Catchment Delineation</span></p></body></html>"))
        self.ignore_rivers_check.setToolTip(_translate("CatchmentDelinGui", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Check if you want to avoid localised ponds forming in the region. If this is of particular interest because the DEM\'s accuracy has been assured and the purpose of the simulation is to assess these problem spots, then leave this box unchecked.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;\"></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Correction proceeds as follows:</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">- If cell cannot transfer water downhill, but there is an adjacent cell with identical elevation within tolerance limit, it will transfer the water into this.</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">- If tolerance limit is not met, cell\'s water is routed directly to catchment outlet.</span></p></body></html>"))
        self.ignore_rivers_check.setWhatsThis(_translate("CatchmentDelinGui", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Ignores river features in the landscape. This means that delineation continues until the lowest elevation point has been detected. Select this option if your river features do not directly determine the catchment e.g. you are including a creek in the catchment, but do not want to subdivide the catchment based on inflow points to the creek.</p></body></html>"))
        self.ignore_rivers_check.setText(_translate("CatchmentDelinGui", "Ignore River features when determining catchment outlets"))
        self.ignore_lakes_check.setToolTip(_translate("CatchmentDelinGui", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Check if you want to avoid localised ponds forming in the region. If this is of particular interest because the DEM\'s accuracy has been assured and the purpose of the simulation is to assess these problem spots, then leave this box unchecked.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;\"></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Correction proceeds as follows:</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">- If cell cannot transfer water downhill, but there is an adjacent cell with identical elevation within tolerance limit, it will transfer the water into this.</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">- If tolerance limit is not met, cell\'s water is routed directly to catchment outlet.</span></p></body></html>"))
        self.ignore_lakes_check.setWhatsThis(_translate("CatchmentDelinGui", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Ignores lake features in the landscape. This means that delineation continues until the lowest elevation point has been detected. Select this option if the lakes you have included are not major drainage outlets e.g. a large lake vs. a retarding basin. If the lake features regularly spill downstream, then check this option to ensure that the catchment delineation continues beyond the lake.</p></body></html>"))
        self.ignore_lakes_check.setText(_translate("CatchmentDelinGui", "Ignore Lake features when determining catchment outlets"))
from .. import ubeats_rc
