# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'md_spatialmapping.ui'
#
# Created by: PyQt5 UI code generator 5.6
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_Urbplanbb_Dialog(object):
    def setupUi(self, Urbplanbb_Dialog):
        Urbplanbb_Dialog.setObjectName("Urbplanbb_Dialog")
        Urbplanbb_Dialog.resize(780, 600)
        Urbplanbb_Dialog.setMinimumSize(QtCore.QSize(0, 0))
        Urbplanbb_Dialog.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.verticalLayout = QtWidgets.QVBoxLayout(Urbplanbb_Dialog)
        self.verticalLayout.setObjectName("verticalLayout")
        self.title_frame = QtWidgets.QFrame(Urbplanbb_Dialog)
        self.title_frame.setMaximumSize(QtCore.QSize(16777215, 65))
        self.title_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.title_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.title_frame.setObjectName("title_frame")
        self.gridLayout = QtWidgets.QGridLayout(self.title_frame)
        self.gridLayout.setObjectName("gridLayout")
        self.module_logo = QtWidgets.QLabel(self.title_frame)
        self.module_logo.setMinimumSize(QtCore.QSize(40, 40))
        self.module_logo.setMaximumSize(QtCore.QSize(40, 40))
        self.module_logo.setText("")
        self.module_logo.setPixmap(QtGui.QPixmap(":/images/images/md_urbanplan.png"))
        self.module_logo.setObjectName("module_logo")
        self.gridLayout.addWidget(self.module_logo, 0, 0, 3, 1)
        self.title = QtWidgets.QLabel(self.title_frame)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.title.setFont(font)
        self.title.setObjectName("title")
        self.gridLayout.addWidget(self.title, 0, 2, 1, 1)
        self.subtitle = QtWidgets.QLabel(self.title_frame)
        self.subtitle.setWordWrap(False)
        self.subtitle.setObjectName("subtitle")
        self.gridLayout.addWidget(self.subtitle, 1, 2, 1, 1)
        self.verticalLayout.addWidget(self.title_frame)
        self.title_line = QtWidgets.QFrame(Urbplanbb_Dialog)
        self.title_line.setFrameShape(QtWidgets.QFrame.HLine)
        self.title_line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.title_line.setObjectName("title_line")
        self.verticalLayout.addWidget(self.title_line)
        self.module_widget = QtWidgets.QWidget(Urbplanbb_Dialog)
        self.module_widget.setObjectName("module_widget")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.module_widget)
        self.horizontalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.sidebar_widget = QtWidgets.QWidget(self.module_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sidebar_widget.sizePolicy().hasHeightForWidth())
        self.sidebar_widget.setSizePolicy(sizePolicy)
        self.sidebar_widget.setMinimumSize(QtCore.QSize(0, 0))
        self.sidebar_widget.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.sidebar_widget.setObjectName("sidebar_widget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.sidebar_widget)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.sidebar_title = QtWidgets.QLabel(self.sidebar_widget)
        self.sidebar_title.setObjectName("sidebar_title")
        self.verticalLayout_2.addWidget(self.sidebar_title)
        self.year_combo = QtWidgets.QComboBox(self.sidebar_widget)
        self.year_combo.setMinimumSize(QtCore.QSize(100, 0))
        self.year_combo.setObjectName("year_combo")
        self.year_combo.addItem("")
        self.verticalLayout_2.addWidget(self.year_combo)
        self.autofillButton = QtWidgets.QPushButton(self.sidebar_widget)
        self.autofillButton.setObjectName("autofillButton")
        self.verticalLayout_2.addWidget(self.autofillButton)
        self.same_params = QtWidgets.QCheckBox(self.sidebar_widget)
        self.same_params.setObjectName("same_params")
        self.verticalLayout_2.addWidget(self.same_params)
        self.sidebar_line = QtWidgets.QFrame(self.sidebar_widget)
        self.sidebar_line.setFrameShape(QtWidgets.QFrame.HLine)
        self.sidebar_line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.sidebar_line.setObjectName("sidebar_line")
        self.verticalLayout_2.addWidget(self.sidebar_line)
        self.module_img = QtWidgets.QLabel(self.sidebar_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.module_img.sizePolicy().hasHeightForWidth())
        self.module_img.setSizePolicy(sizePolicy)
        self.module_img.setMinimumSize(QtCore.QSize(140, 100))
        self.module_img.setMaximumSize(QtCore.QSize(140, 100))
        self.module_img.setText("")
        self.module_img.setPixmap(QtGui.QPixmap(":/images/images/md_spatialmapping_general.jpg"))
        self.module_img.setObjectName("module_img")
        self.verticalLayout_2.addWidget(self.module_img)
        self.description = QtWidgets.QTextBrowser(self.sidebar_widget)
        self.description.setMinimumSize(QtCore.QSize(140, 0))
        self.description.setMaximumSize(QtCore.QSize(140, 16777215))
        self.description.setObjectName("description")
        self.verticalLayout_2.addWidget(self.description)
        self.horizontalLayout_6.addWidget(self.sidebar_widget)
        self.pollution_check = QtWidgets.QTabWidget(self.module_widget)
        self.pollution_check.setEnabled(True)
        self.pollution_check.setObjectName("pollution_check")
        self.geometry_tab = QtWidgets.QWidget()
        self.geometry_tab.setObjectName("geometry_tab")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.geometry_tab)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.planning_check = QtWidgets.QCheckBox(self.geometry_tab)
        self.planning_check.setObjectName("planning_check")
        self.verticalLayout_3.addWidget(self.planning_check)
        self.inputs_scrollArea_2 = QtWidgets.QScrollArea(self.geometry_tab)
        self.inputs_scrollArea_2.setWidgetResizable(True)
        self.inputs_scrollArea_2.setObjectName("inputs_scrollArea_2")
        self.inputs_contents_2 = QtWidgets.QWidget()
        self.inputs_contents_2.setGeometry(QtCore.QRect(0, 0, 554, 370))
        self.inputs_contents_2.setObjectName("inputs_contents_2")
        self.verticalLayout_19 = QtWidgets.QVBoxLayout(self.inputs_contents_2)
        self.verticalLayout_19.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_19.setObjectName("verticalLayout_19")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout()
        self.verticalLayout_7.setContentsMargins(9, 9, 9, 9)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.label_14 = QtWidgets.QLabel(self.inputs_contents_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(13)
        sizePolicy.setHeightForWidth(self.label_14.sizePolicy().hasHeightForWidth())
        self.label_14.setSizePolicy(sizePolicy)
        self.label_14.setMinimumSize(QtCore.QSize(0, 13))
        self.label_14.setMaximumSize(QtCore.QSize(16777215, 13))
        self.label_14.setObjectName("label_14")
        self.verticalLayout_7.addWidget(self.label_14)
        self.label_15 = QtWidgets.QLabel(self.inputs_contents_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(13)
        sizePolicy.setHeightForWidth(self.label_15.sizePolicy().hasHeightForWidth())
        self.label_15.setSizePolicy(sizePolicy)
        self.label_15.setMinimumSize(QtCore.QSize(0, 13))
        self.label_15.setMaximumSize(QtCore.QSize(16777215, 13))
        self.label_15.setObjectName("label_15")
        self.verticalLayout_7.addWidget(self.label_15)
        self.pg_usable_prohibit = QtWidgets.QCheckBox(self.inputs_contents_2)
        self.pg_usable_prohibit.setObjectName("pg_usable_prohibit")
        self.verticalLayout_7.addWidget(self.pg_usable_prohibit)
        self.ref_limit_check = QtWidgets.QCheckBox(self.inputs_contents_2)
        self.ref_limit_check.setObjectName("ref_limit_check")
        self.verticalLayout_7.addWidget(self.ref_limit_check)
        self.verticalLayout_19.addLayout(self.verticalLayout_7)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_19.addItem(spacerItem)
        self.inputs_scrollArea_2.setWidget(self.inputs_contents_2)
        self.verticalLayout_3.addWidget(self.inputs_scrollArea_2)
        self.pollution_check.addTab(self.geometry_tab, "")
        self.geography_tab = QtWidgets.QWidget()
        self.geography_tab.setObjectName("geography_tab")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.geography_tab)
        self.verticalLayout_8.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.checkBox_2 = QtWidgets.QCheckBox(self.geography_tab)
        self.checkBox_2.setObjectName("checkBox_2")
        self.verticalLayout_8.addWidget(self.checkBox_2)
        self.inputs_scrollArea_3 = QtWidgets.QScrollArea(self.geography_tab)
        self.inputs_scrollArea_3.setWidgetResizable(True)
        self.inputs_scrollArea_3.setObjectName("inputs_scrollArea_3")
        self.inputs_contents_3 = QtWidgets.QWidget()
        self.inputs_contents_3.setGeometry(QtCore.QRect(0, 0, 537, 898))
        self.inputs_contents_3.setObjectName("inputs_contents_3")
        self.verticalLayout_21 = QtWidgets.QVBoxLayout(self.inputs_contents_3)
        self.verticalLayout_21.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_21.setObjectName("verticalLayout_21")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout()
        self.verticalLayout_6.setContentsMargins(9, 9, 9, 9)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.mc_res_title = QtWidgets.QLabel(self.inputs_contents_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(13)
        sizePolicy.setHeightForWidth(self.mc_res_title.sizePolicy().hasHeightForWidth())
        self.mc_res_title.setSizePolicy(sizePolicy)
        self.mc_res_title.setMinimumSize(QtCore.QSize(0, 13))
        self.mc_res_title.setMaximumSize(QtCore.QSize(16777215, 13))
        self.mc_res_title.setObjectName("mc_res_title")
        self.verticalLayout_6.addWidget(self.mc_res_title)
        self.line = QtWidgets.QFrame(self.inputs_contents_3)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.verticalLayout_6.addWidget(self.line)
        self.lc_respave_lbl_2 = QtWidgets.QLabel(self.inputs_contents_3)
        self.lc_respave_lbl_2.setWordWrap(True)
        self.lc_respave_lbl_2.setObjectName("lc_respave_lbl_2")
        self.verticalLayout_6.addWidget(self.lc_respave_lbl_2)
        self.lc_res_widget = QtWidgets.QWidget(self.inputs_contents_3)
        self.lc_res_widget.setMinimumSize(QtCore.QSize(0, 0))
        self.lc_res_widget.setObjectName("lc_res_widget")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.lc_res_widget)
        self.gridLayout_3.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_3.setObjectName("gridLayout_3")
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_3.addItem(spacerItem1, 1, 4, 1, 1)
        spacerItem2 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_3.addItem(spacerItem2, 1, 1, 1, 1)
        self.lc_restrees_slider = QtWidgets.QSlider(self.lc_res_widget)
        self.lc_restrees_slider.setMaximum(100)
        self.lc_restrees_slider.setOrientation(QtCore.Qt.Horizontal)
        self.lc_restrees_slider.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.lc_restrees_slider.setTickInterval(20)
        self.lc_restrees_slider.setObjectName("lc_restrees_slider")
        self.gridLayout_3.addWidget(self.lc_restrees_slider, 3, 2, 1, 1)
        spacerItem3 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_3.addItem(spacerItem3, 3, 1, 1, 1)
        self.lc_restrees_lbl = QtWidgets.QLabel(self.lc_res_widget)
        self.lc_restrees_lbl.setObjectName("lc_restrees_lbl")
        self.gridLayout_3.addWidget(self.lc_restrees_lbl, 3, 0, 1, 1)
        self.lc_respave_lbl = QtWidgets.QLabel(self.lc_res_widget)
        self.lc_respave_lbl.setObjectName("lc_respave_lbl")
        self.gridLayout_3.addWidget(self.lc_respave_lbl, 0, 0, 1, 1)
        self.lc_resirri_lbl = QtWidgets.QLabel(self.lc_res_widget)
        self.lc_resirri_lbl.setObjectName("lc_resirri_lbl")
        self.gridLayout_3.addWidget(self.lc_resirri_lbl, 1, 0, 1, 1)
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_3.addItem(spacerItem4, 0, 4, 1, 1)
        spacerItem5 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_3.addItem(spacerItem5, 0, 1, 1, 1)
        spacerItem6 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_3.addItem(spacerItem6, 2, 4, 1, 1)
        spacerItem7 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_3.addItem(spacerItem7, 2, 1, 1, 1)
        self.lc_resirri_garden = QtWidgets.QRadioButton(self.lc_res_widget)
        self.lc_resirri_garden.setObjectName("lc_resirri_garden")
        self.gridLayout_3.addWidget(self.lc_resirri_garden, 2, 2, 1, 1)
        self.lc_respave_combo = QtWidgets.QComboBox(self.lc_res_widget)
        self.lc_respave_combo.setObjectName("lc_respave_combo")
        self.lc_respave_combo.addItem("")
        self.lc_respave_combo.addItem("")
        self.lc_respave_combo.addItem("")
        self.gridLayout_3.addWidget(self.lc_respave_combo, 0, 2, 1, 1)
        self.lc_resirri_allperv = QtWidgets.QRadioButton(self.lc_res_widget)
        self.lc_resirri_allperv.setObjectName("lc_resirri_allperv")
        self.gridLayout_3.addWidget(self.lc_resirri_allperv, 1, 2, 1, 1)
        spacerItem8 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_3.addItem(spacerItem8, 3, 4, 1, 1)
        self.lc_restrees_box = QtWidgets.QLineEdit(self.lc_res_widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lc_restrees_box.sizePolicy().hasHeightForWidth())
        self.lc_restrees_box.setSizePolicy(sizePolicy)
        self.lc_restrees_box.setMinimumSize(QtCore.QSize(40, 0))
        self.lc_restrees_box.setMaximumSize(QtCore.QSize(40, 16777215))
        self.lc_restrees_box.setObjectName("lc_restrees_box")
        self.gridLayout_3.addWidget(self.lc_restrees_box, 3, 3, 1, 1)
        self.verticalLayout_6.addWidget(self.lc_res_widget)
        self.mc_nres_title = QtWidgets.QLabel(self.inputs_contents_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(13)
        sizePolicy.setHeightForWidth(self.mc_nres_title.sizePolicy().hasHeightForWidth())
        self.mc_nres_title.setSizePolicy(sizePolicy)
        self.mc_nres_title.setMinimumSize(QtCore.QSize(0, 13))
        self.mc_nres_title.setMaximumSize(QtCore.QSize(16777215, 13))
        self.mc_nres_title.setObjectName("mc_nres_title")
        self.verticalLayout_6.addWidget(self.mc_nres_title)
        self.line_3 = QtWidgets.QFrame(self.inputs_contents_3)
        self.line_3.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.verticalLayout_6.addWidget(self.line_3)
        self.lc_respave_lbl_4 = QtWidgets.QLabel(self.inputs_contents_3)
        self.lc_respave_lbl_4.setWordWrap(True)
        self.lc_respave_lbl_4.setObjectName("lc_respave_lbl_4")
        self.verticalLayout_6.addWidget(self.lc_respave_lbl_4)
        self.widget = QtWidgets.QWidget(self.inputs_contents_3)
        self.widget.setMinimumSize(QtCore.QSize(0, 0))
        self.widget.setObjectName("widget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.widget)
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.mc_nrestrees_slider = QtWidgets.QSlider(self.widget)
        self.mc_nrestrees_slider.setMaximum(100)
        self.mc_nrestrees_slider.setOrientation(QtCore.Qt.Horizontal)
        self.mc_nrestrees_slider.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.mc_nrestrees_slider.setObjectName("mc_nrestrees_slider")
        self.gridLayout_2.addWidget(self.mc_nrestrees_slider, 3, 2, 1, 1)
        self.mc_nrestrees_lbl = QtWidgets.QLabel(self.widget)
        self.mc_nrestrees_lbl.setObjectName("mc_nrestrees_lbl")
        self.gridLayout_2.addWidget(self.mc_nrestrees_lbl, 3, 0, 1, 1)
        spacerItem9 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem9, 3, 1, 1, 1)
        spacerItem10 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem10, 2, 1, 1, 1)
        spacerItem11 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem11, 1, 4, 1, 1)
        spacerItem12 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem12, 1, 1, 1, 1)
        spacerItem13 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem13, 0, 4, 1, 1)
        spacerItem14 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem14, 0, 1, 1, 1)
        self.lc_restrees_box_2 = QtWidgets.QLineEdit(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lc_restrees_box_2.sizePolicy().hasHeightForWidth())
        self.lc_restrees_box_2.setSizePolicy(sizePolicy)
        self.lc_restrees_box_2.setMinimumSize(QtCore.QSize(40, 0))
        self.lc_restrees_box_2.setMaximumSize(QtCore.QSize(40, 16777215))
        self.lc_restrees_box_2.setObjectName("lc_restrees_box_2")
        self.gridLayout_2.addWidget(self.lc_restrees_box_2, 3, 3, 1, 1)
        self.mc_nrestreeloc_lbl = QtWidgets.QLabel(self.widget)
        self.mc_nrestreeloc_lbl.setObjectName("mc_nrestreeloc_lbl")
        self.gridLayout_2.addWidget(self.mc_nrestreeloc_lbl, 4, 0, 1, 1)
        spacerItem15 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem15, 4, 4, 1, 1)
        self.mc_nrestreeloc_checkon = QtWidgets.QCheckBox(self.widget)
        self.mc_nrestreeloc_checkon.setObjectName("mc_nrestreeloc_checkon")
        self.gridLayout_2.addWidget(self.mc_nrestreeloc_checkon, 4, 2, 1, 1)
        self.mc_nreshard_lbl = QtWidgets.QLabel(self.widget)
        self.mc_nreshard_lbl.setObjectName("mc_nreshard_lbl")
        self.gridLayout_2.addWidget(self.mc_nreshard_lbl, 2, 0, 1, 1)
        self.mc_nreshard_combo = QtWidgets.QComboBox(self.widget)
        self.mc_nreshard_combo.setObjectName("mc_nreshard_combo")
        self.mc_nreshard_combo.addItem("")
        self.mc_nreshard_combo.addItem("")
        self.mc_nreshard_combo.addItem("")
        self.gridLayout_2.addWidget(self.mc_nreshard_combo, 2, 2, 1, 1)
        spacerItem16 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem16, 4, 1, 1, 1)
        self.mc_nresbay_lbl = QtWidgets.QLabel(self.widget)
        self.mc_nresbay_lbl.setObjectName("mc_nresbay_lbl")
        self.gridLayout_2.addWidget(self.mc_nresbay_lbl, 1, 0, 1, 1)
        spacerItem17 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem17, 3, 4, 1, 1)
        self.mc_nresbay_combo = QtWidgets.QComboBox(self.widget)
        self.mc_nresbay_combo.setObjectName("mc_nresbay_combo")
        self.mc_nresbay_combo.addItem("")
        self.mc_nresbay_combo.addItem("")
        self.mc_nresbay_combo.addItem("")
        self.gridLayout_2.addWidget(self.mc_nresbay_combo, 1, 2, 1, 1)
        self.mc_nrespark_lbl = QtWidgets.QLabel(self.widget)
        self.mc_nrespark_lbl.setObjectName("mc_nrespark_lbl")
        self.gridLayout_2.addWidget(self.mc_nrespark_lbl, 0, 0, 1, 1)
        self.mc_nrespark_combo = QtWidgets.QComboBox(self.widget)
        self.mc_nrespark_combo.setObjectName("mc_nrespark_combo")
        self.mc_nrespark_combo.addItem("")
        self.mc_nrespark_combo.addItem("")
        self.mc_nrespark_combo.addItem("")
        self.gridLayout_2.addWidget(self.mc_nrespark_combo, 0, 2, 1, 1)
        self.mc_nrestreeloc_checkoff = QtWidgets.QCheckBox(self.widget)
        self.mc_nrestreeloc_checkoff.setObjectName("mc_nrestreeloc_checkoff")
        self.gridLayout_2.addWidget(self.mc_nrestreeloc_checkoff, 5, 2, 1, 1)
        spacerItem18 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem18, 5, 4, 1, 1)
        spacerItem19 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem19, 5, 1, 1, 1)
        spacerItem20 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem20, 2, 4, 1, 1)
        self.verticalLayout_6.addWidget(self.widget)
        self.mc_roads_title = QtWidgets.QLabel(self.inputs_contents_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(13)
        sizePolicy.setHeightForWidth(self.mc_roads_title.sizePolicy().hasHeightForWidth())
        self.mc_roads_title.setSizePolicy(sizePolicy)
        self.mc_roads_title.setMinimumSize(QtCore.QSize(0, 13))
        self.mc_roads_title.setMaximumSize(QtCore.QSize(16777215, 13))
        self.mc_roads_title.setObjectName("mc_roads_title")
        self.verticalLayout_6.addWidget(self.mc_roads_title)
        self.line_4 = QtWidgets.QFrame(self.inputs_contents_3)
        self.line_4.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_4.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_4.setObjectName("line_4")
        self.verticalLayout_6.addWidget(self.line_4)
        self.lc_respave_lbl_5 = QtWidgets.QLabel(self.inputs_contents_3)
        self.lc_respave_lbl_5.setWordWrap(True)
        self.lc_respave_lbl_5.setObjectName("lc_respave_lbl_5")
        self.verticalLayout_6.addWidget(self.lc_respave_lbl_5)
        self.widget_2 = QtWidgets.QWidget(self.inputs_contents_3)
        self.widget_2.setMinimumSize(QtCore.QSize(0, 10))
        self.widget_2.setObjectName("widget_2")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.widget_2)
        self.gridLayout_4.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.mc_rdtreedens_lbl = QtWidgets.QLabel(self.widget_2)
        self.mc_rdtreedens_lbl.setObjectName("mc_rdtreedens_lbl")
        self.gridLayout_4.addWidget(self.mc_rdtreedens_lbl, 5, 0, 1, 1)
        self.mc_rdtreedens_spin = QtWidgets.QSpinBox(self.widget_2)
        self.mc_rdtreedens_spin.setMaximum(10)
        self.mc_rdtreedens_spin.setObjectName("mc_rdtreedens_spin")
        self.gridLayout_4.addWidget(self.mc_rdtreedens_spin, 5, 2, 1, 1)
        self.mc_rdfpath_lbl = QtWidgets.QLabel(self.widget_2)
        self.mc_rdfpath_lbl.setObjectName("mc_rdfpath_lbl")
        self.gridLayout_4.addWidget(self.mc_rdfpath_lbl, 4, 0, 1, 1)
        self.mc_rdtreedens_lbl2 = QtWidgets.QLabel(self.widget_2)
        self.mc_rdtreedens_lbl2.setObjectName("mc_rdtreedens_lbl2")
        self.gridLayout_4.addWidget(self.mc_rdtreedens_lbl2, 5, 3, 1, 1)
        self.mc_rdhwy_lbl = QtWidgets.QLabel(self.widget_2)
        self.mc_rdhwy_lbl.setObjectName("mc_rdhwy_lbl")
        self.gridLayout_4.addWidget(self.mc_rdhwy_lbl, 2, 0, 1, 1)
        self.mc_rdfpath_combo = QtWidgets.QComboBox(self.widget_2)
        self.mc_rdfpath_combo.setObjectName("mc_rdfpath_combo")
        self.mc_rdfpath_combo.addItem("")
        self.mc_rdfpath_combo.addItem("")
        self.mc_rdfpath_combo.addItem("")
        self.gridLayout_4.addWidget(self.mc_rdfpath_combo, 4, 2, 1, 2)
        self.mc_rdhwy_combo = QtWidgets.QComboBox(self.widget_2)
        self.mc_rdhwy_combo.setObjectName("mc_rdhwy_combo")
        self.mc_rdhwy_combo.addItem("")
        self.mc_rdhwy_combo.addItem("")
        self.mc_rdhwy_combo.addItem("")
        self.gridLayout_4.addWidget(self.mc_rdhwy_combo, 2, 2, 1, 2)
        spacerItem21 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_4.addItem(spacerItem21, 5, 4, 1, 1)
        spacerItem22 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_4.addItem(spacerItem22, 5, 1, 1, 1)
        self.mc_rdloc_lbl = QtWidgets.QLabel(self.widget_2)
        self.mc_rdloc_lbl.setObjectName("mc_rdloc_lbl")
        self.gridLayout_4.addWidget(self.mc_rdloc_lbl, 0, 0, 1, 1)
        self.mc_rdloc_combo = QtWidgets.QComboBox(self.widget_2)
        self.mc_rdloc_combo.setObjectName("mc_rdloc_combo")
        self.mc_rdloc_combo.addItem("")
        self.mc_rdloc_combo.addItem("")
        self.mc_rdloc_combo.addItem("")
        self.gridLayout_4.addWidget(self.mc_rdloc_combo, 0, 2, 1, 2)
        spacerItem23 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_4.addItem(spacerItem23, 4, 4, 1, 1)
        spacerItem24 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_4.addItem(spacerItem24, 2, 4, 1, 1)
        spacerItem25 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_4.addItem(spacerItem25, 0, 4, 1, 1)
        spacerItem26 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_4.addItem(spacerItem26, 4, 1, 1, 1)
        spacerItem27 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_4.addItem(spacerItem27, 2, 1, 1, 1)
        spacerItem28 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_4.addItem(spacerItem28, 0, 1, 1, 1)
        self.verticalLayout_6.addWidget(self.widget_2)
        self.mc_open_title = QtWidgets.QLabel(self.inputs_contents_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(13)
        sizePolicy.setHeightForWidth(self.mc_open_title.sizePolicy().hasHeightForWidth())
        self.mc_open_title.setSizePolicy(sizePolicy)
        self.mc_open_title.setMinimumSize(QtCore.QSize(0, 13))
        self.mc_open_title.setMaximumSize(QtCore.QSize(16777215, 13))
        self.mc_open_title.setObjectName("mc_open_title")
        self.verticalLayout_6.addWidget(self.mc_open_title)
        self.line_5 = QtWidgets.QFrame(self.inputs_contents_3)
        self.line_5.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_5.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_5.setObjectName("line_5")
        self.verticalLayout_6.addWidget(self.line_5)
        self.lc_respave_lbl_6 = QtWidgets.QLabel(self.inputs_contents_3)
        self.lc_respave_lbl_6.setWordWrap(True)
        self.lc_respave_lbl_6.setObjectName("lc_respave_lbl_6")
        self.verticalLayout_6.addWidget(self.lc_respave_lbl_6)
        self.widget_3 = QtWidgets.QWidget(self.inputs_contents_3)
        self.widget_3.setMinimumSize(QtCore.QSize(0, 10))
        self.widget_3.setObjectName("widget_3")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.widget_3)
        self.gridLayout_5.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.mc_reftrees_spin = QtWidgets.QSpinBox(self.widget_3)
        self.mc_reftrees_spin.setMaximum(10)
        self.mc_reftrees_spin.setObjectName("mc_reftrees_spin")
        self.gridLayout_5.addWidget(self.mc_reftrees_spin, 2, 2, 1, 1)
        self.mc_reftrees_lbl2 = QtWidgets.QLabel(self.widget_3)
        self.mc_reftrees_lbl2.setObjectName("mc_reftrees_lbl2")
        self.gridLayout_5.addWidget(self.mc_reftrees_lbl2, 2, 3, 1, 1)
        self.mc_reftrees_lbl = QtWidgets.QLabel(self.widget_3)
        self.mc_reftrees_lbl.setObjectName("mc_reftrees_lbl")
        self.gridLayout_5.addWidget(self.mc_reftrees_lbl, 2, 0, 1, 1)
        spacerItem29 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_5.addItem(spacerItem29, 2, 4, 1, 1)
        self.mc_opengrey_lbl = QtWidgets.QLabel(self.widget_3)
        self.mc_opengrey_lbl.setObjectName("mc_opengrey_lbl")
        self.gridLayout_5.addWidget(self.mc_opengrey_lbl, 0, 0, 1, 1)
        self.mc_opentrees_lbl2 = QtWidgets.QLabel(self.widget_3)
        self.mc_opentrees_lbl2.setObjectName("mc_opentrees_lbl2")
        self.gridLayout_5.addWidget(self.mc_opentrees_lbl2, 1, 3, 1, 1)
        self.mc_opentrees_spin = QtWidgets.QSpinBox(self.widget_3)
        self.mc_opentrees_spin.setMaximum(10)
        self.mc_opentrees_spin.setObjectName("mc_opentrees_spin")
        self.gridLayout_5.addWidget(self.mc_opentrees_spin, 1, 2, 1, 1)
        self.mc_opentrees_lbl_2 = QtWidgets.QLabel(self.widget_3)
        self.mc_opentrees_lbl_2.setObjectName("mc_opentrees_lbl_2")
        self.gridLayout_5.addWidget(self.mc_opentrees_lbl_2, 1, 0, 1, 1)
        spacerItem30 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_5.addItem(spacerItem30, 1, 1, 1, 1)
        spacerItem31 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_5.addItem(spacerItem31, 2, 1, 1, 1)
        spacerItem32 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_5.addItem(spacerItem32, 1, 4, 1, 1)
        self.mc_opengrey_combo = QtWidgets.QComboBox(self.widget_3)
        self.mc_opengrey_combo.setObjectName("mc_opengrey_combo")
        self.mc_opengrey_combo.addItem("")
        self.mc_opengrey_combo.addItem("")
        self.mc_opengrey_combo.addItem("")
        self.gridLayout_5.addWidget(self.mc_opengrey_combo, 0, 2, 1, 2)
        spacerItem33 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_5.addItem(spacerItem33, 0, 1, 1, 1)
        spacerItem34 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_5.addItem(spacerItem34, 0, 4, 1, 1)
        self.verticalLayout_6.addWidget(self.widget_3)
        self.mc_vegetation_title = QtWidgets.QLabel(self.inputs_contents_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(13)
        sizePolicy.setHeightForWidth(self.mc_vegetation_title.sizePolicy().hasHeightForWidth())
        self.mc_vegetation_title.setSizePolicy(sizePolicy)
        self.mc_vegetation_title.setMinimumSize(QtCore.QSize(0, 13))
        self.mc_vegetation_title.setMaximumSize(QtCore.QSize(16777215, 13))
        self.mc_vegetation_title.setObjectName("mc_vegetation_title")
        self.verticalLayout_6.addWidget(self.mc_vegetation_title)
        self.line_6 = QtWidgets.QFrame(self.inputs_contents_3)
        self.line_6.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_6.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_6.setObjectName("line_6")
        self.verticalLayout_6.addWidget(self.line_6)
        self.lc_respave_lbl_7 = QtWidgets.QLabel(self.inputs_contents_3)
        self.lc_respave_lbl_7.setWordWrap(True)
        self.lc_respave_lbl_7.setObjectName("lc_respave_lbl_7")
        self.verticalLayout_6.addWidget(self.lc_respave_lbl_7)
        self.mc_vegetation_widget = QtWidgets.QWidget(self.inputs_contents_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.mc_vegetation_widget.sizePolicy().hasHeightForWidth())
        self.mc_vegetation_widget.setSizePolicy(sizePolicy)
        self.mc_vegetation_widget.setMinimumSize(QtCore.QSize(369, 40))
        self.mc_vegetation_widget.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.mc_vegetation_widget.setObjectName("mc_vegetation_widget")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.mc_vegetation_widget)
        self.gridLayout_6.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.mc_treetype_lbl = QtWidgets.QLabel(self.mc_vegetation_widget)
        self.mc_treetype_lbl.setObjectName("mc_treetype_lbl")
        self.gridLayout_6.addWidget(self.mc_treetype_lbl, 0, 0, 1, 1)
        self.mc_treetype_combo = QtWidgets.QComboBox(self.mc_vegetation_widget)
        self.mc_treetype_combo.setMinimumSize(QtCore.QSize(180, 0))
        self.mc_treetype_combo.setObjectName("mc_treetype_combo")
        self.mc_treetype_combo.addItem("")
        self.mc_treetype_combo.addItem("")
        self.mc_treetype_combo.addItem("")
        self.mc_treetype_combo.addItem("")
        self.mc_treetype_combo.addItem("")
        self.mc_treetype_combo.addItem("")
        self.gridLayout_6.addWidget(self.mc_treetype_combo, 0, 2, 1, 1)
        spacerItem35 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_6.addItem(spacerItem35, 0, 3, 1, 1)
        spacerItem36 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_6.addItem(spacerItem36, 0, 1, 1, 1)
        self.verticalLayout_6.addWidget(self.mc_vegetation_widget)
        self.verticalLayout_21.addLayout(self.verticalLayout_6)
        spacerItem37 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_21.addItem(spacerItem37)
        self.inputs_scrollArea_3.setWidget(self.inputs_contents_3)
        self.verticalLayout_8.addWidget(self.inputs_scrollArea_3)
        self.pollution_check.addTab(self.geography_tab, "")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.verticalLayout_18 = QtWidgets.QVBoxLayout(self.tab)
        self.verticalLayout_18.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_18.setObjectName("verticalLayout_18")
        self.checkBox_5 = QtWidgets.QCheckBox(self.tab)
        self.checkBox_5.setObjectName("checkBox_5")
        self.verticalLayout_18.addWidget(self.checkBox_5)
        self.inputs_scrollArea_5 = QtWidgets.QScrollArea(self.tab)
        self.inputs_scrollArea_5.setWidgetResizable(True)
        self.inputs_scrollArea_5.setObjectName("inputs_scrollArea_5")
        self.inputs_contents_5 = QtWidgets.QWidget()
        self.inputs_contents_5.setGeometry(QtCore.QRect(0, 0, 537, 1853))
        self.inputs_contents_5.setObjectName("inputs_contents_5")
        self.verticalLayout_15 = QtWidgets.QVBoxLayout(self.inputs_contents_5)
        self.verticalLayout_15.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_15.setObjectName("verticalLayout_15")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout()
        self.verticalLayout_9.setContentsMargins(9, 9, 9, 9)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.arterial_info_lbl = QtWidgets.QLabel(self.inputs_contents_5)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(13)
        sizePolicy.setHeightForWidth(self.arterial_info_lbl.sizePolicy().hasHeightForWidth())
        self.arterial_info_lbl.setSizePolicy(sizePolicy)
        self.arterial_info_lbl.setMinimumSize(QtCore.QSize(0, 13))
        self.arterial_info_lbl.setMaximumSize(QtCore.QSize(16777215, 13))
        self.arterial_info_lbl.setObjectName("arterial_info_lbl")
        self.verticalLayout_9.addWidget(self.arterial_info_lbl)
        self.line_2 = QtWidgets.QFrame(self.inputs_contents_5)
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.verticalLayout_9.addWidget(self.line_2)
        self.freq_lbl_2 = QtWidgets.QLabel(self.inputs_contents_5)
        self.freq_lbl_2.setObjectName("freq_lbl_2")
        self.verticalLayout_9.addWidget(self.freq_lbl_2)
        self.demand_params = QtWidgets.QWidget(self.inputs_contents_5)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(50)
        sizePolicy.setHeightForWidth(self.demand_params.sizePolicy().hasHeightForWidth())
        self.demand_params.setSizePolicy(sizePolicy)
        self.demand_params.setMinimumSize(QtCore.QSize(369, 500))
        self.demand_params.setMaximumSize(QtCore.QSize(16777215, 500))
        self.demand_params.setObjectName("demand_params")
        self.demand_laundry_lbl = QtWidgets.QLabel(self.demand_params)
        self.demand_laundry_lbl.setGeometry(QtCore.QRect(390, 20, 51, 16))
        self.demand_laundry_lbl.setObjectName("demand_laundry_lbl")
        self.ffp_lbl = QtWidgets.QLabel(self.demand_params)
        self.ffp_lbl.setGeometry(QtCore.QRect(20, 130, 161, 16))
        self.ffp_lbl.setObjectName("ffp_lbl")
        self.dur_lbl = QtWidgets.QLabel(self.demand_params)
        self.dur_lbl.setGeometry(QtCore.QRect(20, 70, 141, 16))
        self.dur_lbl.setObjectName("dur_lbl")
        self.freq_lbl = QtWidgets.QLabel(self.demand_params)
        self.freq_lbl.setGeometry(QtCore.QRect(20, 40, 161, 16))
        self.freq_lbl.setObjectName("freq_lbl")
        self.ffp_kitchen_combo = QtWidgets.QComboBox(self.demand_params)
        self.ffp_kitchen_combo.setGeometry(QtCore.QRect(195, 130, 51, 21))
        self.ffp_kitchen_combo.setObjectName("ffp_kitchen_combo")
        self.ffp_kitchen_combo.addItem("")
        self.ffp_kitchen_combo.addItem("")
        self.ffp_kitchen_combo.addItem("")
        self.ffp_kitchen_combo.addItem("")
        self.ffp_kitchen_combo.addItem("")
        self.dur_laundry_box = QtWidgets.QLineEdit(self.demand_params)
        self.dur_laundry_box.setEnabled(False)
        self.dur_laundry_box.setGeometry(QtCore.QRect(390, 70, 51, 20))
        self.dur_laundry_box.setObjectName("dur_laundry_box")
        self.dur_shower_box = QtWidgets.QLineEdit(self.demand_params)
        self.dur_shower_box.setGeometry(QtCore.QRect(260, 70, 51, 20))
        self.dur_shower_box.setObjectName("dur_shower_box")
        self.freq_shower_box = QtWidgets.QLineEdit(self.demand_params)
        self.freq_shower_box.setGeometry(QtCore.QRect(260, 40, 51, 20))
        self.freq_shower_box.setObjectName("freq_shower_box")
        self.demand_shower_lbl = QtWidgets.QLabel(self.demand_params)
        self.demand_shower_lbl.setGeometry(QtCore.QRect(260, 20, 51, 16))
        self.demand_shower_lbl.setObjectName("demand_shower_lbl")
        self.ffp_shower_combo = QtWidgets.QComboBox(self.demand_params)
        self.ffp_shower_combo.setGeometry(QtCore.QRect(260, 130, 51, 21))
        self.ffp_shower_combo.setObjectName("ffp_shower_combo")
        self.ffp_shower_combo.addItem("")
        self.ffp_shower_combo.addItem("")
        self.ffp_shower_combo.addItem("")
        self.ffp_shower_combo.addItem("")
        self.ffp_shower_combo.addItem("")
        self.t2t_house_lbl = QtWidgets.QLabel(self.demand_params)
        self.t2t_house_lbl.setGeometry(QtCore.QRect(20, 165, 261, 16))
        self.t2t_house_lbl.setObjectName("t2t_house_lbl")
        self.ffp_toilet_combo = QtWidgets.QComboBox(self.demand_params)
        self.ffp_toilet_combo.setGeometry(QtCore.QRect(325, 130, 51, 21))
        self.ffp_toilet_combo.setObjectName("ffp_toilet_combo")
        self.ffp_toilet_combo.addItem("")
        self.ffp_toilet_combo.addItem("")
        self.ffp_toilet_combo.addItem("")
        self.ffp_toilet_combo.addItem("")
        self.ffp_toilet_combo.addItem("")
        self.ffp_laundry_combo = QtWidgets.QComboBox(self.demand_params)
        self.ffp_laundry_combo.setGeometry(QtCore.QRect(390, 130, 51, 20))
        self.ffp_laundry_combo.setObjectName("ffp_laundry_combo")
        self.ffp_laundry_combo.addItem("")
        self.ffp_laundry_combo.addItem("")
        self.ffp_laundry_combo.addItem("")
        self.ffp_laundry_combo.addItem("")
        self.ffp_laundry_combo.addItem("")
        self.demand_toilet_lbl = QtWidgets.QLabel(self.demand_params)
        self.demand_toilet_lbl.setGeometry(QtCore.QRect(335, 20, 31, 16))
        self.demand_toilet_lbl.setObjectName("demand_toilet_lbl")
        self.ffp_garden_combo = QtWidgets.QComboBox(self.demand_params)
        self.ffp_garden_combo.setGeometry(QtCore.QRect(190, 195, 51, 21))
        self.ffp_garden_combo.setObjectName("ffp_garden_combo")
        self.ffp_garden_combo.addItem("")
        self.ffp_garden_combo.addItem("")
        self.ffp_garden_combo.addItem("")
        self.ffp_garden_combo.addItem("")
        self.ffp_garden_combo.addItem("")
        self.freq_laundry_box = QtWidgets.QLineEdit(self.demand_params)
        self.freq_laundry_box.setGeometry(QtCore.QRect(390, 40, 51, 20))
        self.freq_laundry_box.setObjectName("freq_laundry_box")
        self.priv_irr_vol_box = QtWidgets.QLineEdit(self.demand_params)
        self.priv_irr_vol_box.setGeometry(QtCore.QRect(280, 165, 51, 20))
        self.priv_irr_vol_box.setObjectName("priv_irr_vol_box")
        self.ffp_garden_lbl = QtWidgets.QLabel(self.demand_params)
        self.ffp_garden_lbl.setGeometry(QtCore.QRect(20, 195, 161, 16))
        self.ffp_garden_lbl.setObjectName("ffp_garden_lbl")
        self.dur_toilet_box = QtWidgets.QLineEdit(self.demand_params)
        self.dur_toilet_box.setEnabled(False)
        self.dur_toilet_box.setGeometry(QtCore.QRect(325, 70, 51, 20))
        self.dur_toilet_box.setObjectName("dur_toilet_box")
        self.demandvary_lbl = QtWidgets.QLabel(self.demand_params)
        self.demandvary_lbl.setGeometry(QtCore.QRect(20, 100, 161, 16))
        self.demandvary_lbl.setObjectName("demandvary_lbl")
        self.freq_kitchen_box = QtWidgets.QLineEdit(self.demand_params)
        self.freq_kitchen_box.setGeometry(QtCore.QRect(195, 40, 51, 20))
        self.freq_kitchen_box.setObjectName("freq_kitchen_box")
        self.freq_toilet_box = QtWidgets.QLineEdit(self.demand_params)
        self.freq_toilet_box.setGeometry(QtCore.QRect(325, 40, 51, 20))
        self.freq_toilet_box.setObjectName("freq_toilet_box")
        self.demand_kitchen_lbl = QtWidgets.QLabel(self.demand_params)
        self.demand_kitchen_lbl.setGeometry(QtCore.QRect(195, 20, 51, 16))
        self.demand_kitchen_lbl.setObjectName("demand_kitchen_lbl")
        self.dur_kitchen_box = QtWidgets.QLineEdit(self.demand_params)
        self.dur_kitchen_box.setGeometry(QtCore.QRect(195, 70, 51, 20))
        self.dur_kitchen_box.setObjectName("dur_kitchen_box")
        self.res_demand_title_2 = QtWidgets.QLabel(self.demand_params)
        self.res_demand_title_2.setGeometry(QtCore.QRect(10, 10, 151, 13))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(13)
        sizePolicy.setHeightForWidth(self.res_demand_title_2.sizePolicy().hasHeightForWidth())
        self.res_demand_title_2.setSizePolicy(sizePolicy)
        self.res_demand_title_2.setMinimumSize(QtCore.QSize(0, 13))
        self.res_demand_title_2.setMaximumSize(QtCore.QSize(16777215, 13))
        self.res_demand_title_2.setObjectName("res_demand_title_2")
        self.res_demand_title_3 = QtWidgets.QLabel(self.demand_params)
        self.res_demand_title_3.setGeometry(QtCore.QRect(10, 230, 171, 13))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(13)
        sizePolicy.setHeightForWidth(self.res_demand_title_3.sizePolicy().hasHeightForWidth())
        self.res_demand_title_3.setSizePolicy(sizePolicy)
        self.res_demand_title_3.setMinimumSize(QtCore.QSize(0, 13))
        self.res_demand_title_3.setMaximumSize(QtCore.QSize(16777215, 13))
        self.res_demand_title_3.setObjectName("res_demand_title_3")
        self.lidemand_spin = QtWidgets.QSpinBox(self.demand_params)
        self.lidemand_spin.setGeometry(QtCore.QRect(270, 285, 61, 22))
        self.lidemand_spin.setMaximum(10)
        self.lidemand_spin.setSingleStep(5)
        self.lidemand_spin.setProperty("value", 10)
        self.lidemand_spin.setObjectName("lidemand_spin")
        self.comdemand_box = QtWidgets.QLineEdit(self.demand_params)
        self.comdemand_box.setGeometry(QtCore.QRect(190, 255, 51, 20))
        self.comdemand_box.setObjectName("comdemand_box")
        self.lidemand_lbl = QtWidgets.QLabel(self.demand_params)
        self.lidemand_lbl.setGeometry(QtCore.QRect(20, 285, 161, 17))
        self.lidemand_lbl.setObjectName("lidemand_lbl")
        self.comdemand_spin = QtWidgets.QSpinBox(self.demand_params)
        self.comdemand_spin.setGeometry(QtCore.QRect(270, 255, 61, 22))
        self.comdemand_spin.setMaximum(10)
        self.comdemand_spin.setSingleStep(5)
        self.comdemand_spin.setProperty("value", 10)
        self.comdemand_spin.setObjectName("comdemand_spin")
        self.comdemand_lbl = QtWidgets.QLabel(self.demand_params)
        self.comdemand_lbl.setGeometry(QtCore.QRect(20, 255, 151, 17))
        self.comdemand_lbl.setObjectName("comdemand_lbl")
        self.hidemand_spin = QtWidgets.QSpinBox(self.demand_params)
        self.hidemand_spin.setGeometry(QtCore.QRect(270, 315, 61, 22))
        self.hidemand_spin.setMaximum(10)
        self.hidemand_spin.setSingleStep(5)
        self.hidemand_spin.setProperty("value", 10)
        self.hidemand_spin.setObjectName("hidemand_spin")
        self.lidemand_pm = QtWidgets.QLabel(self.demand_params)
        self.lidemand_pm.setGeometry(QtCore.QRect(245, 285, 31, 20))
        self.lidemand_pm.setObjectName("lidemand_pm")
        self.comdemand_pm = QtWidgets.QLabel(self.demand_params)
        self.comdemand_pm.setGeometry(QtCore.QRect(245, 255, 31, 20))
        self.comdemand_pm.setObjectName("comdemand_pm")
        self.hidemand_lbl = QtWidgets.QLabel(self.demand_params)
        self.hidemand_lbl.setGeometry(QtCore.QRect(20, 315, 161, 17))
        self.hidemand_lbl.setObjectName("hidemand_lbl")
        self.lidemand_box = QtWidgets.QLineEdit(self.demand_params)
        self.lidemand_box.setGeometry(QtCore.QRect(190, 285, 51, 20))
        self.lidemand_box.setObjectName("lidemand_box")
        self.hidemand_pm = QtWidgets.QLabel(self.demand_params)
        self.hidemand_pm.setGeometry(QtCore.QRect(245, 315, 31, 20))
        self.hidemand_pm.setObjectName("hidemand_pm")
        self.hidemand_box = QtWidgets.QLineEdit(self.demand_params)
        self.hidemand_box.setGeometry(QtCore.QRect(190, 315, 51, 20))
        self.hidemand_box.setObjectName("hidemand_box")
        self.public_irr_title = QtWidgets.QLabel(self.demand_params)
        self.public_irr_title.setGeometry(QtCore.QRect(10, 355, 447, 13))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(13)
        sizePolicy.setHeightForWidth(self.public_irr_title.sizePolicy().hasHeightForWidth())
        self.public_irr_title.setSizePolicy(sizePolicy)
        self.public_irr_title.setMinimumSize(QtCore.QSize(0, 13))
        self.public_irr_title.setMaximumSize(QtCore.QSize(16777215, 13))
        self.public_irr_title.setObjectName("public_irr_title")
        self.public_irr_lbl2 = QtWidgets.QLabel(self.demand_params)
        self.public_irr_lbl2.setGeometry(QtCore.QRect(20, 405, 181, 16))
        self.public_irr_lbl2.setObjectName("public_irr_lbl2")
        self.public_irr_wq = QtWidgets.QComboBox(self.demand_params)
        self.public_irr_wq.setGeometry(QtCore.QRect(220, 470, 51, 21))
        self.public_irr_wq.setObjectName("public_irr_wq")
        self.public_irr_wq.addItem("")
        self.public_irr_wq.addItem("")
        self.public_irr_wq.addItem("")
        self.public_irr_wq.addItem("")
        self.public_irr_wq.addItem("")
        self.public_irr_volume = QtWidgets.QLineEdit(self.demand_params)
        self.public_irr_volume.setGeometry(QtCore.QRect(280, 380, 51, 20))
        self.public_irr_volume.setText("")
        self.public_irr_volume.setObjectName("public_irr_volume")
        self.public_irr_pg = QtWidgets.QCheckBox(self.demand_params)
        self.public_irr_pg.setGeometry(QtCore.QRect(210, 425, 221, 17))
        self.public_irr_pg.setObjectName("public_irr_pg")
        self.public_irr_lbl = QtWidgets.QLabel(self.demand_params)
        self.public_irr_lbl.setGeometry(QtCore.QRect(20, 380, 251, 16))
        self.public_irr_lbl.setObjectName("public_irr_lbl")
        self.public_irr_ref = QtWidgets.QCheckBox(self.demand_params)
        self.public_irr_ref.setGeometry(QtCore.QRect(210, 445, 141, 17))
        self.public_irr_ref.setObjectName("public_irr_ref")
        self.public_irr_lbl3 = QtWidgets.QLabel(self.demand_params)
        self.public_irr_lbl3.setGeometry(QtCore.QRect(20, 470, 201, 16))
        self.public_irr_lbl3.setObjectName("public_irr_lbl3")
        self.public_irr_nonres = QtWidgets.QCheckBox(self.demand_params)
        self.public_irr_nonres.setGeometry(QtCore.QRect(210, 405, 191, 17))
        self.public_irr_nonres.setObjectName("public_irr_nonres")
        self.demandvary_kitchen_box = QtWidgets.QSpinBox(self.demand_params)
        self.demandvary_kitchen_box.setGeometry(QtCore.QRect(195, 100, 51, 22))
        self.demandvary_kitchen_box.setMaximum(100)
        self.demandvary_kitchen_box.setSingleStep(5)
        self.demandvary_kitchen_box.setProperty("value", 10)
        self.demandvary_kitchen_box.setObjectName("demandvary_kitchen_box")
        self.demandvary_shower_box = QtWidgets.QSpinBox(self.demand_params)
        self.demandvary_shower_box.setGeometry(QtCore.QRect(260, 100, 51, 22))
        self.demandvary_shower_box.setMaximum(100)
        self.demandvary_shower_box.setSingleStep(5)
        self.demandvary_shower_box.setProperty("value", 10)
        self.demandvary_shower_box.setObjectName("demandvary_shower_box")
        self.demandvary_toilet_box = QtWidgets.QSpinBox(self.demand_params)
        self.demandvary_toilet_box.setGeometry(QtCore.QRect(325, 100, 51, 22))
        self.demandvary_toilet_box.setMaximum(100)
        self.demandvary_toilet_box.setSingleStep(5)
        self.demandvary_toilet_box.setProperty("value", 10)
        self.demandvary_toilet_box.setObjectName("demandvary_toilet_box")
        self.demandvary_laundry_box = QtWidgets.QSpinBox(self.demand_params)
        self.demandvary_laundry_box.setGeometry(QtCore.QRect(390, 100, 51, 22))
        self.demandvary_laundry_box.setMaximum(100)
        self.demandvary_laundry_box.setSingleStep(5)
        self.demandvary_laundry_box.setProperty("value", 10)
        self.demandvary_laundry_box.setObjectName("demandvary_laundry_box")
        self.comdemand_units = QtWidgets.QComboBox(self.demand_params)
        self.comdemand_units.setGeometry(QtCore.QRect(340, 255, 81, 21))
        self.comdemand_units.setObjectName("comdemand_units")
        self.comdemand_units.addItem("")
        self.comdemand_units.addItem("")
        self.lidemand_units = QtWidgets.QComboBox(self.demand_params)
        self.lidemand_units.setGeometry(QtCore.QRect(340, 285, 81, 21))
        self.lidemand_units.setObjectName("lidemand_units")
        self.lidemand_units.addItem("")
        self.lidemand_units.addItem("")
        self.hidemand_units = QtWidgets.QComboBox(self.demand_params)
        self.hidemand_units.setGeometry(QtCore.QRect(340, 315, 81, 21))
        self.hidemand_units.setObjectName("hidemand_units")
        self.hidemand_units.addItem("")
        self.hidemand_units.addItem("")
        self.verticalLayout_9.addWidget(self.demand_params)
        self.demand_down_title = QtWidgets.QLabel(self.inputs_contents_5)
        self.demand_down_title.setEnabled(True)
        self.demand_down_title.setMinimumSize(QtCore.QSize(445, 16))
        self.demand_down_title.setMaximumSize(QtCore.QSize(16777215, 16))
        self.demand_down_title.setObjectName("demand_down_title")
        self.verticalLayout_9.addWidget(self.demand_down_title)
        self.dp_config_widget = QtWidgets.QWidget(self.inputs_contents_5)
        self.dp_config_widget.setMinimumSize(QtCore.QSize(0, 310))
        self.dp_config_widget.setObjectName("dp_config_widget")
        self.dagg_dp_noonpic_2 = QtWidgets.QLabel(self.dp_config_widget)
        self.dagg_dp_noonpic_2.setGeometry(QtCore.QRect(155, 175, 41, 41))
        self.dagg_dp_noonpic_2.setText("")
        self.dagg_dp_noonpic_2.setPixmap(QtGui.QPixmap("../../../../.designer/backup/noon-small.png"))
        self.dagg_dp_noonpic_2.setObjectName("dagg_dp_noonpic_2")
        self.dagg_dp_morningpic_2 = QtWidgets.QLabel(self.dp_config_widget)
        self.dagg_dp_morningpic_2.setEnabled(True)
        self.dagg_dp_morningpic_2.setGeometry(QtCore.QRect(55, 175, 41, 41))
        self.dagg_dp_morningpic_2.setText("")
        self.dagg_dp_morningpic_2.setPixmap(QtGui.QPixmap("../../../../.designer/backup/morning-small.png"))
        self.dagg_dp_morningpic_2.setObjectName("dagg_dp_morningpic_2")
        self.dagg_dp_nightpic_2 = QtWidgets.QLabel(self.dp_config_widget)
        self.dagg_dp_nightpic_2.setGeometry(QtCore.QRect(355, 175, 41, 41))
        self.dagg_dp_nightpic_2.setText("")
        self.dagg_dp_nightpic_2.setPixmap(QtGui.QPixmap("../../../../.designer/backup/night-small.png"))
        self.dagg_dp_nightpic_2.setObjectName("dagg_dp_nightpic_2")
        self.dp_kitchen_combo = QtWidgets.QComboBox(self.dp_config_widget)
        self.dp_kitchen_combo.setGeometry(QtCore.QRect(110, 40, 191, 16))
        self.dp_kitchen_combo.setObjectName("dp_kitchen_combo")
        self.dp_kitchen_combo.addItem("")
        self.dp_kitchen_combo.addItem("")
        self.dp_kitchen_combo.addItem("")
        self.dp_kitchen_combo.addItem("")
        self.dp_kitchen_combo.addItem("")
        self.demand_res_lbl = QtWidgets.QLabel(self.dp_config_widget)
        self.demand_res_lbl.setGeometry(QtCore.QRect(10, 10, 261, 16))
        self.demand_res_lbl.setObjectName("demand_res_lbl")
        self.dp_kitchen_lbl = QtWidgets.QLabel(self.dp_config_widget)
        self.dp_kitchen_lbl.setGeometry(QtCore.QRect(30, 40, 46, 13))
        self.dp_kitchen_lbl.setObjectName("dp_kitchen_lbl")
        self.dp_shower_lbl = QtWidgets.QLabel(self.dp_config_widget)
        self.dp_shower_lbl.setGeometry(QtCore.QRect(30, 70, 46, 13))
        self.dp_shower_lbl.setObjectName("dp_shower_lbl")
        self.dp_toilet_lbl = QtWidgets.QLabel(self.dp_config_widget)
        self.dp_toilet_lbl.setGeometry(QtCore.QRect(30, 100, 46, 13))
        self.dp_toilet_lbl.setObjectName("dp_toilet_lbl")
        self.dp_laundry_lbl = QtWidgets.QLabel(self.dp_config_widget)
        self.dp_laundry_lbl.setGeometry(QtCore.QRect(30, 130, 46, 13))
        self.dp_laundry_lbl.setObjectName("dp_laundry_lbl")
        self.dp_shower_combo = QtWidgets.QComboBox(self.dp_config_widget)
        self.dp_shower_combo.setGeometry(QtCore.QRect(110, 70, 191, 16))
        self.dp_shower_combo.setObjectName("dp_shower_combo")
        self.dp_shower_combo.addItem("")
        self.dp_shower_combo.addItem("")
        self.dp_shower_combo.addItem("")
        self.dp_shower_combo.addItem("")
        self.dp_shower_combo.addItem("")
        self.dp_toilet_combo = QtWidgets.QComboBox(self.dp_config_widget)
        self.dp_toilet_combo.setGeometry(QtCore.QRect(110, 100, 191, 16))
        self.dp_toilet_combo.setObjectName("dp_toilet_combo")
        self.dp_toilet_combo.addItem("")
        self.dp_toilet_combo.addItem("")
        self.dp_toilet_combo.addItem("")
        self.dp_toilet_combo.addItem("")
        self.dp_toilet_combo.addItem("")
        self.dp_laundry_combo = QtWidgets.QComboBox(self.dp_config_widget)
        self.dp_laundry_combo.setGeometry(QtCore.QRect(110, 130, 191, 16))
        self.dp_laundry_combo.setObjectName("dp_laundry_combo")
        self.dp_laundry_combo.addItem("")
        self.dp_laundry_combo.addItem("")
        self.dp_laundry_combo.addItem("")
        self.dp_laundry_combo.addItem("")
        self.dp_laundry_combo.addItem("")
        self.dp_irrigate_lbl = QtWidgets.QLabel(self.dp_config_widget)
        self.dp_irrigate_lbl.setGeometry(QtCore.QRect(30, 160, 46, 13))
        self.dp_irrigate_lbl.setObjectName("dp_irrigate_lbl")
        self.dp_irrigate_combo = QtWidgets.QComboBox(self.dp_config_widget)
        self.dp_irrigate_combo.setGeometry(QtCore.QRect(110, 160, 191, 16))
        self.dp_irrigate_combo.setObjectName("dp_irrigate_combo")
        self.dp_irrigate_combo.addItem("")
        self.dp_irrigate_combo.addItem("")
        self.dp_irrigate_combo.addItem("")
        self.dp_irrigate_combo.addItem("")
        self.dp_irrigate_combo.addItem("")
        self.demand_nonres_lbl = QtWidgets.QLabel(self.dp_config_widget)
        self.demand_nonres_lbl.setGeometry(QtCore.QRect(10, 190, 261, 16))
        self.demand_nonres_lbl.setObjectName("demand_nonres_lbl")
        self.dp_com_combo = QtWidgets.QComboBox(self.dp_config_widget)
        self.dp_com_combo.setGeometry(QtCore.QRect(110, 220, 191, 16))
        self.dp_com_combo.setObjectName("dp_com_combo")
        self.dp_com_combo.addItem("")
        self.dp_com_combo.addItem("")
        self.dp_com_combo.addItem("")
        self.dp_com_combo.addItem("")
        self.dp_com_combo.addItem("")
        self.dp_com_lbl = QtWidgets.QLabel(self.dp_config_widget)
        self.dp_com_lbl.setGeometry(QtCore.QRect(30, 220, 61, 16))
        self.dp_com_lbl.setObjectName("dp_com_lbl")
        self.dp_ind_combo = QtWidgets.QComboBox(self.dp_config_widget)
        self.dp_ind_combo.setGeometry(QtCore.QRect(110, 250, 191, 16))
        self.dp_ind_combo.setObjectName("dp_ind_combo")
        self.dp_ind_combo.addItem("")
        self.dp_ind_combo.addItem("")
        self.dp_ind_combo.addItem("")
        self.dp_ind_combo.addItem("")
        self.dp_ind_combo.addItem("")
        self.dp_ind_lbl = QtWidgets.QLabel(self.dp_config_widget)
        self.dp_ind_lbl.setGeometry(QtCore.QRect(30, 250, 46, 13))
        self.dp_ind_lbl.setObjectName("dp_ind_lbl")
        self.dp_kitchen_custom = QtWidgets.QPushButton(self.dp_config_widget)
        self.dp_kitchen_custom.setGeometry(QtCore.QRect(320, 38, 81, 21))
        self.dp_kitchen_custom.setObjectName("dp_kitchen_custom")
        self.dp_shower_custom = QtWidgets.QPushButton(self.dp_config_widget)
        self.dp_shower_custom.setGeometry(QtCore.QRect(320, 67, 81, 21))
        self.dp_shower_custom.setObjectName("dp_shower_custom")
        self.dp_toilet_custom = QtWidgets.QPushButton(self.dp_config_widget)
        self.dp_toilet_custom.setGeometry(QtCore.QRect(320, 97, 81, 21))
        self.dp_toilet_custom.setObjectName("dp_toilet_custom")
        self.dp_laundry_custom = QtWidgets.QPushButton(self.dp_config_widget)
        self.dp_laundry_custom.setGeometry(QtCore.QRect(320, 127, 81, 21))
        self.dp_laundry_custom.setObjectName("dp_laundry_custom")
        self.dp_irrigate_custom = QtWidgets.QPushButton(self.dp_config_widget)
        self.dp_irrigate_custom.setGeometry(QtCore.QRect(320, 157, 81, 21))
        self.dp_irrigate_custom.setObjectName("dp_irrigate_custom")
        self.dp_com_custom = QtWidgets.QPushButton(self.dp_config_widget)
        self.dp_com_custom.setGeometry(QtCore.QRect(320, 217, 81, 21))
        self.dp_com_custom.setObjectName("dp_com_custom")
        self.dp_ind_custom = QtWidgets.QPushButton(self.dp_config_widget)
        self.dp_ind_custom.setGeometry(QtCore.QRect(320, 247, 81, 21))
        self.dp_ind_custom.setObjectName("dp_ind_custom")
        self.dp_pubirr_combo = QtWidgets.QComboBox(self.dp_config_widget)
        self.dp_pubirr_combo.setGeometry(QtCore.QRect(110, 280, 191, 16))
        self.dp_pubirr_combo.setObjectName("dp_pubirr_combo")
        self.dp_pubirr_combo.addItem("")
        self.dp_pubirr_combo.addItem("")
        self.dp_pubirr_combo.addItem("")
        self.dp_pubirr_combo.addItem("")
        self.dp_pubirr_combo.addItem("")
        self.dp_pubirr_lbl = QtWidgets.QLabel(self.dp_config_widget)
        self.dp_pubirr_lbl.setGeometry(QtCore.QRect(30, 280, 46, 13))
        self.dp_pubirr_lbl.setObjectName("dp_pubirr_lbl")
        self.dp_pubirr_custom = QtWidgets.QPushButton(self.dp_config_widget)
        self.dp_pubirr_custom.setGeometry(QtCore.QRect(320, 277, 81, 21))
        self.dp_pubirr_custom.setObjectName("dp_pubirr_custom")
        self.verticalLayout_9.addWidget(self.dp_config_widget)
        self.ws_dynamics_title = QtWidgets.QLabel(self.inputs_contents_5)
        self.ws_dynamics_title.setEnabled(True)
        self.ws_dynamics_title.setMinimumSize(QtCore.QSize(445, 16))
        self.ws_dynamics_title.setMaximumSize(QtCore.QSize(16777215, 16))
        self.ws_dynamics_title.setObjectName("ws_dynamics_title")
        self.verticalLayout_9.addWidget(self.ws_dynamics_title)
        self.ws_dynamics_widget = QtWidgets.QWidget(self.inputs_contents_5)
        self.ws_dynamics_widget.setMinimumSize(QtCore.QSize(0, 540))
        self.ws_dynamics_widget.setObjectName("ws_dynamics_widget")
        self.wsd_seasonal_title = QtWidgets.QLabel(self.ws_dynamics_widget)
        self.wsd_seasonal_title.setGeometry(QtCore.QRect(10, 55, 261, 16))
        self.wsd_seasonal_title.setObjectName("wsd_seasonal_title")
        self.wsd_regionsupply_lbl = QtWidgets.QLabel(self.ws_dynamics_widget)
        self.wsd_regionsupply_lbl.setGeometry(QtCore.QRect(30, 510, 131, 16))
        self.wsd_regionsupply_lbl.setObjectName("wsd_regionsupply_lbl")
        self.wsd_altwater_title = QtWidgets.QLabel(self.ws_dynamics_widget)
        self.wsd_altwater_title.setGeometry(QtCore.QRect(10, 330, 261, 16))
        self.wsd_altwater_title.setObjectName("wsd_altwater_title")
        self.wsd_regionsupply_combo = QtWidgets.QComboBox(self.ws_dynamics_widget)
        self.wsd_regionsupply_combo.setGeometry(QtCore.QRect(160, 510, 241, 20))
        self.wsd_regionsupply_combo.setObjectName("wsd_regionsupply_combo")
        self.wsd_regionsupply_combo.addItem("")
        self.wsd_regionsupply_combo.addItem("")
        self.wsd_globalenduse_lbl = QtWidgets.QLabel(self.ws_dynamics_widget)
        self.wsd_globalenduse_lbl.setGeometry(QtCore.QRect(30, 390, 131, 16))
        self.wsd_globalenduse_lbl.setObjectName("wsd_globalenduse_lbl")
        self.wsd_init_store_lbl = QtWidgets.QLabel(self.ws_dynamics_widget)
        self.wsd_init_store_lbl.setGeometry(QtCore.QRect(30, 360, 191, 16))
        self.wsd_init_store_lbl.setObjectName("wsd_init_store_lbl")
        self.wsd_pubirri_lbl = QtWidgets.QLabel(self.ws_dynamics_widget)
        self.wsd_pubirri_lbl.setGeometry(QtCore.QRect(210, 390, 201, 16))
        self.wsd_pubirri_lbl.setObjectName("wsd_pubirri_lbl")
        self.wsd_privirri_lbl = QtWidgets.QLabel(self.ws_dynamics_widget)
        self.wsd_privirri_lbl.setGeometry(QtCore.QRect(210, 420, 201, 16))
        self.wsd_privirri_lbl.setObjectName("wsd_privirri_lbl")
        self.wsd_privinnocontact_lbl = QtWidgets.QLabel(self.ws_dynamics_widget)
        self.wsd_privinnocontact_lbl.setGeometry(QtCore.QRect(210, 450, 221, 16))
        self.wsd_privinnocontact_lbl.setObjectName("wsd_privinnocontact_lbl")
        self.wsd_privincontact_lbl = QtWidgets.QLabel(self.ws_dynamics_widget)
        self.wsd_privincontact_lbl.setGeometry(QtCore.QRect(210, 480, 221, 16))
        self.wsd_privincontact_lbl.setObjectName("wsd_privincontact_lbl")
        self.wsd_priority_pubirri = QtWidgets.QSpinBox(self.ws_dynamics_widget)
        self.wsd_priority_pubirri.setGeometry(QtCore.QRect(160, 390, 42, 16))
        self.wsd_priority_pubirri.setMinimum(0)
        self.wsd_priority_pubirri.setMaximum(4)
        self.wsd_priority_pubirri.setObjectName("wsd_priority_pubirri")
        self.wsd_priority_privirri = QtWidgets.QSpinBox(self.ws_dynamics_widget)
        self.wsd_priority_privirri.setGeometry(QtCore.QRect(160, 420, 42, 16))
        self.wsd_priority_privirri.setMaximum(4)
        self.wsd_priority_privirri.setProperty("value", 2)
        self.wsd_priority_privirri.setObjectName("wsd_priority_privirri")
        self.wsd_priority_privinnocontact = QtWidgets.QSpinBox(self.ws_dynamics_widget)
        self.wsd_priority_privinnocontact.setGeometry(QtCore.QRect(160, 450, 42, 16))
        self.wsd_priority_privinnocontact.setMaximum(4)
        self.wsd_priority_privinnocontact.setProperty("value", 3)
        self.wsd_priority_privinnocontact.setObjectName("wsd_priority_privinnocontact")
        self.wsd_priority_privincontact = QtWidgets.QSpinBox(self.ws_dynamics_widget)
        self.wsd_priority_privincontact.setGeometry(QtCore.QRect(160, 480, 42, 16))
        self.wsd_priority_privincontact.setMaximum(4)
        self.wsd_priority_privincontact.setProperty("value", 4)
        self.wsd_priority_privincontact.setObjectName("wsd_priority_privincontact")
        self.wsd_init_store_spin = QtWidgets.QDoubleSpinBox(self.ws_dynamics_widget)
        self.wsd_init_store_spin.setGeometry(QtCore.QRect(220, 360, 62, 16))
        self.wsd_init_store_spin.setDecimals(1)
        self.wsd_init_store_spin.setObjectName("wsd_init_store_spin")
        self.wsd_globalenduse_lbl2 = QtWidgets.QLabel(self.ws_dynamics_widget)
        self.wsd_globalenduse_lbl2.setGeometry(QtCore.QRect(30, 410, 101, 16))
        self.wsd_globalenduse_lbl2.setObjectName("wsd_globalenduse_lbl2")
        self.wsd_globalenduse_lbl3 = QtWidgets.QLabel(self.ws_dynamics_widget)
        self.wsd_globalenduse_lbl3.setGeometry(QtCore.QRect(30, 430, 101, 16))
        self.wsd_globalenduse_lbl3.setObjectName("wsd_globalenduse_lbl3")
        self.wsd_noirrigaterain_check = QtWidgets.QCheckBox(self.ws_dynamics_widget)
        self.wsd_noirrigaterain_check.setGeometry(QtCore.QRect(30, 276, 281, 17))
        self.wsd_noirrigaterain_check.setObjectName("wsd_noirrigaterain_check")
        self.wsd_irrigateresume_lbl = QtWidgets.QLabel(self.ws_dynamics_widget)
        self.wsd_irrigateresume_lbl.setGeometry(QtCore.QRect(50, 300, 291, 16))
        self.wsd_irrigateresume_lbl.setObjectName("wsd_irrigateresume_lbl")
        self.wsd_irrigateresume_spin = QtWidgets.QSpinBox(self.ws_dynamics_widget)
        self.wsd_irrigateresume_spin.setGeometry(QtCore.QRect(350, 300, 71, 16))
        self.wsd_irrigateresume_spin.setMaximum(72)
        self.wsd_irrigateresume_spin.setProperty("value", 24)
        self.wsd_irrigateresume_spin.setObjectName("wsd_irrigateresume_spin")
        self.wsd_scaledata_lbl = QtWidgets.QLabel(self.ws_dynamics_widget)
        self.wsd_scaledata_lbl.setGeometry(QtCore.QRect(30, 80, 141, 16))
        self.wsd_scaledata_lbl.setObjectName("wsd_scaledata_lbl")
        self.wsd_behaviour_title = QtWidgets.QLabel(self.ws_dynamics_widget)
        self.wsd_behaviour_title.setGeometry(QtCore.QRect(10, 250, 261, 16))
        self.wsd_behaviour_title.setObjectName("wsd_behaviour_title")
        self.wsd_scaledata_combo = QtWidgets.QComboBox(self.ws_dynamics_widget)
        self.wsd_scaledata_combo.setGeometry(QtCore.QRect(180, 80, 241, 21))
        self.wsd_scaledata_combo.setObjectName("wsd_scaledata_combo")
        self.wsd_scaledata_combo.addItem("")
        self.wsd_globalavg_lbl = QtWidgets.QLabel(self.ws_dynamics_widget)
        self.wsd_globalavg_lbl.setGeometry(QtCore.QRect(30, 140, 131, 16))
        self.wsd_globalavg_lbl.setObjectName("wsd_globalavg_lbl")
        self.wsd_globalavg_check = QtWidgets.QCheckBox(self.ws_dynamics_widget)
        self.wsd_globalavg_check.setGeometry(QtCore.QRect(270, 140, 121, 17))
        self.wsd_globalavg_check.setObjectName("wsd_globalavg_check")
        self.wsd_globalavg_box = QtWidgets.QLineEdit(self.ws_dynamics_widget)
        self.wsd_globalavg_box.setGeometry(QtCore.QRect(180, 140, 71, 20))
        self.wsd_globalavg_box.setObjectName("wsd_globalavg_box")
        self.wsd_numyears_lbl = QtWidgets.QLabel(self.ws_dynamics_widget)
        self.wsd_numyears_lbl.setGeometry(QtCore.QRect(30, 110, 121, 16))
        self.wsd_numyears_lbl.setObjectName("wsd_numyears_lbl")
        self.wsd_numyears_spin = QtWidgets.QSpinBox(self.ws_dynamics_widget)
        self.wsd_numyears_spin.setGeometry(QtCore.QRect(180, 110, 71, 21))
        self.wsd_numyears_spin.setMinimum(1)
        self.wsd_numyears_spin.setMaximum(10)
        self.wsd_numyears_spin.setProperty("value", 10)
        self.wsd_numyears_spin.setObjectName("wsd_numyears_spin")
        self.wsd_numyears_lbl2 = QtWidgets.QLabel(self.ws_dynamics_widget)
        self.wsd_numyears_lbl2.setGeometry(QtCore.QRect(270, 110, 171, 16))
        self.wsd_numyears_lbl2.setObjectName("wsd_numyears_lbl2")
        self.wsd_reducenres_check = QtWidgets.QCheckBox(self.ws_dynamics_widget)
        self.wsd_reducenres_check.setGeometry(QtCore.QRect(30, 195, 291, 17))
        self.wsd_reducenres_check.setObjectName("wsd_reducenres_check")
        self.wsd_increaseres_check = QtWidgets.QCheckBox(self.ws_dynamics_widget)
        self.wsd_increaseres_check.setGeometry(QtCore.QRect(30, 220, 271, 17))
        self.wsd_increaseres_check.setObjectName("wsd_increaseres_check")
        self.wsd_weekend_lbl = QtWidgets.QLabel(self.ws_dynamics_widget)
        self.wsd_weekend_lbl.setGeometry(QtCore.QRect(30, 170, 191, 16))
        self.wsd_weekend_lbl.setObjectName("wsd_weekend_lbl")
        self.wsd_reducenres_spin = QtWidgets.QDoubleSpinBox(self.ws_dynamics_widget)
        self.wsd_reducenres_spin.setGeometry(QtCore.QRect(300, 195, 51, 16))
        self.wsd_reducenres_spin.setSuffix("")
        self.wsd_reducenres_spin.setDecimals(1)
        self.wsd_reducenres_spin.setMaximum(1.0)
        self.wsd_reducenres_spin.setObjectName("wsd_reducenres_spin")
        self.wsd_increaseres_spin = QtWidgets.QDoubleSpinBox(self.ws_dynamics_widget)
        self.wsd_increaseres_spin.setGeometry(QtCore.QRect(300, 220, 51, 16))
        self.wsd_increaseres_spin.setDecimals(1)
        self.wsd_increaseres_spin.setMinimum(1.0)
        self.wsd_increaseres_spin.setMaximum(20.0)
        self.wsd_increaseres_spin.setObjectName("wsd_increaseres_spin")
        self.wsd_weekend_lbl_2 = QtWidgets.QLabel(self.ws_dynamics_widget)
        self.wsd_weekend_lbl_2.setGeometry(QtCore.QRect(360, 195, 81, 16))
        self.wsd_weekend_lbl_2.setObjectName("wsd_weekend_lbl_2")
        self.wsd_weekend_lbl_3 = QtWidgets.QLabel(self.ws_dynamics_widget)
        self.wsd_weekend_lbl_3.setGeometry(QtCore.QRect(360, 220, 81, 16))
        self.wsd_weekend_lbl_3.setObjectName("wsd_weekend_lbl_3")
        self.verticalLayout_9.addWidget(self.ws_dynamics_widget)
        self.wef_lbl = QtWidgets.QLabel(self.inputs_contents_5)
        self.wef_lbl.setMinimumSize(QtCore.QSize(0, 16))
        self.wef_lbl.setMaximumSize(QtCore.QSize(16777215, 16))
        self.wef_lbl.setObjectName("wef_lbl")
        self.verticalLayout_9.addWidget(self.wef_lbl)
        self.wef_widget = QtWidgets.QWidget(self.inputs_contents_5)
        self.wef_widget.setMinimumSize(QtCore.QSize(0, 330))
        self.wef_widget.setObjectName("wef_widget")
        self.WEF_rating_system_lbl = QtWidgets.QLabel(self.wef_widget)
        self.WEF_rating_system_lbl.setGeometry(QtCore.QRect(30, 90, 91, 16))
        self.WEF_rating_system_lbl.setObjectName("WEF_rating_system_lbl")
        self.WEF_loc_house_check = QtWidgets.QCheckBox(self.wef_widget)
        self.WEF_loc_house_check.setGeometry(QtCore.QRect(100, 120, 61, 17))
        self.WEF_loc_house_check.setObjectName("WEF_loc_house_check")
        self.WEF_loc_nonres_check = QtWidgets.QCheckBox(self.wef_widget)
        self.WEF_loc_nonres_check.setEnabled(False)
        self.WEF_loc_nonres_check.setGeometry(QtCore.QRect(260, 120, 161, 17))
        self.WEF_loc_nonres_check.setObjectName("WEF_loc_nonres_check")
        self.WEF_rating_system_combo = QtWidgets.QComboBox(self.wef_widget)
        self.WEF_rating_system_combo.setGeometry(QtCore.QRect(120, 86, 201, 21))
        self.WEF_rating_system_combo.setObjectName("WEF_rating_system_combo")
        self.WEF_rating_system_combo.addItem("")
        self.WEF_rating_system_combo.addItem("")
        self.WED_loc_lbl = QtWidgets.QLabel(self.wef_widget)
        self.WED_loc_lbl.setGeometry(QtCore.QRect(30, 120, 61, 16))
        self.WED_loc_lbl.setObjectName("WED_loc_lbl")
        self.WEF_loc_apart_check = QtWidgets.QCheckBox(self.wef_widget)
        self.WEF_loc_apart_check.setEnabled(True)
        self.WEF_loc_apart_check.setGeometry(QtCore.QRect(170, 120, 91, 17))
        self.WEF_loc_apart_check.setObjectName("WEF_loc_apart_check")
        self.WED_loc_lbl2 = QtWidgets.QLabel(self.wef_widget)
        self.WED_loc_lbl2.setGeometry(QtCore.QRect(30, 150, 311, 16))
        self.WED_loc_lbl2.setObjectName("WED_loc_lbl2")
        self.WEF_constant_radio = QtWidgets.QRadioButton(self.wef_widget)
        self.WEF_constant_radio.setGeometry(QtCore.QRect(40, 175, 101, 17))
        self.WEF_constant_radio.setObjectName("WEF_constant_radio")
        self.WEF_distribution_radio = QtWidgets.QRadioButton(self.wef_widget)
        self.WEF_distribution_radio.setGeometry(QtCore.QRect(40, 225, 111, 17))
        self.WEF_distribution_radio.setObjectName("WEF_distribution_radio")
        self.WEF_constant_lbl = QtWidgets.QLabel(self.wef_widget)
        self.WEF_constant_lbl.setGeometry(QtCore.QRect(70, 200, 101, 16))
        self.WEF_constant_lbl.setObjectName("WEF_constant_lbl")
        self.WEF_constant_combo = QtWidgets.QComboBox(self.wef_widget)
        self.WEF_constant_combo.setGeometry(QtCore.QRect(230, 196, 71, 20))
        self.WEF_constant_combo.setObjectName("WEF_constant_combo")
        self.WEF_constant_combo.addItem("")
        self.WEF_constant_combo.addItem("")
        self.WEF_constant_combo.addItem("")
        self.WEF_constant_combo.addItem("")
        self.WEF_constant_combo.addItem("")
        self.WEF_constant_combo.addItem("")
        self.WEF_consider = QtWidgets.QCheckBox(self.wef_widget)
        self.WEF_consider.setGeometry(QtCore.QRect(10, 60, 351, 17))
        self.WEF_consider.setObjectName("WEF_consider")
        self.WEF_distribution_lbl2 = QtWidgets.QLabel(self.wef_widget)
        self.WEF_distribution_lbl2.setGeometry(QtCore.QRect(70, 250, 151, 16))
        self.WEF_distribution_lbl2.setObjectName("WEF_distribution_lbl2")
        self.WEF_distribution_combo = QtWidgets.QComboBox(self.wef_widget)
        self.WEF_distribution_combo.setGeometry(QtCore.QRect(230, 246, 71, 20))
        self.WEF_distribution_combo.setObjectName("WEF_distribution_combo")
        self.WEF_distribution_combo.addItem("")
        self.WEF_distribution_combo.addItem("")
        self.WEF_distribution_combo.addItem("")
        self.WEF_distribution_combo.addItem("")
        self.WEF_distribution_combo.addItem("")
        self.WEF_distribution_combo.addItem("")
        self.WEF_distribution_lbl3 = QtWidgets.QLabel(self.wef_widget)
        self.WEF_distribution_lbl3.setGeometry(QtCore.QRect(70, 275, 161, 16))
        self.WEF_distribution_lbl3.setObjectName("WEF_distribution_lbl3")
        self.WEF_distribution_select = QtWidgets.QComboBox(self.wef_widget)
        self.WEF_distribution_select.setGeometry(QtCore.QRect(230, 275, 201, 21))
        self.WEF_distribution_select.setObjectName("WEF_distribution_select")
        self.WEF_distribution_select.addItem("")
        self.WEF_distribution_select.addItem("")
        self.WEF_distribution_select.addItem("")
        self.WEF_distribution_select.addItem("")
        self.WEF_distribution_check = QtWidgets.QCheckBox(self.wef_widget)
        self.WEF_distribution_check.setEnabled(True)
        self.WEF_distribution_check.setGeometry(QtCore.QRect(70, 300, 261, 17))
        self.WEF_distribution_check.setObjectName("WEF_distribution_check")
        self.LOSS_status = QtWidgets.QCheckBox(self.wef_widget)
        self.LOSS_status.setGeometry(QtCore.QRect(10, 10, 351, 17))
        self.LOSS_status.setObjectName("LOSS_status")
        self.LOSS_lbl = QtWidgets.QLabel(self.wef_widget)
        self.LOSS_lbl.setGeometry(QtCore.QRect(30, 35, 241, 16))
        self.LOSS_lbl.setObjectName("LOSS_lbl")
        self.LOSS_spin = QtWidgets.QDoubleSpinBox(self.wef_widget)
        self.LOSS_spin.setGeometry(QtCore.QRect(280, 35, 62, 16))
        self.LOSS_spin.setDecimals(1)
        self.LOSS_spin.setMaximum(100.0)
        self.LOSS_spin.setProperty("value", 10.0)
        self.LOSS_spin.setObjectName("LOSS_spin")
        self.verticalLayout_9.addWidget(self.wef_widget)
        self.verticalLayout_15.addLayout(self.verticalLayout_9)
        spacerItem38 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_15.addItem(spacerItem38)
        self.inputs_scrollArea_5.setWidget(self.inputs_contents_5)
        self.verticalLayout_18.addWidget(self.inputs_scrollArea_5)
        self.pollution_check.addTab(self.tab, "")
        self.connectivity_tab = QtWidgets.QWidget()
        self.connectivity_tab.setObjectName("connectivity_tab")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.connectivity_tab)
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.checkBox = QtWidgets.QCheckBox(self.connectivity_tab)
        self.checkBox.setObjectName("checkBox")
        self.verticalLayout_4.addWidget(self.checkBox)
        self.inputs_scrollArea_4 = QtWidgets.QScrollArea(self.connectivity_tab)
        self.inputs_scrollArea_4.setWidgetResizable(True)
        self.inputs_scrollArea_4.setObjectName("inputs_scrollArea_4")
        self.inputs_contents_4 = QtWidgets.QWidget()
        self.inputs_contents_4.setGeometry(QtCore.QRect(0, 0, 554, 370))
        self.inputs_contents_4.setObjectName("inputs_contents_4")
        self.verticalLayout_23 = QtWidgets.QVBoxLayout(self.inputs_contents_4)
        self.verticalLayout_23.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_23.setObjectName("verticalLayout_23")
        self.verticalLayout_22 = QtWidgets.QVBoxLayout()
        self.verticalLayout_22.setContentsMargins(9, 9, 9, 9)
        self.verticalLayout_22.setObjectName("verticalLayout_22")
        self.park_title = QtWidgets.QLabel(self.inputs_contents_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(13)
        sizePolicy.setHeightForWidth(self.park_title.sizePolicy().hasHeightForWidth())
        self.park_title.setSizePolicy(sizePolicy)
        self.park_title.setMinimumSize(QtCore.QSize(0, 13))
        self.park_title.setMaximumSize(QtCore.QSize(16777215, 13))
        self.park_title.setObjectName("park_title")
        self.verticalLayout_22.addWidget(self.park_title)
        self.verticalLayout_23.addLayout(self.verticalLayout_22)
        spacerItem39 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_23.addItem(spacerItem39)
        self.inputs_scrollArea_4.setWidget(self.inputs_contents_4)
        self.verticalLayout_4.addWidget(self.inputs_scrollArea_4)
        self.pollution_check.addTab(self.connectivity_tab, "")
        self.horizontalLayout_6.addWidget(self.pollution_check)
        self.verticalLayout.addWidget(self.module_widget)
        self.footer = QtWidgets.QWidget(Urbplanbb_Dialog)
        self.footer.setMinimumSize(QtCore.QSize(0, 40))
        self.footer.setMaximumSize(QtCore.QSize(16777215, 40))
        self.footer.setObjectName("footer")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.footer)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.footer_lbl = QtWidgets.QLabel(self.footer)
        self.footer_lbl.setObjectName("footer_lbl")
        self.horizontalLayout.addWidget(self.footer_lbl)
        self.buttonBox = QtWidgets.QDialogButtonBox(self.footer)
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox.setObjectName("buttonBox")
        self.horizontalLayout.addWidget(self.buttonBox)
        self.help_button = QtWidgets.QPushButton(self.footer)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icons/Help-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.help_button.setIcon(icon)
        self.help_button.setObjectName("help_button")
        self.horizontalLayout.addWidget(self.help_button)
        self.verticalLayout.addWidget(self.footer)

        self.retranslateUi(Urbplanbb_Dialog)
        self.pollution_check.setCurrentIndex(0)
        self.buttonBox.accepted.connect(Urbplanbb_Dialog.accept)
        self.buttonBox.rejected.connect(Urbplanbb_Dialog.reject)
        QtCore.QMetaObject.connectSlotsByName(Urbplanbb_Dialog)
        Urbplanbb_Dialog.setTabOrder(self.year_combo, self.same_params)
        Urbplanbb_Dialog.setTabOrder(self.same_params, self.description)
        Urbplanbb_Dialog.setTabOrder(self.description, self.buttonBox)
        Urbplanbb_Dialog.setTabOrder(self.buttonBox, self.help_button)

    def retranslateUi(self, Urbplanbb_Dialog):
        _translate = QtCore.QCoreApplication.translate
        Urbplanbb_Dialog.setWindowTitle(_translate("Urbplanbb_Dialog", "Urban Planning Module"))
        self.title.setText(_translate("Urbplanbb_Dialog", "Spatial Mapping"))
        self.subtitle.setText(_translate("Urbplanbb_Dialog", "Map out various geographic, planning, envrionmental, socio-demographic and technical aspects of the current system under investigation."))
        self.sidebar_title.setText(_translate("Urbplanbb_Dialog", "<html><head/><body><p><span style=\" font-weight:600;\">SCENARIO TIME STEP</span></p></body></html>"))
        self.year_combo.setItemText(0, _translate("Urbplanbb_Dialog", "<startyear>"))
        self.autofillButton.setText(_translate("Urbplanbb_Dialog", "Autofill from previous"))
        self.same_params.setText(_translate("Urbplanbb_Dialog", "Same Parameters"))
        self.description.setHtml(_translate("Urbplanbb_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">This module enables the mapping and setting of planning constraints, land surface cover estimation and investigating trends in spatial water consumption and urban water pollution among others.</span></p></body></html>"))
        self.planning_check.setText(_translate("Urbplanbb_Dialog", "Define specific opportunities and encumbrances within the urban plan"))
        self.label_14.setText(_translate("Urbplanbb_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">PLANNING OVERLAYS</span></p></body></html>"))
        self.label_15.setText(_translate("Urbplanbb_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">OPEN SPACE RESTRICTIONS &amp; ALLOWANCS</span></p></body></html>"))
        self.pg_usable_prohibit.setText(_translate("Urbplanbb_Dialog", "Restrict Park Space Usage for Decentralised Water Infrastructure"))
        self.ref_limit_check.setText(_translate("Urbplanbb_Dialog", "Limit use of Reserve and Floodways exclusively to stormwater management"))
        self.pollution_check.setTabText(self.pollution_check.indexOf(self.geometry_tab), _translate("Urbplanbb_Dialog", "Planning"))
        self.checkBox_2.setText(_translate("Urbplanbb_Dialog", "Determine land surface covers based on the urban form"))
        self.mc_res_title.setText(_translate("Urbplanbb_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">RESIDENTIAL DISTRICTS SURFACE COVER</span></p></body></html>"))
        self.lc_respave_lbl_2.setText(_translate("Urbplanbb_Dialog", "Set land covers for residential neighbourhoods including the type of paving, irrigation requirements and tree coverage"))
        self.lc_restrees_lbl.setText(_translate("Urbplanbb_Dialog", "Lot Tree Coverage:"))
        self.lc_respave_lbl.setText(_translate("Urbplanbb_Dialog", "Paved Surfaces:"))
        self.lc_resirri_lbl.setText(_translate("Urbplanbb_Dialog", "Irrigated Surfaces:"))
        self.lc_resirri_garden.setText(_translate("Urbplanbb_Dialog", "Only Garden"))
        self.lc_respave_combo.setItemText(0, _translate("Urbplanbb_Dialog", "Asphalt"))
        self.lc_respave_combo.setItemText(1, _translate("Urbplanbb_Dialog", "Concrete"))
        self.lc_respave_combo.setItemText(2, _translate("Urbplanbb_Dialog", "Gravel/Compacted Dirt"))
        self.lc_resirri_allperv.setText(_translate("Urbplanbb_Dialog", "All Pervious"))
        self.lc_restrees_box.setText(_translate("Urbplanbb_Dialog", "100%"))
        self.mc_nres_title.setText(_translate("Urbplanbb_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">NON-RESIDENTIAL DISTRICTS SURFACE COVER</span></p></body></html>"))
        self.lc_respave_lbl_4.setText(_translate("Urbplanbb_Dialog", "Define surface covers for non-residential estates including tree coverage and locations."))
        self.mc_nrestrees_lbl.setText(_translate("Urbplanbb_Dialog", "Tree Coverage:"))
        self.lc_restrees_box_2.setText(_translate("Urbplanbb_Dialog", "100%"))
        self.mc_nrestreeloc_lbl.setText(_translate("Urbplanbb_Dialog", "Tree Locations:"))
        self.mc_nrestreeloc_checkon.setText(_translate("Urbplanbb_Dialog", "On-site"))
        self.mc_nreshard_lbl.setText(_translate("Urbplanbb_Dialog", "Hard Landscaping:"))
        self.mc_nreshard_combo.setItemText(0, _translate("Urbplanbb_Dialog", "Asphalt"))
        self.mc_nreshard_combo.setItemText(1, _translate("Urbplanbb_Dialog", "Concrete"))
        self.mc_nreshard_combo.setItemText(2, _translate("Urbplanbb_Dialog", "Gravel/Compacted Dirt"))
        self.mc_nresbay_lbl.setText(_translate("Urbplanbb_Dialog", "Loading Bay Surface:"))
        self.mc_nresbay_combo.setItemText(0, _translate("Urbplanbb_Dialog", "Asphalt"))
        self.mc_nresbay_combo.setItemText(1, _translate("Urbplanbb_Dialog", "Concrete"))
        self.mc_nresbay_combo.setItemText(2, _translate("Urbplanbb_Dialog", "Gravel/Compacted Dirt"))
        self.mc_nrespark_lbl.setText(_translate("Urbplanbb_Dialog", "Parking Lot Surface:"))
        self.mc_nrespark_combo.setItemText(0, _translate("Urbplanbb_Dialog", "Asphalt"))
        self.mc_nrespark_combo.setItemText(1, _translate("Urbplanbb_Dialog", "Concrete"))
        self.mc_nrespark_combo.setItemText(2, _translate("Urbplanbb_Dialog", "Gravel/Compacted Dirt"))
        self.mc_nrestreeloc_checkoff.setText(_translate("Urbplanbb_Dialog", "Frontage"))
        self.mc_roads_title.setText(_translate("Urbplanbb_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">ROAD RESERVES SURFACE COVER</span></p></body></html>"))
        self.lc_respave_lbl_5.setText(_translate("Urbplanbb_Dialog", "Define surface cover for paved roads, highways and footpaths as well as tree cover along reserves."))
        self.mc_rdtreedens_lbl.setText(_translate("Urbplanbb_Dialog", "Tree Cover Density:"))
        self.mc_rdfpath_lbl.setText(_translate("Urbplanbb_Dialog", "Footpath:"))
        self.mc_rdtreedens_lbl2.setText(_translate("Urbplanbb_Dialog", "trees per 100m road length"))
        self.mc_rdhwy_lbl.setText(_translate("Urbplanbb_Dialog", "Highways:"))
        self.mc_rdfpath_combo.setItemText(0, _translate("Urbplanbb_Dialog", "Asphalt"))
        self.mc_rdfpath_combo.setItemText(1, _translate("Urbplanbb_Dialog", "Concrete"))
        self.mc_rdfpath_combo.setItemText(2, _translate("Urbplanbb_Dialog", "Gravel/Compacted Dirt"))
        self.mc_rdhwy_combo.setItemText(0, _translate("Urbplanbb_Dialog", "Asphalt"))
        self.mc_rdhwy_combo.setItemText(1, _translate("Urbplanbb_Dialog", "Concrete"))
        self.mc_rdhwy_combo.setItemText(2, _translate("Urbplanbb_Dialog", "Gravel/Compacted Dirt"))
        self.mc_rdloc_lbl.setText(_translate("Urbplanbb_Dialog", "Streets/Arterials"))
        self.mc_rdloc_combo.setItemText(0, _translate("Urbplanbb_Dialog", "Asphalt"))
        self.mc_rdloc_combo.setItemText(1, _translate("Urbplanbb_Dialog", "Concrete"))
        self.mc_rdloc_combo.setItemText(2, _translate("Urbplanbb_Dialog", "Gravel/Compacted Dirt"))
        self.mc_open_title.setText(_translate("Urbplanbb_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">OPEN SPACES AREAS SURFACE COVER</span></p></body></html>"))
        self.lc_respave_lbl_6.setText(_translate("Urbplanbb_Dialog", "Define surface cover for open space areas including tree cover in parks and reserves."))
        self.mc_reftrees_lbl2.setText(_translate("Urbplanbb_Dialog", "trees per 100sqm. of reserve"))
        self.mc_reftrees_lbl.setText(_translate("Urbplanbb_Dialog", "Reserves Tree Cover:"))
        self.mc_opengrey_lbl.setText(_translate("Urbplanbb_Dialog", "Paved Areas:"))
        self.mc_opentrees_lbl2.setText(_translate("Urbplanbb_Dialog", "trees per 100sqm. of open space"))
        self.mc_opentrees_lbl_2.setText(_translate("Urbplanbb_Dialog", "Park Tree Cover:"))
        self.mc_opengrey_combo.setItemText(0, _translate("Urbplanbb_Dialog", "Asphalt"))
        self.mc_opengrey_combo.setItemText(1, _translate("Urbplanbb_Dialog", "Concrete"))
        self.mc_opengrey_combo.setItemText(2, _translate("Urbplanbb_Dialog", "Gravel/Compacted Dirt"))
        self.mc_vegetation_title.setText(_translate("Urbplanbb_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">VEGETATION TYPE AND SPATIAL DISTRIBUTION</span></p></body></html>"))
        self.lc_respave_lbl_7.setText(_translate("Urbplanbb_Dialog", "Further options for describing vegetation cover in the case study region."))
        self.mc_treetype_lbl.setText(_translate("Urbplanbb_Dialog", "Default Tree Shape:"))
        self.mc_treetype_combo.setItemText(0, _translate("Urbplanbb_Dialog", "Round with Broad Leaves"))
        self.mc_treetype_combo.setItemText(1, _translate("Urbplanbb_Dialog", "Round with Needle Leaves"))
        self.mc_treetype_combo.setItemText(2, _translate("Urbplanbb_Dialog", "Tall with Broad Leaves"))
        self.mc_treetype_combo.setItemText(3, _translate("Urbplanbb_Dialog", "Tall with Needle Leaves"))
        self.mc_treetype_combo.setItemText(4, _translate("Urbplanbb_Dialog", "Open with Broad Leaves"))
        self.mc_treetype_combo.setItemText(5, _translate("Urbplanbb_Dialog", "Open with Needle Leaves"))
        self.pollution_check.setTabText(self.pollution_check.indexOf(self.geography_tab), _translate("Urbplanbb_Dialog", "Land Cover"))
        self.checkBox_5.setText(_translate("Urbplanbb_Dialog", "Determine water consumption and wastewater generation based on urban form and demographics"))
        self.arterial_info_lbl.setText(_translate("Urbplanbb_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">WATER DEMANDS &amp; WASTEWATER GENERATION</span></p></body></html>"))
        self.freq_lbl_2.setWhatsThis(_translate("Urbplanbb_Dialog", "How many times does the household/person use the facility per day?\n"
"Kitchen = Household\n"
"Shower = Person\n"
"Toilet = Person\n"
"Laundry = Household"))
        self.freq_lbl_2.setText(_translate("Urbplanbb_Dialog", "Customise water usage behaviour for indoor and outdoor uses."))
        self.demand_laundry_lbl.setWhatsThis(_translate("Urbplanbb_Dialog", "Laundry = washing machine water use calculated based on number of uses per day (if less than one wash per day convert value from weekly washes to daily)."))
        self.demand_laundry_lbl.setText(_translate("Urbplanbb_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-weight:600;\">Laundry</span></p></body></html>"))
        self.ffp_lbl.setWhatsThis(_translate("Urbplanbb_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Select the minimum water quality requirement to source from when meeting demand (default: PO).</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">PO = Potable Water</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">NP = Non-potable Water</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">RW = Rainwater</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">SW = Stormwater</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">GW = Greywater</span></p></body></html>"))
        self.ffp_lbl.setText(_translate("Urbplanbb_Dialog", "Minimum Fit-for-purpose Source"))
        self.dur_lbl.setWhatsThis(_translate("Urbplanbb_Dialog", "How long is each facility used for? (Does not apply to toilets or laundry as the usage amount is based on frequency)."))
        self.dur_lbl.setText(_translate("Urbplanbb_Dialog", "Avg. Duration of use [mins]"))
        self.freq_lbl.setWhatsThis(_translate("Urbplanbb_Dialog", "How many times does the household/person use the facility per day?\n"
"Kitchen = Household\n"
"Shower = Person\n"
"Toilet = Person\n"
"Laundry = Household"))
        self.freq_lbl.setText(_translate("Urbplanbb_Dialog", "Avg. Frequency of use  [per day]"))
        self.ffp_kitchen_combo.setItemText(0, _translate("Urbplanbb_Dialog", "PO"))
        self.ffp_kitchen_combo.setItemText(1, _translate("Urbplanbb_Dialog", "NP"))
        self.ffp_kitchen_combo.setItemText(2, _translate("Urbplanbb_Dialog", "RW"))
        self.ffp_kitchen_combo.setItemText(3, _translate("Urbplanbb_Dialog", "SW"))
        self.ffp_kitchen_combo.setItemText(4, _translate("Urbplanbb_Dialog", "GW"))
        self.demand_shower_lbl.setWhatsThis(_translate("Urbplanbb_Dialog", "Shower = bathroom shower, not including bathtub. Shower head water usage taken from AS6400 unless otherwise customized."))
        self.demand_shower_lbl.setText(_translate("Urbplanbb_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-weight:600;\">Shower</span></p></body></html>"))
        self.ffp_shower_combo.setItemText(0, _translate("Urbplanbb_Dialog", "PO"))
        self.ffp_shower_combo.setItemText(1, _translate("Urbplanbb_Dialog", "NP"))
        self.ffp_shower_combo.setItemText(2, _translate("Urbplanbb_Dialog", "RW"))
        self.ffp_shower_combo.setItemText(3, _translate("Urbplanbb_Dialog", "SW"))
        self.ffp_shower_combo.setItemText(4, _translate("Urbplanbb_Dialog", "GW"))
        self.t2t_house_lbl.setWhatsThis(_translate("Urbplanbb_Dialog", "Estimate of the annual irrigation volume per hectare"))
        self.t2t_house_lbl.setText(_translate("Urbplanbb_Dialog", "Approximate Annual Irrigation Volume [ML/ha/year]"))
        self.ffp_toilet_combo.setItemText(0, _translate("Urbplanbb_Dialog", "PO"))
        self.ffp_toilet_combo.setItemText(1, _translate("Urbplanbb_Dialog", "NP"))
        self.ffp_toilet_combo.setItemText(2, _translate("Urbplanbb_Dialog", "RW"))
        self.ffp_toilet_combo.setItemText(3, _translate("Urbplanbb_Dialog", "SW"))
        self.ffp_toilet_combo.setItemText(4, _translate("Urbplanbb_Dialog", "GW"))
        self.ffp_laundry_combo.setItemText(0, _translate("Urbplanbb_Dialog", "PO"))
        self.ffp_laundry_combo.setItemText(1, _translate("Urbplanbb_Dialog", "NP"))
        self.ffp_laundry_combo.setItemText(2, _translate("Urbplanbb_Dialog", "RW"))
        self.ffp_laundry_combo.setItemText(3, _translate("Urbplanbb_Dialog", "SW"))
        self.ffp_laundry_combo.setItemText(4, _translate("Urbplanbb_Dialog", "GW"))
        self.demand_toilet_lbl.setWhatsThis(_translate("Urbplanbb_Dialog", "Toilet = flushes made per person per day determines total water use. Dual-flush toilets/waterless toilets and urine-separating toilets are customized under technologies."))
        self.demand_toilet_lbl.setText(_translate("Urbplanbb_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-weight:600;\">Toilet</span></p></body></html>"))
        self.ffp_garden_combo.setItemText(0, _translate("Urbplanbb_Dialog", "PO"))
        self.ffp_garden_combo.setItemText(1, _translate("Urbplanbb_Dialog", "NP"))
        self.ffp_garden_combo.setItemText(2, _translate("Urbplanbb_Dialog", "RW"))
        self.ffp_garden_combo.setItemText(3, _translate("Urbplanbb_Dialog", "SW"))
        self.ffp_garden_combo.setItemText(4, _translate("Urbplanbb_Dialog", "GW"))
        self.ffp_garden_lbl.setWhatsThis(_translate("Urbplanbb_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Select the minimum water quality requirement to source from when meeting demand.</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">PO = Potable Water</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">NP = Non-potable Water</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">RW = Rainwater</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">SW = Stormwater</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">GW = Greywater</span></p></body></html>"))
        self.ffp_garden_lbl.setText(_translate("Urbplanbb_Dialog", "Minimum Irrigation Water Quality"))
        self.demandvary_lbl.setWhatsThis(_translate("Urbplanbb_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">A stochastic variability used to scale the daily household demand. Will be scaled according to the number of households in the block. Specify a percent, demand value will be scaled according to a random number drawin within this range.</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-style:italic;\">e.g. +/- 5% will see demand being multiplied by a number between 0.95 and 1.05.</span></p></body></html>"))
        self.demandvary_lbl.setText(_translate("Urbplanbb_Dialog", "Daily demand variation [+/- %]"))
        self.demand_kitchen_lbl.setWhatsThis(_translate("Urbplanbb_Dialog", "Kitchen = kitchen tap, water for cooking and washing up. Demand is calculated from both tap and partly from dishwasher using values from AS6400 unless otherwise customized."))
        self.demand_kitchen_lbl.setText(_translate("Urbplanbb_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-weight:600;\">Kitchen</span></p></body></html>"))
        self.res_demand_title_2.setText(_translate("Urbplanbb_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-weight:600; font-style:italic;\">Residential Water Use</span></p></body></html>"))
        self.res_demand_title_3.setText(_translate("Urbplanbb_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-weight:600; font-style:italic;\">Non-Residential Water Use</span></p></body></html>"))
        self.lidemand_spin.setSuffix(_translate("Urbplanbb_Dialog", "%"))
        self.lidemand_lbl.setText(_translate("Urbplanbb_Dialog", "Light Industrial Water Demand"))
        self.comdemand_spin.setSuffix(_translate("Urbplanbb_Dialog", "%"))
        self.comdemand_lbl.setText(_translate("Urbplanbb_Dialog", "Commercial Water Demand"))
        self.hidemand_spin.setSuffix(_translate("Urbplanbb_Dialog", "%"))
        self.lidemand_pm.setText(_translate("Urbplanbb_Dialog", "+/-"))
        self.comdemand_pm.setText(_translate("Urbplanbb_Dialog", "+/-"))
        self.hidemand_lbl.setText(_translate("Urbplanbb_Dialog", "Heavy Industrial Water Demand"))
        self.hidemand_pm.setText(_translate("Urbplanbb_Dialog", "+/-"))
        self.public_irr_title.setText(_translate("Urbplanbb_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-weight:600; font-style:italic;\">Public Open Space Irrigation</span></p></body></html>"))
        self.public_irr_lbl2.setWhatsThis(_translate("Urbplanbb_Dialog", "Based on Aquacycle\'s calibration parameter. If soil moisture drops below this value, irrigation will occur to refill the soil moisture store. Specify as a proportion (e.g. 0.5 for 50%)"))
        self.public_irr_lbl2.setText(_translate("Urbplanbb_Dialog", "Select Open Spaces to Irrigate:"))
        self.public_irr_wq.setItemText(0, _translate("Urbplanbb_Dialog", "PO"))
        self.public_irr_wq.setItemText(1, _translate("Urbplanbb_Dialog", "NP"))
        self.public_irr_wq.setItemText(2, _translate("Urbplanbb_Dialog", "RW"))
        self.public_irr_wq.setItemText(3, _translate("Urbplanbb_Dialog", "SW"))
        self.public_irr_wq.setItemText(4, _translate("Urbplanbb_Dialog", "GW"))
        self.public_irr_pg.setText(_translate("Urbplanbb_Dialog", "Parks, Gardens and Green Landmarks"))
        self.public_irr_lbl.setWhatsThis(_translate("Urbplanbb_Dialog", "Based on Aquacycle\'s calibration parameter. If soil moisture drops below this value, irrigation will occur to refill the soil moisture store. Specify as a proportion (e.g. 0.5 for 50%)"))
        self.public_irr_lbl.setText(_translate("Urbplanbb_Dialog", "Approximate Annual Irrigation Volume [ML/ha/year]"))
        self.public_irr_ref.setText(_translate("Urbplanbb_Dialog", "Reserves & Floodways"))
        self.public_irr_lbl3.setWhatsThis(_translate("Urbplanbb_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Select the minimum water quality requirement to source from when meeting demand.</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">PO = Potable Water</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">NP = Non-potable Water</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">RW = Rainwater</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">SW = Stormwater</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">GW = Greywater</span></p></body></html>"))
        self.public_irr_lbl3.setText(_translate("Urbplanbb_Dialog", "Minimum Public Irrigation Water Quality"))
        self.public_irr_nonres.setText(_translate("Urbplanbb_Dialog", "Non-residential Landscaping"))
        self.demandvary_kitchen_box.setSuffix(_translate("Urbplanbb_Dialog", "%"))
        self.demandvary_shower_box.setSuffix(_translate("Urbplanbb_Dialog", "%"))
        self.demandvary_toilet_box.setSuffix(_translate("Urbplanbb_Dialog", "%"))
        self.demandvary_laundry_box.setSuffix(_translate("Urbplanbb_Dialog", "%"))
        self.comdemand_units.setItemText(0, _translate("Urbplanbb_Dialog", "L/sqm/day"))
        self.comdemand_units.setItemText(1, _translate("Urbplanbb_Dialog", "L/cap/day"))
        self.lidemand_units.setItemText(0, _translate("Urbplanbb_Dialog", "L/sqm/day"))
        self.lidemand_units.setItemText(1, _translate("Urbplanbb_Dialog", "L/cap/day"))
        self.hidemand_units.setItemText(0, _translate("Urbplanbb_Dialog", "L/sqm/day"))
        self.hidemand_units.setItemText(1, _translate("Urbplanbb_Dialog", "L/cap/day"))
        self.demand_down_title.setText(_translate("Urbplanbb_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">TEMPORAL PATTERNS</span></p></body></html>"))
        self.dagg_dp_noonpic_2.setToolTip(_translate("Urbplanbb_Dialog", "approx. 6am to 12pm"))
        self.dagg_dp_noonpic_2.setWhatsThis(_translate("Urbplanbb_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Select the minimum water quality requirement to source from when meeting demand.</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">PO = Potable Water</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">NP = Non-potable Water</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">RW = Rainwater</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">SW = Stormwater</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">GW = Greywater</span></p></body></html>"))
        self.dagg_dp_morningpic_2.setToolTip(_translate("Urbplanbb_Dialog", "approx. 6am to 12pm"))
        self.dagg_dp_morningpic_2.setWhatsThis(_translate("Urbplanbb_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Select the minimum water quality requirement to source from when meeting demand.</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">PO = Potable Water</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">NP = Non-potable Water</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">RW = Rainwater</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">SW = Stormwater</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">GW = Greywater</span></p></body></html>"))
        self.dagg_dp_nightpic_2.setToolTip(_translate("Urbplanbb_Dialog", "approx. 6am to 12pm"))
        self.dagg_dp_nightpic_2.setWhatsThis(_translate("Urbplanbb_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Select the minimum water quality requirement to source from when meeting demand.</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">PO = Potable Water</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">NP = Non-potable Water</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">RW = Rainwater</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">SW = Stormwater</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">GW = Greywater</span></p></body></html>"))
        self.dp_kitchen_combo.setItemText(0, _translate("Urbplanbb_Dialog", "Standard 24h Diurnal Patttern"))
        self.dp_kitchen_combo.setItemText(1, _translate("Urbplanbb_Dialog", "Constant Hourly Pattern"))
        self.dp_kitchen_combo.setItemText(2, _translate("Urbplanbb_Dialog", "Office Hours Trapezoid (7am-7pm)"))
        self.dp_kitchen_combo.setItemText(3, _translate("Urbplanbb_Dialog", "After-hours Constant (6pm-6am)"))
        self.dp_kitchen_combo.setItemText(4, _translate("Urbplanbb_Dialog", "User-defined..."))
        self.demand_res_lbl.setText(_translate("Urbplanbb_Dialog", "<html><head/><body><p><span style=\" font-weight:600; font-style:italic;\">Configure Residential Demand Patterns:</span></p></body></html>"))
        self.dp_kitchen_lbl.setText(_translate("Urbplanbb_Dialog", "Kitchen"))
        self.dp_shower_lbl.setText(_translate("Urbplanbb_Dialog", "Shower"))
        self.dp_toilet_lbl.setText(_translate("Urbplanbb_Dialog", "Toilet"))
        self.dp_laundry_lbl.setText(_translate("Urbplanbb_Dialog", "Laundry"))
        self.dp_shower_combo.setItemText(0, _translate("Urbplanbb_Dialog", "Standard 24h Diurnal Patttern"))
        self.dp_shower_combo.setItemText(1, _translate("Urbplanbb_Dialog", "Constant Hourly Pattern"))
        self.dp_shower_combo.setItemText(2, _translate("Urbplanbb_Dialog", "Office Hours Trapezoid (7am-7pm)"))
        self.dp_shower_combo.setItemText(3, _translate("Urbplanbb_Dialog", "After-hours Constant (6pm-6am)"))
        self.dp_shower_combo.setItemText(4, _translate("Urbplanbb_Dialog", "User-defined..."))
        self.dp_toilet_combo.setItemText(0, _translate("Urbplanbb_Dialog", "Standard 24h Diurnal Patttern"))
        self.dp_toilet_combo.setItemText(1, _translate("Urbplanbb_Dialog", "Constant Hourly Pattern"))
        self.dp_toilet_combo.setItemText(2, _translate("Urbplanbb_Dialog", "Office Hours Trapezoid (7am-7pm)"))
        self.dp_toilet_combo.setItemText(3, _translate("Urbplanbb_Dialog", "After-hours Constant (6pm-6am)"))
        self.dp_toilet_combo.setItemText(4, _translate("Urbplanbb_Dialog", "User-defined..."))
        self.dp_laundry_combo.setItemText(0, _translate("Urbplanbb_Dialog", "Standard 24h Diurnal Patttern"))
        self.dp_laundry_combo.setItemText(1, _translate("Urbplanbb_Dialog", "Constant Hourly Pattern"))
        self.dp_laundry_combo.setItemText(2, _translate("Urbplanbb_Dialog", "Office Hours Trapezoid (7am-7pm)"))
        self.dp_laundry_combo.setItemText(3, _translate("Urbplanbb_Dialog", "After-hours Constant (6pm-6am)"))
        self.dp_laundry_combo.setItemText(4, _translate("Urbplanbb_Dialog", "User-defined..."))
        self.dp_irrigate_lbl.setText(_translate("Urbplanbb_Dialog", "Irrigation"))
        self.dp_irrigate_combo.setItemText(0, _translate("Urbplanbb_Dialog", "Standard 24h Diurnal Patttern"))
        self.dp_irrigate_combo.setItemText(1, _translate("Urbplanbb_Dialog", "Constant Hourly Pattern"))
        self.dp_irrigate_combo.setItemText(2, _translate("Urbplanbb_Dialog", "Office Hours Trapezoid (7am-7pm)"))
        self.dp_irrigate_combo.setItemText(3, _translate("Urbplanbb_Dialog", "After-hours Constant (6pm-6am)"))
        self.dp_irrigate_combo.setItemText(4, _translate("Urbplanbb_Dialog", "User-defined..."))
        self.demand_nonres_lbl.setText(_translate("Urbplanbb_Dialog", "<html><head/><body><p><span style=\" font-weight:600; font-style:italic;\">Configure Non-Residential Demand Patterns:</span></p></body></html>"))
        self.dp_com_combo.setItemText(0, _translate("Urbplanbb_Dialog", "Standard 24h Diurnal Patttern"))
        self.dp_com_combo.setItemText(1, _translate("Urbplanbb_Dialog", "Constant Hourly Pattern"))
        self.dp_com_combo.setItemText(2, _translate("Urbplanbb_Dialog", "Office Hours Trapezoid (7am-7pm)"))
        self.dp_com_combo.setItemText(3, _translate("Urbplanbb_Dialog", "After-hours Constant (6pm-6am)"))
        self.dp_com_combo.setItemText(4, _translate("Urbplanbb_Dialog", "User-defined..."))
        self.dp_com_lbl.setText(_translate("Urbplanbb_Dialog", "Commercial"))
        self.dp_ind_combo.setItemText(0, _translate("Urbplanbb_Dialog", "Standard 24h Diurnal Patttern"))
        self.dp_ind_combo.setItemText(1, _translate("Urbplanbb_Dialog", "Constant Hourly Pattern"))
        self.dp_ind_combo.setItemText(2, _translate("Urbplanbb_Dialog", "Office Hours Trapezoid (7am-7pm)"))
        self.dp_ind_combo.setItemText(3, _translate("Urbplanbb_Dialog", "After-hours Constant (6pm-6am)"))
        self.dp_ind_combo.setItemText(4, _translate("Urbplanbb_Dialog", "User-defined..."))
        self.dp_ind_lbl.setText(_translate("Urbplanbb_Dialog", "Industrial"))
        self.dp_kitchen_custom.setText(_translate("Urbplanbb_Dialog", "Custom..."))
        self.dp_shower_custom.setText(_translate("Urbplanbb_Dialog", "Custom..."))
        self.dp_toilet_custom.setText(_translate("Urbplanbb_Dialog", "Custom..."))
        self.dp_laundry_custom.setText(_translate("Urbplanbb_Dialog", "Custom..."))
        self.dp_irrigate_custom.setText(_translate("Urbplanbb_Dialog", "Custom..."))
        self.dp_com_custom.setText(_translate("Urbplanbb_Dialog", "Custom..."))
        self.dp_ind_custom.setText(_translate("Urbplanbb_Dialog", "Custom..."))
        self.dp_pubirr_combo.setItemText(0, _translate("Urbplanbb_Dialog", "Standard 24h Diurnal Patttern"))
        self.dp_pubirr_combo.setItemText(1, _translate("Urbplanbb_Dialog", "Constant Hourly Pattern"))
        self.dp_pubirr_combo.setItemText(2, _translate("Urbplanbb_Dialog", "Office Hours Trapezoid (7am-7pm)"))
        self.dp_pubirr_combo.setItemText(3, _translate("Urbplanbb_Dialog", "After-hours Constant (6pm-6am)"))
        self.dp_pubirr_combo.setItemText(4, _translate("Urbplanbb_Dialog", "User-defined..."))
        self.dp_pubirr_lbl.setText(_translate("Urbplanbb_Dialog", "Irrigation"))
        self.dp_pubirr_custom.setText(_translate("Urbplanbb_Dialog", "Custom..."))
        self.ws_dynamics_title.setText(_translate("Urbplanbb_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">WEEKLY &amp; SEASONAL DYNAMICS</span></p></body></html>"))
        self.wsd_seasonal_title.setText(_translate("Urbplanbb_Dialog", "<html><head/><body><p><span style=\" font-weight:600; font-style:italic;\">Weekly, Monthly &amp; Seasonal Settings</span></p></body></html>"))
        self.wsd_regionsupply_lbl.setText(_translate("Urbplanbb_Dialog", "Regional Supply Rule:"))
        self.wsd_altwater_title.setText(_translate("Urbplanbb_Dialog", "<html><head/><body><p><span style=\" font-weight:600; font-style:italic;\">Rules for Alternative Water Sources</span></p></body></html>"))
        self.wsd_regionsupply_combo.setItemText(0, _translate("Urbplanbb_Dialog", "Supply closest locations first"))
        self.wsd_regionsupply_combo.setItemText(1, _translate("Urbplanbb_Dialog", "Supply entire region equally"))
        self.wsd_globalenduse_lbl.setText(_translate("Urbplanbb_Dialog", "Global End Use Priorities:"))
        self.wsd_init_store_lbl.setText(_translate("Urbplanbb_Dialog", "Initial Storage Levels [% capacity]:"))
        self.wsd_pubirri_lbl.setText(_translate("Urbplanbb_Dialog", "Public Irrigation (open spaces)"))
        self.wsd_privirri_lbl.setText(_translate("Urbplanbb_Dialog", "Private Outdoor (garden)"))
        self.wsd_privinnocontact_lbl.setText(_translate("Urbplanbb_Dialog", "Private Indoor (non-contact - toilet, laundry)"))
        self.wsd_privincontact_lbl.setText(_translate("Urbplanbb_Dialog", "Private Indoor (contact - kitchen, shower)"))
        self.wsd_init_store_spin.setSuffix(_translate("Urbplanbb_Dialog", "%"))
        self.wsd_globalenduse_lbl2.setText(_translate("Urbplanbb_Dialog", "<html><head/><body><p><span style=\" font-style:italic;\">(0 = do not supply,</span></p></body></html>"))
        self.wsd_globalenduse_lbl3.setText(_translate("Urbplanbb_Dialog", "<html><head/><body><p><span style=\" font-style:italic;\">1 = highest priority)</span></p></body></html>"))
        self.wsd_noirrigaterain_check.setText(_translate("Urbplanbb_Dialog", "Do not irrigate during rainfall event"))
        self.wsd_irrigateresume_lbl.setText(_translate("Urbplanbb_Dialog", "Average lead time for resuming irrigation after rain event:"))
        self.wsd_irrigateresume_spin.setSuffix(_translate("Urbplanbb_Dialog", " hours"))
        self.wsd_scaledata_lbl.setText(_translate("Urbplanbb_Dialog", "Scale Daily Demand using:"))
        self.wsd_behaviour_title.setText(_translate("Urbplanbb_Dialog", "<html><head/><body><p><span style=\" font-weight:600; font-style:italic;\">Settings for Behavioural Dynamics</span></p></body></html>"))
        self.wsd_scaledata_combo.setItemText(0, _translate("Urbplanbb_Dialog", "<none>"))
        self.wsd_globalavg_lbl.setText(_translate("Urbplanbb_Dialog", "Global Average:"))
        self.wsd_globalavg_check.setText(_translate("Urbplanbb_Dialog", "Calculate from Data"))
        self.wsd_numyears_lbl.setText(_translate("Urbplanbb_Dialog", "Number of years to use:"))
        self.wsd_numyears_spin.setSuffix(_translate("Urbplanbb_Dialog", " years"))
        self.wsd_numyears_lbl2.setText(_translate("Urbplanbb_Dialog", "<html><head/><body><p><span style=\" font-style:italic;\">(scaling factors will be repeated)</span></p></body></html>"))
        self.wsd_reducenres_check.setText(_translate("Urbplanbb_Dialog", "Reduce non-residential demands during weekends"))
        self.wsd_increaseres_check.setText(_translate("Urbplanbb_Dialog", "Increase residential demands during weekends"))
        self.wsd_weekend_lbl.setText(_translate("Urbplanbb_Dialog", "Weekend Demand Factors:"))
        self.wsd_weekend_lbl_2.setText(_translate("Urbplanbb_Dialog", "scaling factor"))
        self.wsd_weekend_lbl_3.setText(_translate("Urbplanbb_Dialog", "scaling factor"))
        self.wef_lbl.setWhatsThis(_translate("Urbplanbb_Dialog", "Select what design goals to consider and what priority they take over each other. Highest priority (1) and Lowest priority (3) influence technology\'s chance of being implemented. Note that equal priority can be set as well, in which case no one design rationale is more important than the other."))
        self.wef_lbl.setText(_translate("Urbplanbb_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">WATER LOSSES &amp; EFFICIENCY SETTINGS FOR THE CASE STUDY</span></p></body></html>"))
        self.WEF_rating_system_lbl.setText(_translate("Urbplanbb_Dialog", "Rating System:"))
        self.WEF_loc_house_check.setText(_translate("Urbplanbb_Dialog", "Houses"))
        self.WEF_loc_nonres_check.setText(_translate("Urbplanbb_Dialog", "All Non-Residential Districts"))
        self.WEF_rating_system_combo.setItemText(0, _translate("Urbplanbb_Dialog", "AS/NZ 6400:2005"))
        self.WEF_rating_system_combo.setItemText(1, _translate("Urbplanbb_Dialog", "Others..."))
        self.WED_loc_lbl.setText(_translate("Urbplanbb_Dialog", "Locations:"))
        self.WEF_loc_apart_check.setText(_translate("Urbplanbb_Dialog", "Apartments"))
        self.WED_loc_lbl2.setText(_translate("Urbplanbb_Dialog", "Method for determining water efficiency within region:"))
        self.WEF_constant_radio.setText(_translate("Urbplanbb_Dialog", "Constant Rating"))
        self.WEF_distribution_radio.setText(_translate("Urbplanbb_Dialog", "Freq. Distribution"))
        self.WEF_constant_lbl.setText(_translate("Urbplanbb_Dialog", "Select rating level:"))
        self.WEF_constant_combo.setItemText(0, _translate("Urbplanbb_Dialog", "1 Star"))
        self.WEF_constant_combo.setItemText(1, _translate("Urbplanbb_Dialog", "2 Stars"))
        self.WEF_constant_combo.setItemText(2, _translate("Urbplanbb_Dialog", "3 Stars"))
        self.WEF_constant_combo.setItemText(3, _translate("Urbplanbb_Dialog", "4 Stars"))
        self.WEF_constant_combo.setItemText(4, _translate("Urbplanbb_Dialog", "5 Stars"))
        self.WEF_constant_combo.setItemText(5, _translate("Urbplanbb_Dialog", "6 Stars"))
        self.WEF_consider.setText(_translate("Urbplanbb_Dialog", "Consider Water Efficiency in Modelling Water Demands"))
        self.WEF_distribution_lbl2.setText(_translate("Urbplanbb_Dialog", "Select highest possible rating:"))
        self.WEF_distribution_combo.setItemText(0, _translate("Urbplanbb_Dialog", "1 Star"))
        self.WEF_distribution_combo.setItemText(1, _translate("Urbplanbb_Dialog", "2 Stars"))
        self.WEF_distribution_combo.setItemText(2, _translate("Urbplanbb_Dialog", "3 Stars"))
        self.WEF_distribution_combo.setItemText(3, _translate("Urbplanbb_Dialog", "4 Stars"))
        self.WEF_distribution_combo.setItemText(4, _translate("Urbplanbb_Dialog", "5 Stars"))
        self.WEF_distribution_combo.setItemText(5, _translate("Urbplanbb_Dialog", "6 Stars"))
        self.WEF_distribution_lbl3.setText(_translate("Urbplanbb_Dialog", "Type of sampling distribution:"))
        self.WEF_distribution_select.setItemText(0, _translate("Urbplanbb_Dialog", "Log-Normal Distribution (High)"))
        self.WEF_distribution_select.setItemText(1, _translate("Urbplanbb_Dialog", "Log-Normal Distribution (Low)"))
        self.WEF_distribution_select.setItemText(2, _translate("Urbplanbb_Dialog", "Normal Distribution"))
        self.WEF_distribution_select.setItemText(3, _translate("Urbplanbb_Dialog", "Uniform Distribution"))
        self.WEF_distribution_check.setText(_translate("Urbplanbb_Dialog", "Include \'no rating\' within distribution"))
        self.LOSS_status.setText(_translate("Urbplanbb_Dialog", "Estimate Water Losses from Water Supply System for region"))
        self.LOSS_lbl.setText(_translate("Urbplanbb_Dialog", "Volume lost from system [% of total demand]:"))
        self.LOSS_spin.setSuffix(_translate("Urbplanbb_Dialog", "%"))
        self.pollution_check.setTabText(self.pollution_check.indexOf(self.tab), _translate("Urbplanbb_Dialog", "Water Use"))
        self.checkBox.setText(_translate("Urbplanbb_Dialog", "Determine stormwater pollution emissions from urban areas"))
        self.park_title.setText(_translate("Urbplanbb_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">URBAN WATER POLLUTION EMISSIONS</span></p></body></html>"))
        self.pollution_check.setTabText(self.pollution_check.indexOf(self.connectivity_tab), _translate("Urbplanbb_Dialog", "Water Pollution"))
        self.footer_lbl.setText(_translate("Urbplanbb_Dialog", "<html><head/><body><p><span style=\" font-style:italic;\">UrbanBEATS - md_urbplanbb module</span></p></body></html>"))
        self.help_button.setText(_translate("Urbplanbb_Dialog", "Help"))

import ubeats_rc
